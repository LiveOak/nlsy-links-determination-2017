//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Nls.Base79 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("LinksDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class LinksDataSet : global::System.Data.DataSet {
        
        private tblSurveyTimeDataTable tabletblSurveyTime;
        
        private tblBabyDaddyDataTable tabletblBabyDaddy;
        
        private vewSurveyTimeMostRecentDataTable tablevewSurveyTimeMostRecent;
        
        private tblFatherOfGen2DataTable tabletblFatherOfGen2;
        
        private tblRosterGen1DataTable tabletblRosterGen1;
        
        private tblResponseDataTable tabletblResponse;
        
        private tblMarkerGen1DataTable tabletblMarkerGen1;
        
        private tblMarkerGen2DataTable tabletblMarkerGen2;
        
        private tblParentsOfGen1RetroDataTable tabletblParentsOfGen1Retro;
        
        private tblParentsOfGen1CurrentDataTable tabletblParentsOfGen1Current;
        
        private tblOutcomeDataTable tabletblOutcome;
        
        private tblSubjectDataTable tabletblSubject;
        
        private tblRelatedStructureDataTable tabletblRelatedStructure;
        
        private tblRelatedValuesDataTable tabletblRelatedValues;
        
        private tblSubjectDetailsDataTable tabletblSubjectDetails;
        
        private tblMzManualDataTable tabletblMzManual;
        
        private tblRosterGen1AssignmentDataTable tabletblRosterGen1Assignment;
        
        private tblVariableDataTable tabletblVariable;
        
        private tblItemDataTable tabletblItem;
        
        private tblRelatedValuesArchiveDataTable tabletblRelatedValuesArchive;
        
        private global::System.Data.DataRelation relationFK_tblSurveyTime_tblSubject;
        
        private global::System.Data.DataRelation relationFK_tblBabyDaddy_tblSubject;
        
        private global::System.Data.DataRelation relationFK_tblFatherOfGen2_tblSubject;
        
        private global::System.Data.DataRelation relationFK_tblResponse_tblSubject;
        
        private global::System.Data.DataRelation relationFK_tblParentsOfGen1Retro_tblSubject;
        
        private global::System.Data.DataRelation relationFK_tblParentsOfGen1Current_tblSubject;
        
        private global::System.Data.DataRelation relationFK_tblOutcome_tblSubject;
        
        private global::System.Data.DataRelation relationFK_tblRosterGen1_tblRelatedStructure;
        
        private global::System.Data.DataRelation relationFK_tblMarkerGen1_tblRelatedStructure;
        
        private global::System.Data.DataRelation relationFK_tblMarkerGen2_tblRelatedStructure;
        
        private global::System.Data.DataRelation relationFK_tblRelatedStructure_tblSubject_Subject1;
        
        private global::System.Data.DataRelation relationFK_tblRelatedStructure_tblSubject_Subject2;
        
        private global::System.Data.DataRelation relationFK_tblRelatedValues_tblRelatedStructure;
        
        private global::System.Data.DataRelation relationFK_tblSubjectDetails_tblSubject;
        
        private global::System.Data.DataRelation relationFK_tblVariable_79_tblItem_79;
        
        private global::System.Data.DataRelation relationFK_tblResponse_tblItem_79;
        
        private global::System.Data.DataRelation relationFK_tblRelatedValuesArchive_tblLURosterGen1Assignment;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LinksDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected LinksDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["tblSurveyTime"] != null)) {
                    base.Tables.Add(new tblSurveyTimeDataTable(ds.Tables["tblSurveyTime"]));
                }
                if ((ds.Tables["tblBabyDaddy"] != null)) {
                    base.Tables.Add(new tblBabyDaddyDataTable(ds.Tables["tblBabyDaddy"]));
                }
                if ((ds.Tables["vewSurveyTimeMostRecent"] != null)) {
                    base.Tables.Add(new vewSurveyTimeMostRecentDataTable(ds.Tables["vewSurveyTimeMostRecent"]));
                }
                if ((ds.Tables["tblFatherOfGen2"] != null)) {
                    base.Tables.Add(new tblFatherOfGen2DataTable(ds.Tables["tblFatherOfGen2"]));
                }
                if ((ds.Tables["tblRosterGen1"] != null)) {
                    base.Tables.Add(new tblRosterGen1DataTable(ds.Tables["tblRosterGen1"]));
                }
                if ((ds.Tables["tblResponse"] != null)) {
                    base.Tables.Add(new tblResponseDataTable(ds.Tables["tblResponse"]));
                }
                if ((ds.Tables["tblMarkerGen1"] != null)) {
                    base.Tables.Add(new tblMarkerGen1DataTable(ds.Tables["tblMarkerGen1"]));
                }
                if ((ds.Tables["tblMarkerGen2"] != null)) {
                    base.Tables.Add(new tblMarkerGen2DataTable(ds.Tables["tblMarkerGen2"]));
                }
                if ((ds.Tables["tblParentsOfGen1Retro"] != null)) {
                    base.Tables.Add(new tblParentsOfGen1RetroDataTable(ds.Tables["tblParentsOfGen1Retro"]));
                }
                if ((ds.Tables["tblParentsOfGen1Current"] != null)) {
                    base.Tables.Add(new tblParentsOfGen1CurrentDataTable(ds.Tables["tblParentsOfGen1Current"]));
                }
                if ((ds.Tables["tblOutcome"] != null)) {
                    base.Tables.Add(new tblOutcomeDataTable(ds.Tables["tblOutcome"]));
                }
                if ((ds.Tables["tblSubject"] != null)) {
                    base.Tables.Add(new tblSubjectDataTable(ds.Tables["tblSubject"]));
                }
                if ((ds.Tables["tblRelatedStructure"] != null)) {
                    base.Tables.Add(new tblRelatedStructureDataTable(ds.Tables["tblRelatedStructure"]));
                }
                if ((ds.Tables["tblRelatedValues"] != null)) {
                    base.Tables.Add(new tblRelatedValuesDataTable(ds.Tables["tblRelatedValues"]));
                }
                if ((ds.Tables["tblSubjectDetails"] != null)) {
                    base.Tables.Add(new tblSubjectDetailsDataTable(ds.Tables["tblSubjectDetails"]));
                }
                if ((ds.Tables["tblMzManual"] != null)) {
                    base.Tables.Add(new tblMzManualDataTable(ds.Tables["tblMzManual"]));
                }
                if ((ds.Tables["tblRosterGen1Assignment"] != null)) {
                    base.Tables.Add(new tblRosterGen1AssignmentDataTable(ds.Tables["tblRosterGen1Assignment"]));
                }
                if ((ds.Tables["tblVariable"] != null)) {
                    base.Tables.Add(new tblVariableDataTable(ds.Tables["tblVariable"]));
                }
                if ((ds.Tables["tblItem"] != null)) {
                    base.Tables.Add(new tblItemDataTable(ds.Tables["tblItem"]));
                }
                if ((ds.Tables["tblRelatedValuesArchive"] != null)) {
                    base.Tables.Add(new tblRelatedValuesArchiveDataTable(ds.Tables["tblRelatedValuesArchive"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblSurveyTimeDataTable tblSurveyTime {
            get {
                return this.tabletblSurveyTime;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblBabyDaddyDataTable tblBabyDaddy {
            get {
                return this.tabletblBabyDaddy;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vewSurveyTimeMostRecentDataTable vewSurveyTimeMostRecent {
            get {
                return this.tablevewSurveyTimeMostRecent;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblFatherOfGen2DataTable tblFatherOfGen2 {
            get {
                return this.tabletblFatherOfGen2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblRosterGen1DataTable tblRosterGen1 {
            get {
                return this.tabletblRosterGen1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblResponseDataTable tblResponse {
            get {
                return this.tabletblResponse;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblMarkerGen1DataTable tblMarkerGen1 {
            get {
                return this.tabletblMarkerGen1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblMarkerGen2DataTable tblMarkerGen2 {
            get {
                return this.tabletblMarkerGen2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblParentsOfGen1RetroDataTable tblParentsOfGen1Retro {
            get {
                return this.tabletblParentsOfGen1Retro;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblParentsOfGen1CurrentDataTable tblParentsOfGen1Current {
            get {
                return this.tabletblParentsOfGen1Current;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblOutcomeDataTable tblOutcome {
            get {
                return this.tabletblOutcome;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblSubjectDataTable tblSubject {
            get {
                return this.tabletblSubject;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblRelatedStructureDataTable tblRelatedStructure {
            get {
                return this.tabletblRelatedStructure;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblRelatedValuesDataTable tblRelatedValues {
            get {
                return this.tabletblRelatedValues;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblSubjectDetailsDataTable tblSubjectDetails {
            get {
                return this.tabletblSubjectDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblMzManualDataTable tblMzManual {
            get {
                return this.tabletblMzManual;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblRosterGen1AssignmentDataTable tblRosterGen1Assignment {
            get {
                return this.tabletblRosterGen1Assignment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblVariableDataTable tblVariable {
            get {
                return this.tabletblVariable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblItemDataTable tblItem {
            get {
                return this.tabletblItem;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblRelatedValuesArchiveDataTable tblRelatedValuesArchive {
            get {
                return this.tabletblRelatedValuesArchive;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            LinksDataSet cln = ((LinksDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["tblSurveyTime"] != null)) {
                    base.Tables.Add(new tblSurveyTimeDataTable(ds.Tables["tblSurveyTime"]));
                }
                if ((ds.Tables["tblBabyDaddy"] != null)) {
                    base.Tables.Add(new tblBabyDaddyDataTable(ds.Tables["tblBabyDaddy"]));
                }
                if ((ds.Tables["vewSurveyTimeMostRecent"] != null)) {
                    base.Tables.Add(new vewSurveyTimeMostRecentDataTable(ds.Tables["vewSurveyTimeMostRecent"]));
                }
                if ((ds.Tables["tblFatherOfGen2"] != null)) {
                    base.Tables.Add(new tblFatherOfGen2DataTable(ds.Tables["tblFatherOfGen2"]));
                }
                if ((ds.Tables["tblRosterGen1"] != null)) {
                    base.Tables.Add(new tblRosterGen1DataTable(ds.Tables["tblRosterGen1"]));
                }
                if ((ds.Tables["tblResponse"] != null)) {
                    base.Tables.Add(new tblResponseDataTable(ds.Tables["tblResponse"]));
                }
                if ((ds.Tables["tblMarkerGen1"] != null)) {
                    base.Tables.Add(new tblMarkerGen1DataTable(ds.Tables["tblMarkerGen1"]));
                }
                if ((ds.Tables["tblMarkerGen2"] != null)) {
                    base.Tables.Add(new tblMarkerGen2DataTable(ds.Tables["tblMarkerGen2"]));
                }
                if ((ds.Tables["tblParentsOfGen1Retro"] != null)) {
                    base.Tables.Add(new tblParentsOfGen1RetroDataTable(ds.Tables["tblParentsOfGen1Retro"]));
                }
                if ((ds.Tables["tblParentsOfGen1Current"] != null)) {
                    base.Tables.Add(new tblParentsOfGen1CurrentDataTable(ds.Tables["tblParentsOfGen1Current"]));
                }
                if ((ds.Tables["tblOutcome"] != null)) {
                    base.Tables.Add(new tblOutcomeDataTable(ds.Tables["tblOutcome"]));
                }
                if ((ds.Tables["tblSubject"] != null)) {
                    base.Tables.Add(new tblSubjectDataTable(ds.Tables["tblSubject"]));
                }
                if ((ds.Tables["tblRelatedStructure"] != null)) {
                    base.Tables.Add(new tblRelatedStructureDataTable(ds.Tables["tblRelatedStructure"]));
                }
                if ((ds.Tables["tblRelatedValues"] != null)) {
                    base.Tables.Add(new tblRelatedValuesDataTable(ds.Tables["tblRelatedValues"]));
                }
                if ((ds.Tables["tblSubjectDetails"] != null)) {
                    base.Tables.Add(new tblSubjectDetailsDataTable(ds.Tables["tblSubjectDetails"]));
                }
                if ((ds.Tables["tblMzManual"] != null)) {
                    base.Tables.Add(new tblMzManualDataTable(ds.Tables["tblMzManual"]));
                }
                if ((ds.Tables["tblRosterGen1Assignment"] != null)) {
                    base.Tables.Add(new tblRosterGen1AssignmentDataTable(ds.Tables["tblRosterGen1Assignment"]));
                }
                if ((ds.Tables["tblVariable"] != null)) {
                    base.Tables.Add(new tblVariableDataTable(ds.Tables["tblVariable"]));
                }
                if ((ds.Tables["tblItem"] != null)) {
                    base.Tables.Add(new tblItemDataTable(ds.Tables["tblItem"]));
                }
                if ((ds.Tables["tblRelatedValuesArchive"] != null)) {
                    base.Tables.Add(new tblRelatedValuesArchiveDataTable(ds.Tables["tblRelatedValuesArchive"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tabletblSurveyTime = ((tblSurveyTimeDataTable)(base.Tables["tblSurveyTime"]));
            if ((initTable == true)) {
                if ((this.tabletblSurveyTime != null)) {
                    this.tabletblSurveyTime.InitVars();
                }
            }
            this.tabletblBabyDaddy = ((tblBabyDaddyDataTable)(base.Tables["tblBabyDaddy"]));
            if ((initTable == true)) {
                if ((this.tabletblBabyDaddy != null)) {
                    this.tabletblBabyDaddy.InitVars();
                }
            }
            this.tablevewSurveyTimeMostRecent = ((vewSurveyTimeMostRecentDataTable)(base.Tables["vewSurveyTimeMostRecent"]));
            if ((initTable == true)) {
                if ((this.tablevewSurveyTimeMostRecent != null)) {
                    this.tablevewSurveyTimeMostRecent.InitVars();
                }
            }
            this.tabletblFatherOfGen2 = ((tblFatherOfGen2DataTable)(base.Tables["tblFatherOfGen2"]));
            if ((initTable == true)) {
                if ((this.tabletblFatherOfGen2 != null)) {
                    this.tabletblFatherOfGen2.InitVars();
                }
            }
            this.tabletblRosterGen1 = ((tblRosterGen1DataTable)(base.Tables["tblRosterGen1"]));
            if ((initTable == true)) {
                if ((this.tabletblRosterGen1 != null)) {
                    this.tabletblRosterGen1.InitVars();
                }
            }
            this.tabletblResponse = ((tblResponseDataTable)(base.Tables["tblResponse"]));
            if ((initTable == true)) {
                if ((this.tabletblResponse != null)) {
                    this.tabletblResponse.InitVars();
                }
            }
            this.tabletblMarkerGen1 = ((tblMarkerGen1DataTable)(base.Tables["tblMarkerGen1"]));
            if ((initTable == true)) {
                if ((this.tabletblMarkerGen1 != null)) {
                    this.tabletblMarkerGen1.InitVars();
                }
            }
            this.tabletblMarkerGen2 = ((tblMarkerGen2DataTable)(base.Tables["tblMarkerGen2"]));
            if ((initTable == true)) {
                if ((this.tabletblMarkerGen2 != null)) {
                    this.tabletblMarkerGen2.InitVars();
                }
            }
            this.tabletblParentsOfGen1Retro = ((tblParentsOfGen1RetroDataTable)(base.Tables["tblParentsOfGen1Retro"]));
            if ((initTable == true)) {
                if ((this.tabletblParentsOfGen1Retro != null)) {
                    this.tabletblParentsOfGen1Retro.InitVars();
                }
            }
            this.tabletblParentsOfGen1Current = ((tblParentsOfGen1CurrentDataTable)(base.Tables["tblParentsOfGen1Current"]));
            if ((initTable == true)) {
                if ((this.tabletblParentsOfGen1Current != null)) {
                    this.tabletblParentsOfGen1Current.InitVars();
                }
            }
            this.tabletblOutcome = ((tblOutcomeDataTable)(base.Tables["tblOutcome"]));
            if ((initTable == true)) {
                if ((this.tabletblOutcome != null)) {
                    this.tabletblOutcome.InitVars();
                }
            }
            this.tabletblSubject = ((tblSubjectDataTable)(base.Tables["tblSubject"]));
            if ((initTable == true)) {
                if ((this.tabletblSubject != null)) {
                    this.tabletblSubject.InitVars();
                }
            }
            this.tabletblRelatedStructure = ((tblRelatedStructureDataTable)(base.Tables["tblRelatedStructure"]));
            if ((initTable == true)) {
                if ((this.tabletblRelatedStructure != null)) {
                    this.tabletblRelatedStructure.InitVars();
                }
            }
            this.tabletblRelatedValues = ((tblRelatedValuesDataTable)(base.Tables["tblRelatedValues"]));
            if ((initTable == true)) {
                if ((this.tabletblRelatedValues != null)) {
                    this.tabletblRelatedValues.InitVars();
                }
            }
            this.tabletblSubjectDetails = ((tblSubjectDetailsDataTable)(base.Tables["tblSubjectDetails"]));
            if ((initTable == true)) {
                if ((this.tabletblSubjectDetails != null)) {
                    this.tabletblSubjectDetails.InitVars();
                }
            }
            this.tabletblMzManual = ((tblMzManualDataTable)(base.Tables["tblMzManual"]));
            if ((initTable == true)) {
                if ((this.tabletblMzManual != null)) {
                    this.tabletblMzManual.InitVars();
                }
            }
            this.tabletblRosterGen1Assignment = ((tblRosterGen1AssignmentDataTable)(base.Tables["tblRosterGen1Assignment"]));
            if ((initTable == true)) {
                if ((this.tabletblRosterGen1Assignment != null)) {
                    this.tabletblRosterGen1Assignment.InitVars();
                }
            }
            this.tabletblVariable = ((tblVariableDataTable)(base.Tables["tblVariable"]));
            if ((initTable == true)) {
                if ((this.tabletblVariable != null)) {
                    this.tabletblVariable.InitVars();
                }
            }
            this.tabletblItem = ((tblItemDataTable)(base.Tables["tblItem"]));
            if ((initTable == true)) {
                if ((this.tabletblItem != null)) {
                    this.tabletblItem.InitVars();
                }
            }
            this.tabletblRelatedValuesArchive = ((tblRelatedValuesArchiveDataTable)(base.Tables["tblRelatedValuesArchive"]));
            if ((initTable == true)) {
                if ((this.tabletblRelatedValuesArchive != null)) {
                    this.tabletblRelatedValuesArchive.InitVars();
                }
            }
            this.relationFK_tblSurveyTime_tblSubject = this.Relations["FK_tblSurveyTime_tblSubject"];
            this.relationFK_tblBabyDaddy_tblSubject = this.Relations["FK_tblBabyDaddy_tblSubject"];
            this.relationFK_tblFatherOfGen2_tblSubject = this.Relations["FK_tblFatherOfGen2_tblSubject"];
            this.relationFK_tblResponse_tblSubject = this.Relations["FK_tblResponse_tblSubject"];
            this.relationFK_tblParentsOfGen1Retro_tblSubject = this.Relations["FK_tblParentsOfGen1Retro_tblSubject"];
            this.relationFK_tblParentsOfGen1Current_tblSubject = this.Relations["FK_tblParentsOfGen1Current_tblSubject"];
            this.relationFK_tblOutcome_tblSubject = this.Relations["FK_tblOutcome_tblSubject"];
            this.relationFK_tblRosterGen1_tblRelatedStructure = this.Relations["FK_tblRosterGen1_tblRelatedStructure"];
            this.relationFK_tblMarkerGen1_tblRelatedStructure = this.Relations["FK_tblMarkerGen1_tblRelatedStructure"];
            this.relationFK_tblMarkerGen2_tblRelatedStructure = this.Relations["FK_tblMarkerGen2_tblRelatedStructure"];
            this.relationFK_tblRelatedStructure_tblSubject_Subject1 = this.Relations["FK_tblRelatedStructure_tblSubject_Subject1"];
            this.relationFK_tblRelatedStructure_tblSubject_Subject2 = this.Relations["FK_tblRelatedStructure_tblSubject_Subject2"];
            this.relationFK_tblRelatedValues_tblRelatedStructure = this.Relations["FK_tblRelatedValues_tblRelatedStructure"];
            this.relationFK_tblSubjectDetails_tblSubject = this.Relations["FK_tblSubjectDetails_tblSubject"];
            this.relationFK_tblVariable_79_tblItem_79 = this.Relations["FK_tblVariable_79_tblItem_79"];
            this.relationFK_tblResponse_tblItem_79 = this.Relations["FK_tblResponse_tblItem_79"];
            this.relationFK_tblRelatedValuesArchive_tblLURosterGen1Assignment = this.Relations["FK_tblRelatedValuesArchive_tblLURosterGen1Assignment"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "LinksDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/LinksDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletblSurveyTime = new tblSurveyTimeDataTable();
            base.Tables.Add(this.tabletblSurveyTime);
            this.tabletblBabyDaddy = new tblBabyDaddyDataTable();
            base.Tables.Add(this.tabletblBabyDaddy);
            this.tablevewSurveyTimeMostRecent = new vewSurveyTimeMostRecentDataTable();
            base.Tables.Add(this.tablevewSurveyTimeMostRecent);
            this.tabletblFatherOfGen2 = new tblFatherOfGen2DataTable();
            base.Tables.Add(this.tabletblFatherOfGen2);
            this.tabletblRosterGen1 = new tblRosterGen1DataTable();
            base.Tables.Add(this.tabletblRosterGen1);
            this.tabletblResponse = new tblResponseDataTable();
            base.Tables.Add(this.tabletblResponse);
            this.tabletblMarkerGen1 = new tblMarkerGen1DataTable();
            base.Tables.Add(this.tabletblMarkerGen1);
            this.tabletblMarkerGen2 = new tblMarkerGen2DataTable();
            base.Tables.Add(this.tabletblMarkerGen2);
            this.tabletblParentsOfGen1Retro = new tblParentsOfGen1RetroDataTable();
            base.Tables.Add(this.tabletblParentsOfGen1Retro);
            this.tabletblParentsOfGen1Current = new tblParentsOfGen1CurrentDataTable();
            base.Tables.Add(this.tabletblParentsOfGen1Current);
            this.tabletblOutcome = new tblOutcomeDataTable();
            base.Tables.Add(this.tabletblOutcome);
            this.tabletblSubject = new tblSubjectDataTable();
            base.Tables.Add(this.tabletblSubject);
            this.tabletblRelatedStructure = new tblRelatedStructureDataTable();
            base.Tables.Add(this.tabletblRelatedStructure);
            this.tabletblRelatedValues = new tblRelatedValuesDataTable();
            base.Tables.Add(this.tabletblRelatedValues);
            this.tabletblSubjectDetails = new tblSubjectDetailsDataTable();
            base.Tables.Add(this.tabletblSubjectDetails);
            this.tabletblMzManual = new tblMzManualDataTable();
            base.Tables.Add(this.tabletblMzManual);
            this.tabletblRosterGen1Assignment = new tblRosterGen1AssignmentDataTable();
            base.Tables.Add(this.tabletblRosterGen1Assignment);
            this.tabletblVariable = new tblVariableDataTable();
            base.Tables.Add(this.tabletblVariable);
            this.tabletblItem = new tblItemDataTable();
            base.Tables.Add(this.tabletblItem);
            this.tabletblRelatedValuesArchive = new tblRelatedValuesArchiveDataTable();
            base.Tables.Add(this.tabletblRelatedValuesArchive);
            this.relationFK_tblSurveyTime_tblSubject = new global::System.Data.DataRelation("FK_tblSurveyTime_tblSubject", new global::System.Data.DataColumn[] {
                        this.tabletblSubject.SubjectTagColumn}, new global::System.Data.DataColumn[] {
                        this.tabletblSurveyTime.SubjectTagColumn}, false);
            this.Relations.Add(this.relationFK_tblSurveyTime_tblSubject);
            this.relationFK_tblBabyDaddy_tblSubject = new global::System.Data.DataRelation("FK_tblBabyDaddy_tblSubject", new global::System.Data.DataColumn[] {
                        this.tabletblSubject.SubjectTagColumn}, new global::System.Data.DataColumn[] {
                        this.tabletblBabyDaddy.SubjectTagColumn}, false);
            this.Relations.Add(this.relationFK_tblBabyDaddy_tblSubject);
            this.relationFK_tblFatherOfGen2_tblSubject = new global::System.Data.DataRelation("FK_tblFatherOfGen2_tblSubject", new global::System.Data.DataColumn[] {
                        this.tabletblSubject.SubjectTagColumn}, new global::System.Data.DataColumn[] {
                        this.tabletblFatherOfGen2.SubjectTagColumn}, false);
            this.Relations.Add(this.relationFK_tblFatherOfGen2_tblSubject);
            this.relationFK_tblResponse_tblSubject = new global::System.Data.DataRelation("FK_tblResponse_tblSubject", new global::System.Data.DataColumn[] {
                        this.tabletblSubject.SubjectTagColumn}, new global::System.Data.DataColumn[] {
                        this.tabletblResponse.SubjectTagColumn}, false);
            this.Relations.Add(this.relationFK_tblResponse_tblSubject);
            this.relationFK_tblParentsOfGen1Retro_tblSubject = new global::System.Data.DataRelation("FK_tblParentsOfGen1Retro_tblSubject", new global::System.Data.DataColumn[] {
                        this.tabletblSubject.SubjectTagColumn}, new global::System.Data.DataColumn[] {
                        this.tabletblParentsOfGen1Retro.SubjectTagColumn}, false);
            this.Relations.Add(this.relationFK_tblParentsOfGen1Retro_tblSubject);
            this.relationFK_tblParentsOfGen1Current_tblSubject = new global::System.Data.DataRelation("FK_tblParentsOfGen1Current_tblSubject", new global::System.Data.DataColumn[] {
                        this.tabletblSubject.SubjectTagColumn}, new global::System.Data.DataColumn[] {
                        this.tabletblParentsOfGen1Current.SubjectTagColumn}, false);
            this.Relations.Add(this.relationFK_tblParentsOfGen1Current_tblSubject);
            this.relationFK_tblOutcome_tblSubject = new global::System.Data.DataRelation("FK_tblOutcome_tblSubject", new global::System.Data.DataColumn[] {
                        this.tabletblSubject.SubjectTagColumn}, new global::System.Data.DataColumn[] {
                        this.tabletblOutcome.SubjectTagColumn}, false);
            this.Relations.Add(this.relationFK_tblOutcome_tblSubject);
            this.relationFK_tblRosterGen1_tblRelatedStructure = new global::System.Data.DataRelation("FK_tblRosterGen1_tblRelatedStructure", new global::System.Data.DataColumn[] {
                        this.tabletblRelatedStructure.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletblRosterGen1.RelatedIDColumn}, false);
            this.Relations.Add(this.relationFK_tblRosterGen1_tblRelatedStructure);
            this.relationFK_tblMarkerGen1_tblRelatedStructure = new global::System.Data.DataRelation("FK_tblMarkerGen1_tblRelatedStructure", new global::System.Data.DataColumn[] {
                        this.tabletblRelatedStructure.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletblMarkerGen1.RelatedIDColumn}, false);
            this.Relations.Add(this.relationFK_tblMarkerGen1_tblRelatedStructure);
            this.relationFK_tblMarkerGen2_tblRelatedStructure = new global::System.Data.DataRelation("FK_tblMarkerGen2_tblRelatedStructure", new global::System.Data.DataColumn[] {
                        this.tabletblRelatedStructure.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletblMarkerGen2.RelatedIDColumn}, false);
            this.Relations.Add(this.relationFK_tblMarkerGen2_tblRelatedStructure);
            this.relationFK_tblRelatedStructure_tblSubject_Subject1 = new global::System.Data.DataRelation("FK_tblRelatedStructure_tblSubject_Subject1", new global::System.Data.DataColumn[] {
                        this.tabletblSubject.SubjectTagColumn}, new global::System.Data.DataColumn[] {
                        this.tabletblRelatedStructure.SubjectTag_S1Column}, false);
            this.Relations.Add(this.relationFK_tblRelatedStructure_tblSubject_Subject1);
            this.relationFK_tblRelatedStructure_tblSubject_Subject2 = new global::System.Data.DataRelation("FK_tblRelatedStructure_tblSubject_Subject2", new global::System.Data.DataColumn[] {
                        this.tabletblSubject.SubjectTagColumn}, new global::System.Data.DataColumn[] {
                        this.tabletblRelatedStructure.SubjectTag_S2Column}, false);
            this.Relations.Add(this.relationFK_tblRelatedStructure_tblSubject_Subject2);
            this.relationFK_tblRelatedValues_tblRelatedStructure = new global::System.Data.DataRelation("FK_tblRelatedValues_tblRelatedStructure", new global::System.Data.DataColumn[] {
                        this.tabletblRelatedStructure.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletblRelatedValues.IDColumn}, false);
            this.Relations.Add(this.relationFK_tblRelatedValues_tblRelatedStructure);
            this.relationFK_tblSubjectDetails_tblSubject = new global::System.Data.DataRelation("FK_tblSubjectDetails_tblSubject", new global::System.Data.DataColumn[] {
                        this.tabletblSubject.SubjectTagColumn}, new global::System.Data.DataColumn[] {
                        this.tabletblSubjectDetails.SubjectTagColumn}, false);
            this.Relations.Add(this.relationFK_tblSubjectDetails_tblSubject);
            this.relationFK_tblVariable_79_tblItem_79 = new global::System.Data.DataRelation("FK_tblVariable_79_tblItem_79", new global::System.Data.DataColumn[] {
                        this.tabletblItem.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletblVariable.ItemColumn}, false);
            this.Relations.Add(this.relationFK_tblVariable_79_tblItem_79);
            this.relationFK_tblResponse_tblItem_79 = new global::System.Data.DataRelation("FK_tblResponse_tblItem_79", new global::System.Data.DataColumn[] {
                        this.tabletblItem.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletblResponse.ItemColumn}, false);
            this.Relations.Add(this.relationFK_tblResponse_tblItem_79);
            this.relationFK_tblRelatedValuesArchive_tblLURosterGen1Assignment = new global::System.Data.DataRelation("FK_tblRelatedValuesArchive_tblLURosterGen1Assignment", new global::System.Data.DataColumn[] {
                        this.tabletblRosterGen1Assignment.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tabletblRelatedValuesArchive.RosterAssignmentIDColumn}, false);
            this.Relations.Add(this.relationFK_tblRelatedValuesArchive_tblLURosterGen1Assignment);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetblSurveyTime() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetblBabyDaddy() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializevewSurveyTimeMostRecent() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetblFatherOfGen2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetblRosterGen1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetblResponse() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetblMarkerGen1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetblMarkerGen2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetblParentsOfGen1Retro() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetblParentsOfGen1Current() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetblOutcome() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetblSubject() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetblRelatedStructure() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetblRelatedValues() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetblSubjectDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetblMzManual() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetblRosterGen1Assignment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetblVariable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetblItem() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetblRelatedValuesArchive() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            LinksDataSet ds = new LinksDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tblSurveyTimeRowChangeEventHandler(object sender, tblSurveyTimeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tblBabyDaddyRowChangeEventHandler(object sender, tblBabyDaddyRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void vewSurveyTimeMostRecentRowChangeEventHandler(object sender, vewSurveyTimeMostRecentRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tblFatherOfGen2RowChangeEventHandler(object sender, tblFatherOfGen2RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tblRosterGen1RowChangeEventHandler(object sender, tblRosterGen1RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tblResponseRowChangeEventHandler(object sender, tblResponseRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tblMarkerGen1RowChangeEventHandler(object sender, tblMarkerGen1RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tblMarkerGen2RowChangeEventHandler(object sender, tblMarkerGen2RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tblParentsOfGen1RetroRowChangeEventHandler(object sender, tblParentsOfGen1RetroRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tblParentsOfGen1CurrentRowChangeEventHandler(object sender, tblParentsOfGen1CurrentRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tblOutcomeRowChangeEventHandler(object sender, tblOutcomeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tblSubjectRowChangeEventHandler(object sender, tblSubjectRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tblRelatedStructureRowChangeEventHandler(object sender, tblRelatedStructureRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tblRelatedValuesRowChangeEventHandler(object sender, tblRelatedValuesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tblSubjectDetailsRowChangeEventHandler(object sender, tblSubjectDetailsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tblMzManualRowChangeEventHandler(object sender, tblMzManualRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tblRosterGen1AssignmentRowChangeEventHandler(object sender, tblRosterGen1AssignmentRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tblVariableRowChangeEventHandler(object sender, tblVariableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tblItemRowChangeEventHandler(object sender, tblItemRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tblRelatedValuesArchiveRowChangeEventHandler(object sender, tblRelatedValuesArchiveRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblSurveyTimeDataTable : global::System.Data.TypedTableBase<tblSurveyTimeRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnSubjectTag;
            
            private global::System.Data.DataColumn columnSurveySource;
            
            private global::System.Data.DataColumn columnSurveyYear;
            
            private global::System.Data.DataColumn columnSurveyDate;
            
            private global::System.Data.DataColumn columnAgeSelfReportYears;
            
            private global::System.Data.DataColumn columnAgeCalculateYears;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSurveyTimeDataTable() {
                this.TableName = "tblSurveyTime";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblSurveyTimeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tblSurveyTimeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectTagColumn {
                get {
                    return this.columnSubjectTag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SurveySourceColumn {
                get {
                    return this.columnSurveySource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SurveyYearColumn {
                get {
                    return this.columnSurveyYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SurveyDateColumn {
                get {
                    return this.columnSurveyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeSelfReportYearsColumn {
                get {
                    return this.columnAgeSelfReportYears;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeCalculateYearsColumn {
                get {
                    return this.columnAgeCalculateYears;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSurveyTimeRow this[int index] {
                get {
                    return ((tblSurveyTimeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblSurveyTimeRowChangeEventHandler tblSurveyTimeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblSurveyTimeRowChangeEventHandler tblSurveyTimeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblSurveyTimeRowChangeEventHandler tblSurveyTimeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblSurveyTimeRowChangeEventHandler tblSurveyTimeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtblSurveyTimeRow(tblSurveyTimeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSurveyTimeRow AddtblSurveyTimeRow(tblSubjectRow parenttblSubjectRowByFK_tblSurveyTime_tblSubject, byte SurveySource, short SurveyYear, System.DateTime SurveyDate, double AgeSelfReportYears, double AgeCalculateYears) {
                tblSurveyTimeRow rowtblSurveyTimeRow = ((tblSurveyTimeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        SurveySource,
                        SurveyYear,
                        SurveyDate,
                        AgeSelfReportYears,
                        AgeCalculateYears};
                if ((parenttblSubjectRowByFK_tblSurveyTime_tblSubject != null)) {
                    columnValuesArray[1] = parenttblSubjectRowByFK_tblSurveyTime_tblSubject[0];
                }
                rowtblSurveyTimeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblSurveyTimeRow);
                return rowtblSurveyTimeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSurveyTimeRow FindByID(int ID) {
                return ((tblSurveyTimeRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tblSurveyTimeDataTable cln = ((tblSurveyTimeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblSurveyTimeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnSubjectTag = base.Columns["SubjectTag"];
                this.columnSurveySource = base.Columns["SurveySource"];
                this.columnSurveyYear = base.Columns["SurveyYear"];
                this.columnSurveyDate = base.Columns["SurveyDate"];
                this.columnAgeSelfReportYears = base.Columns["AgeSelfReportYears"];
                this.columnAgeCalculateYears = base.Columns["AgeCalculateYears"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnSubjectTag = new global::System.Data.DataColumn("SubjectTag", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectTag);
                this.columnSurveySource = new global::System.Data.DataColumn("SurveySource", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurveySource);
                this.columnSurveyYear = new global::System.Data.DataColumn("SurveyYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurveyYear);
                this.columnSurveyDate = new global::System.Data.DataColumn("SurveyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurveyDate);
                this.columnAgeSelfReportYears = new global::System.Data.DataColumn("AgeSelfReportYears", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeSelfReportYears);
                this.columnAgeCalculateYears = new global::System.Data.DataColumn("AgeCalculateYears", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeCalculateYears);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnSubjectTag.AllowDBNull = false;
                this.columnSurveySource.AllowDBNull = false;
                this.columnSurveyYear.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSurveyTimeRow NewtblSurveyTimeRow() {
                return ((tblSurveyTimeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblSurveyTimeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tblSurveyTimeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblSurveyTimeRowChanged != null)) {
                    this.tblSurveyTimeRowChanged(this, new tblSurveyTimeRowChangeEvent(((tblSurveyTimeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblSurveyTimeRowChanging != null)) {
                    this.tblSurveyTimeRowChanging(this, new tblSurveyTimeRowChangeEvent(((tblSurveyTimeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblSurveyTimeRowDeleted != null)) {
                    this.tblSurveyTimeRowDeleted(this, new tblSurveyTimeRowChangeEvent(((tblSurveyTimeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblSurveyTimeRowDeleting != null)) {
                    this.tblSurveyTimeRowDeleting(this, new tblSurveyTimeRowChangeEvent(((tblSurveyTimeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetblSurveyTimeRow(tblSurveyTimeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LinksDataSet ds = new LinksDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblSurveyTimeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblBabyDaddyDataTable : global::System.Data.TypedTableBase<tblBabyDaddyRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnSubjectTag;
            
            private global::System.Data.DataColumn columnChildLoopIndex;
            
            private global::System.Data.DataColumn columnSurveyYear;
            
            private global::System.Data.DataColumn columnBiodadInHH;
            
            private global::System.Data.DataColumn columnBiodadAlive;
            
            private global::System.Data.DataColumn columnBiodadEverLiveInHH;
            
            private global::System.Data.DataColumn columnBiodadLeftHHDate;
            
            private global::System.Data.DataColumn columnBiodadDeathDate;
            
            private global::System.Data.DataColumn columnBiodadDistanceFromHH;
            
            private global::System.Data.DataColumn columnBiodadAsthma;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblBabyDaddyDataTable() {
                this.TableName = "tblBabyDaddy";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblBabyDaddyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tblBabyDaddyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectTagColumn {
                get {
                    return this.columnSubjectTag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChildLoopIndexColumn {
                get {
                    return this.columnChildLoopIndex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SurveyYearColumn {
                get {
                    return this.columnSurveyYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiodadInHHColumn {
                get {
                    return this.columnBiodadInHH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiodadAliveColumn {
                get {
                    return this.columnBiodadAlive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiodadEverLiveInHHColumn {
                get {
                    return this.columnBiodadEverLiveInHH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiodadLeftHHDateColumn {
                get {
                    return this.columnBiodadLeftHHDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiodadDeathDateColumn {
                get {
                    return this.columnBiodadDeathDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiodadDistanceFromHHColumn {
                get {
                    return this.columnBiodadDistanceFromHH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiodadAsthmaColumn {
                get {
                    return this.columnBiodadAsthma;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblBabyDaddyRow this[int index] {
                get {
                    return ((tblBabyDaddyRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblBabyDaddyRowChangeEventHandler tblBabyDaddyRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblBabyDaddyRowChangeEventHandler tblBabyDaddyRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblBabyDaddyRowChangeEventHandler tblBabyDaddyRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblBabyDaddyRowChangeEventHandler tblBabyDaddyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtblBabyDaddyRow(tblBabyDaddyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblBabyDaddyRow AddtblBabyDaddyRow(tblSubjectRow parenttblSubjectRowByFK_tblBabyDaddy_tblSubject, byte ChildLoopIndex, short SurveyYear, short BiodadInHH, short BiodadAlive, short BiodadEverLiveInHH, System.DateTime BiodadLeftHHDate, System.DateTime BiodadDeathDate, short BiodadDistanceFromHH, short BiodadAsthma) {
                tblBabyDaddyRow rowtblBabyDaddyRow = ((tblBabyDaddyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        ChildLoopIndex,
                        SurveyYear,
                        BiodadInHH,
                        BiodadAlive,
                        BiodadEverLiveInHH,
                        BiodadLeftHHDate,
                        BiodadDeathDate,
                        BiodadDistanceFromHH,
                        BiodadAsthma};
                if ((parenttblSubjectRowByFK_tblBabyDaddy_tblSubject != null)) {
                    columnValuesArray[1] = parenttblSubjectRowByFK_tblBabyDaddy_tblSubject[0];
                }
                rowtblBabyDaddyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblBabyDaddyRow);
                return rowtblBabyDaddyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblBabyDaddyRow FindByID(long ID) {
                return ((tblBabyDaddyRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tblBabyDaddyDataTable cln = ((tblBabyDaddyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblBabyDaddyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnSubjectTag = base.Columns["SubjectTag"];
                this.columnChildLoopIndex = base.Columns["ChildLoopIndex"];
                this.columnSurveyYear = base.Columns["SurveyYear"];
                this.columnBiodadInHH = base.Columns["BiodadInHH"];
                this.columnBiodadAlive = base.Columns["BiodadAlive"];
                this.columnBiodadEverLiveInHH = base.Columns["BiodadEverLiveInHH"];
                this.columnBiodadLeftHHDate = base.Columns["BiodadLeftHHDate"];
                this.columnBiodadDeathDate = base.Columns["BiodadDeathDate"];
                this.columnBiodadDistanceFromHH = base.Columns["BiodadDistanceFromHH"];
                this.columnBiodadAsthma = base.Columns["BiodadAsthma"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnSubjectTag = new global::System.Data.DataColumn("SubjectTag", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectTag);
                this.columnChildLoopIndex = new global::System.Data.DataColumn("ChildLoopIndex", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChildLoopIndex);
                this.columnSurveyYear = new global::System.Data.DataColumn("SurveyYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurveyYear);
                this.columnBiodadInHH = new global::System.Data.DataColumn("BiodadInHH", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiodadInHH);
                this.columnBiodadAlive = new global::System.Data.DataColumn("BiodadAlive", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiodadAlive);
                this.columnBiodadEverLiveInHH = new global::System.Data.DataColumn("BiodadEverLiveInHH", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiodadEverLiveInHH);
                this.columnBiodadLeftHHDate = new global::System.Data.DataColumn("BiodadLeftHHDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiodadLeftHHDate);
                this.columnBiodadDeathDate = new global::System.Data.DataColumn("BiodadDeathDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiodadDeathDate);
                this.columnBiodadDistanceFromHH = new global::System.Data.DataColumn("BiodadDistanceFromHH", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiodadDistanceFromHH);
                this.columnBiodadAsthma = new global::System.Data.DataColumn("BiodadAsthma", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiodadAsthma);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnSubjectTag.AllowDBNull = false;
                this.columnChildLoopIndex.AllowDBNull = false;
                this.columnSurveyYear.AllowDBNull = false;
                this.columnBiodadInHH.AllowDBNull = false;
                this.columnBiodadAlive.AllowDBNull = false;
                this.columnBiodadEverLiveInHH.AllowDBNull = false;
                this.columnBiodadAsthma.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblBabyDaddyRow NewtblBabyDaddyRow() {
                return ((tblBabyDaddyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblBabyDaddyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tblBabyDaddyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblBabyDaddyRowChanged != null)) {
                    this.tblBabyDaddyRowChanged(this, new tblBabyDaddyRowChangeEvent(((tblBabyDaddyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblBabyDaddyRowChanging != null)) {
                    this.tblBabyDaddyRowChanging(this, new tblBabyDaddyRowChangeEvent(((tblBabyDaddyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblBabyDaddyRowDeleted != null)) {
                    this.tblBabyDaddyRowDeleted(this, new tblBabyDaddyRowChangeEvent(((tblBabyDaddyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblBabyDaddyRowDeleting != null)) {
                    this.tblBabyDaddyRowDeleting(this, new tblBabyDaddyRowChangeEvent(((tblBabyDaddyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetblBabyDaddyRow(tblBabyDaddyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LinksDataSet ds = new LinksDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblBabyDaddyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vewSurveyTimeMostRecentDataTable : global::System.Data.TypedTableBase<vewSurveyTimeMostRecentRow> {
            
            private global::System.Data.DataColumn columnSubjectTag;
            
            private global::System.Data.DataColumn columnSurveyYearMostRecent;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vewSurveyTimeMostRecentDataTable() {
                this.TableName = "vewSurveyTimeMostRecent";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vewSurveyTimeMostRecentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected vewSurveyTimeMostRecentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectTagColumn {
                get {
                    return this.columnSubjectTag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SurveyYearMostRecentColumn {
                get {
                    return this.columnSurveyYearMostRecent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vewSurveyTimeMostRecentRow this[int index] {
                get {
                    return ((vewSurveyTimeMostRecentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event vewSurveyTimeMostRecentRowChangeEventHandler vewSurveyTimeMostRecentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event vewSurveyTimeMostRecentRowChangeEventHandler vewSurveyTimeMostRecentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event vewSurveyTimeMostRecentRowChangeEventHandler vewSurveyTimeMostRecentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event vewSurveyTimeMostRecentRowChangeEventHandler vewSurveyTimeMostRecentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddvewSurveyTimeMostRecentRow(vewSurveyTimeMostRecentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vewSurveyTimeMostRecentRow AddvewSurveyTimeMostRecentRow(int SubjectTag, short SurveyYearMostRecent) {
                vewSurveyTimeMostRecentRow rowvewSurveyTimeMostRecentRow = ((vewSurveyTimeMostRecentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SubjectTag,
                        SurveyYearMostRecent};
                rowvewSurveyTimeMostRecentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowvewSurveyTimeMostRecentRow);
                return rowvewSurveyTimeMostRecentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vewSurveyTimeMostRecentRow FindBySubjectTag(int SubjectTag) {
                return ((vewSurveyTimeMostRecentRow)(this.Rows.Find(new object[] {
                            SubjectTag})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                vewSurveyTimeMostRecentDataTable cln = ((vewSurveyTimeMostRecentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new vewSurveyTimeMostRecentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSubjectTag = base.Columns["SubjectTag"];
                this.columnSurveyYearMostRecent = base.Columns["SurveyYearMostRecent"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSubjectTag = new global::System.Data.DataColumn("SubjectTag", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectTag);
                this.columnSurveyYearMostRecent = new global::System.Data.DataColumn("SurveyYearMostRecent", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurveyYearMostRecent);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("vewSurveyTimeMostRecentKey1", new global::System.Data.DataColumn[] {
                                this.columnSubjectTag}, true));
                this.columnSubjectTag.AllowDBNull = false;
                this.columnSubjectTag.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vewSurveyTimeMostRecentRow NewvewSurveyTimeMostRecentRow() {
                return ((vewSurveyTimeMostRecentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new vewSurveyTimeMostRecentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(vewSurveyTimeMostRecentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vewSurveyTimeMostRecentRowChanged != null)) {
                    this.vewSurveyTimeMostRecentRowChanged(this, new vewSurveyTimeMostRecentRowChangeEvent(((vewSurveyTimeMostRecentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vewSurveyTimeMostRecentRowChanging != null)) {
                    this.vewSurveyTimeMostRecentRowChanging(this, new vewSurveyTimeMostRecentRowChangeEvent(((vewSurveyTimeMostRecentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vewSurveyTimeMostRecentRowDeleted != null)) {
                    this.vewSurveyTimeMostRecentRowDeleted(this, new vewSurveyTimeMostRecentRowChangeEvent(((vewSurveyTimeMostRecentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vewSurveyTimeMostRecentRowDeleting != null)) {
                    this.vewSurveyTimeMostRecentRowDeleting(this, new vewSurveyTimeMostRecentRowChangeEvent(((vewSurveyTimeMostRecentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovevewSurveyTimeMostRecentRow(vewSurveyTimeMostRecentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LinksDataSet ds = new LinksDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vewSurveyTimeMostRecentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblFatherOfGen2DataTable : global::System.Data.TypedTableBase<tblFatherOfGen2Row> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnSubjectTag;
            
            private global::System.Data.DataColumn columnSurveyYear;
            
            private global::System.Data.DataColumn columnBiodadInHH;
            
            private global::System.Data.DataColumn columnBiodadAlive;
            
            private global::System.Data.DataColumn columnBiodadDistanceFromHH;
            
            private global::System.Data.DataColumn columnBiodadAsthma;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblFatherOfGen2DataTable() {
                this.TableName = "tblFatherOfGen2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblFatherOfGen2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tblFatherOfGen2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectTagColumn {
                get {
                    return this.columnSubjectTag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SurveyYearColumn {
                get {
                    return this.columnSurveyYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiodadInHHColumn {
                get {
                    return this.columnBiodadInHH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiodadAliveColumn {
                get {
                    return this.columnBiodadAlive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiodadDistanceFromHHColumn {
                get {
                    return this.columnBiodadDistanceFromHH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiodadAsthmaColumn {
                get {
                    return this.columnBiodadAsthma;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblFatherOfGen2Row this[int index] {
                get {
                    return ((tblFatherOfGen2Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblFatherOfGen2RowChangeEventHandler tblFatherOfGen2RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblFatherOfGen2RowChangeEventHandler tblFatherOfGen2RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblFatherOfGen2RowChangeEventHandler tblFatherOfGen2RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblFatherOfGen2RowChangeEventHandler tblFatherOfGen2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtblFatherOfGen2Row(tblFatherOfGen2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblFatherOfGen2Row AddtblFatherOfGen2Row(tblSubjectRow parenttblSubjectRowByFK_tblFatherOfGen2_tblSubject, short SurveyYear, short BiodadInHH, short BiodadAlive, short BiodadDistanceFromHH, short BiodadAsthma) {
                tblFatherOfGen2Row rowtblFatherOfGen2Row = ((tblFatherOfGen2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        SurveyYear,
                        BiodadInHH,
                        BiodadAlive,
                        BiodadDistanceFromHH,
                        BiodadAsthma};
                if ((parenttblSubjectRowByFK_tblFatherOfGen2_tblSubject != null)) {
                    columnValuesArray[1] = parenttblSubjectRowByFK_tblFatherOfGen2_tblSubject[0];
                }
                rowtblFatherOfGen2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblFatherOfGen2Row);
                return rowtblFatherOfGen2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblFatherOfGen2Row FindByID(long ID) {
                return ((tblFatherOfGen2Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tblFatherOfGen2DataTable cln = ((tblFatherOfGen2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblFatherOfGen2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnSubjectTag = base.Columns["SubjectTag"];
                this.columnSurveyYear = base.Columns["SurveyYear"];
                this.columnBiodadInHH = base.Columns["BiodadInHH"];
                this.columnBiodadAlive = base.Columns["BiodadAlive"];
                this.columnBiodadDistanceFromHH = base.Columns["BiodadDistanceFromHH"];
                this.columnBiodadAsthma = base.Columns["BiodadAsthma"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnSubjectTag = new global::System.Data.DataColumn("SubjectTag", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectTag);
                this.columnSurveyYear = new global::System.Data.DataColumn("SurveyYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurveyYear);
                this.columnBiodadInHH = new global::System.Data.DataColumn("BiodadInHH", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiodadInHH);
                this.columnBiodadAlive = new global::System.Data.DataColumn("BiodadAlive", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiodadAlive);
                this.columnBiodadDistanceFromHH = new global::System.Data.DataColumn("BiodadDistanceFromHH", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiodadDistanceFromHH);
                this.columnBiodadAsthma = new global::System.Data.DataColumn("BiodadAsthma", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiodadAsthma);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnSubjectTag.AllowDBNull = false;
                this.columnSurveyYear.AllowDBNull = false;
                this.columnBiodadInHH.AllowDBNull = false;
                this.columnBiodadAlive.AllowDBNull = false;
                this.columnBiodadAsthma.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblFatherOfGen2Row NewtblFatherOfGen2Row() {
                return ((tblFatherOfGen2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblFatherOfGen2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tblFatherOfGen2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblFatherOfGen2RowChanged != null)) {
                    this.tblFatherOfGen2RowChanged(this, new tblFatherOfGen2RowChangeEvent(((tblFatherOfGen2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblFatherOfGen2RowChanging != null)) {
                    this.tblFatherOfGen2RowChanging(this, new tblFatherOfGen2RowChangeEvent(((tblFatherOfGen2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblFatherOfGen2RowDeleted != null)) {
                    this.tblFatherOfGen2RowDeleted(this, new tblFatherOfGen2RowChangeEvent(((tblFatherOfGen2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblFatherOfGen2RowDeleting != null)) {
                    this.tblFatherOfGen2RowDeleting(this, new tblFatherOfGen2RowChangeEvent(((tblFatherOfGen2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetblFatherOfGen2Row(tblFatherOfGen2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LinksDataSet ds = new LinksDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblFatherOfGen2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblRosterGen1DataTable : global::System.Data.TypedTableBase<tblRosterGen1Row> {
            
            private global::System.Data.DataColumn columnRelatedID;
            
            private global::System.Data.DataColumn columnRosterAssignmentID;
            
            private global::System.Data.DataColumn columnResponseLower;
            
            private global::System.Data.DataColumn columnResponseUpper;
            
            private global::System.Data.DataColumn columnResolved;
            
            private global::System.Data.DataColumn columnR;
            
            private global::System.Data.DataColumn columnRBoundLower;
            
            private global::System.Data.DataColumn columnRBoundUpper;
            
            private global::System.Data.DataColumn columnSameGeneration;
            
            private global::System.Data.DataColumn columnShareBiodad;
            
            private global::System.Data.DataColumn columnShareBiomom;
            
            private global::System.Data.DataColumn columnShareBiograndparent;
            
            private global::System.Data.DataColumn columnInconsistent;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRosterGen1DataTable() {
                this.TableName = "tblRosterGen1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblRosterGen1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tblRosterGen1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RelatedIDColumn {
                get {
                    return this.columnRelatedID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RosterAssignmentIDColumn {
                get {
                    return this.columnRosterAssignmentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResponseLowerColumn {
                get {
                    return this.columnResponseLower;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResponseUpperColumn {
                get {
                    return this.columnResponseUpper;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResolvedColumn {
                get {
                    return this.columnResolved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RColumn {
                get {
                    return this.columnR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RBoundLowerColumn {
                get {
                    return this.columnRBoundLower;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RBoundUpperColumn {
                get {
                    return this.columnRBoundUpper;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SameGenerationColumn {
                get {
                    return this.columnSameGeneration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShareBiodadColumn {
                get {
                    return this.columnShareBiodad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShareBiomomColumn {
                get {
                    return this.columnShareBiomom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShareBiograndparentColumn {
                get {
                    return this.columnShareBiograndparent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InconsistentColumn {
                get {
                    return this.columnInconsistent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRosterGen1Row this[int index] {
                get {
                    return ((tblRosterGen1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblRosterGen1RowChangeEventHandler tblRosterGen1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblRosterGen1RowChangeEventHandler tblRosterGen1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblRosterGen1RowChangeEventHandler tblRosterGen1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblRosterGen1RowChangeEventHandler tblRosterGen1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtblRosterGen1Row(tblRosterGen1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRosterGen1Row AddtblRosterGen1Row(tblRelatedStructureRow parenttblRelatedStructureRowByFK_tblRosterGen1_tblRelatedStructure, byte RosterAssignmentID, short ResponseLower, short ResponseUpper, bool Resolved, double R, double RBoundLower, double RBoundUpper, byte SameGeneration, byte ShareBiodad, byte ShareBiomom, byte ShareBiograndparent, bool Inconsistent) {
                tblRosterGen1Row rowtblRosterGen1Row = ((tblRosterGen1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        RosterAssignmentID,
                        ResponseLower,
                        ResponseUpper,
                        Resolved,
                        R,
                        RBoundLower,
                        RBoundUpper,
                        SameGeneration,
                        ShareBiodad,
                        ShareBiomom,
                        ShareBiograndparent,
                        Inconsistent};
                if ((parenttblRelatedStructureRowByFK_tblRosterGen1_tblRelatedStructure != null)) {
                    columnValuesArray[0] = parenttblRelatedStructureRowByFK_tblRosterGen1_tblRelatedStructure[0];
                }
                rowtblRosterGen1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblRosterGen1Row);
                return rowtblRosterGen1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRosterGen1Row FindByRelatedID(int RelatedID) {
                return ((tblRosterGen1Row)(this.Rows.Find(new object[] {
                            RelatedID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tblRosterGen1DataTable cln = ((tblRosterGen1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblRosterGen1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRelatedID = base.Columns["RelatedID"];
                this.columnRosterAssignmentID = base.Columns["RosterAssignmentID"];
                this.columnResponseLower = base.Columns["ResponseLower"];
                this.columnResponseUpper = base.Columns["ResponseUpper"];
                this.columnResolved = base.Columns["Resolved"];
                this.columnR = base.Columns["R"];
                this.columnRBoundLower = base.Columns["RBoundLower"];
                this.columnRBoundUpper = base.Columns["RBoundUpper"];
                this.columnSameGeneration = base.Columns["SameGeneration"];
                this.columnShareBiodad = base.Columns["ShareBiodad"];
                this.columnShareBiomom = base.Columns["ShareBiomom"];
                this.columnShareBiograndparent = base.Columns["ShareBiograndparent"];
                this.columnInconsistent = base.Columns["Inconsistent"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRelatedID = new global::System.Data.DataColumn("RelatedID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelatedID);
                this.columnRosterAssignmentID = new global::System.Data.DataColumn("RosterAssignmentID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRosterAssignmentID);
                this.columnResponseLower = new global::System.Data.DataColumn("ResponseLower", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResponseLower);
                this.columnResponseUpper = new global::System.Data.DataColumn("ResponseUpper", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResponseUpper);
                this.columnResolved = new global::System.Data.DataColumn("Resolved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResolved);
                this.columnR = new global::System.Data.DataColumn("R", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnR);
                this.columnRBoundLower = new global::System.Data.DataColumn("RBoundLower", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRBoundLower);
                this.columnRBoundUpper = new global::System.Data.DataColumn("RBoundUpper", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRBoundUpper);
                this.columnSameGeneration = new global::System.Data.DataColumn("SameGeneration", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSameGeneration);
                this.columnShareBiodad = new global::System.Data.DataColumn("ShareBiodad", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShareBiodad);
                this.columnShareBiomom = new global::System.Data.DataColumn("ShareBiomom", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShareBiomom);
                this.columnShareBiograndparent = new global::System.Data.DataColumn("ShareBiograndparent", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShareBiograndparent);
                this.columnInconsistent = new global::System.Data.DataColumn("Inconsistent", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInconsistent);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRelatedID}, true));
                this.columnRelatedID.AllowDBNull = false;
                this.columnRelatedID.Unique = true;
                this.columnRosterAssignmentID.AllowDBNull = false;
                this.columnResponseLower.AllowDBNull = false;
                this.columnResponseUpper.AllowDBNull = false;
                this.columnResolved.AllowDBNull = false;
                this.columnRBoundLower.AllowDBNull = false;
                this.columnRBoundUpper.AllowDBNull = false;
                this.columnSameGeneration.AllowDBNull = false;
                this.columnShareBiodad.AllowDBNull = false;
                this.columnShareBiomom.AllowDBNull = false;
                this.columnShareBiograndparent.AllowDBNull = false;
                this.columnInconsistent.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRosterGen1Row NewtblRosterGen1Row() {
                return ((tblRosterGen1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblRosterGen1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tblRosterGen1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblRosterGen1RowChanged != null)) {
                    this.tblRosterGen1RowChanged(this, new tblRosterGen1RowChangeEvent(((tblRosterGen1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblRosterGen1RowChanging != null)) {
                    this.tblRosterGen1RowChanging(this, new tblRosterGen1RowChangeEvent(((tblRosterGen1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblRosterGen1RowDeleted != null)) {
                    this.tblRosterGen1RowDeleted(this, new tblRosterGen1RowChangeEvent(((tblRosterGen1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblRosterGen1RowDeleting != null)) {
                    this.tblRosterGen1RowDeleting(this, new tblRosterGen1RowChangeEvent(((tblRosterGen1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetblRosterGen1Row(tblRosterGen1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LinksDataSet ds = new LinksDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblRosterGen1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblResponseDataTable : global::System.Data.TypedTableBase<tblResponseRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnSubjectTag;
            
            private global::System.Data.DataColumn columnExtendedID;
            
            private global::System.Data.DataColumn columnGeneration;
            
            private global::System.Data.DataColumn columnSurveySource;
            
            private global::System.Data.DataColumn columnSurveyYear;
            
            private global::System.Data.DataColumn columnItem;
            
            private global::System.Data.DataColumn columnValue;
            
            private global::System.Data.DataColumn columnLoopIndex;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblResponseDataTable() {
                this.TableName = "tblResponse";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblResponseDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tblResponseDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectTagColumn {
                get {
                    return this.columnSubjectTag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExtendedIDColumn {
                get {
                    return this.columnExtendedID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenerationColumn {
                get {
                    return this.columnGeneration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SurveySourceColumn {
                get {
                    return this.columnSurveySource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SurveyYearColumn {
                get {
                    return this.columnSurveyYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemColumn {
                get {
                    return this.columnItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ValueColumn {
                get {
                    return this.columnValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LoopIndexColumn {
                get {
                    return this.columnLoopIndex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblResponseRow this[int index] {
                get {
                    return ((tblResponseRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblResponseRowChangeEventHandler tblResponseRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblResponseRowChangeEventHandler tblResponseRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblResponseRowChangeEventHandler tblResponseRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblResponseRowChangeEventHandler tblResponseRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtblResponseRow(tblResponseRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblResponseRow AddtblResponseRow(tblSubjectRow parenttblSubjectRowByFK_tblResponse_tblSubject, short ExtendedID, byte Generation, byte SurveySource, short SurveyYear, tblItemRow parenttblItemRowByFK_tblResponse_tblItem_79, int Value, byte LoopIndex) {
                tblResponseRow rowtblResponseRow = ((tblResponseRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        ExtendedID,
                        Generation,
                        SurveySource,
                        SurveyYear,
                        null,
                        Value,
                        LoopIndex};
                if ((parenttblSubjectRowByFK_tblResponse_tblSubject != null)) {
                    columnValuesArray[1] = parenttblSubjectRowByFK_tblResponse_tblSubject[0];
                }
                if ((parenttblItemRowByFK_tblResponse_tblItem_79 != null)) {
                    columnValuesArray[6] = parenttblItemRowByFK_tblResponse_tblItem_79[0];
                }
                rowtblResponseRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblResponseRow);
                return rowtblResponseRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblResponseRow FindByID(int ID) {
                return ((tblResponseRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tblResponseDataTable cln = ((tblResponseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblResponseDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnSubjectTag = base.Columns["SubjectTag"];
                this.columnExtendedID = base.Columns["ExtendedID"];
                this.columnGeneration = base.Columns["Generation"];
                this.columnSurveySource = base.Columns["SurveySource"];
                this.columnSurveyYear = base.Columns["SurveyYear"];
                this.columnItem = base.Columns["Item"];
                this.columnValue = base.Columns["Value"];
                this.columnLoopIndex = base.Columns["LoopIndex"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnSubjectTag = new global::System.Data.DataColumn("SubjectTag", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectTag);
                this.columnExtendedID = new global::System.Data.DataColumn("ExtendedID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtendedID);
                this.columnGeneration = new global::System.Data.DataColumn("Generation", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneration);
                this.columnSurveySource = new global::System.Data.DataColumn("SurveySource", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurveySource);
                this.columnSurveyYear = new global::System.Data.DataColumn("SurveyYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurveyYear);
                this.columnItem = new global::System.Data.DataColumn("Item", typeof(short), null, global::System.Data.MappingType.Element);
                this.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Item");
                this.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "ItemColumn");
                this.columnItem.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnItem");
                this.columnItem.ExtendedProperties.Add("Generator_UserColumnName", "Item");
                base.Columns.Add(this.columnItem);
                this.columnValue = new global::System.Data.DataColumn("Value", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue);
                this.columnLoopIndex = new global::System.Data.DataColumn("LoopIndex", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoopIndex);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnSubjectTag.AllowDBNull = false;
                this.columnExtendedID.AllowDBNull = false;
                this.columnGeneration.AllowDBNull = false;
                this.columnSurveySource.AllowDBNull = false;
                this.columnSurveyYear.AllowDBNull = false;
                this.columnItem.AllowDBNull = false;
                this.columnValue.AllowDBNull = false;
                this.columnLoopIndex.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblResponseRow NewtblResponseRow() {
                return ((tblResponseRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblResponseRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tblResponseRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblResponseRowChanged != null)) {
                    this.tblResponseRowChanged(this, new tblResponseRowChangeEvent(((tblResponseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblResponseRowChanging != null)) {
                    this.tblResponseRowChanging(this, new tblResponseRowChangeEvent(((tblResponseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblResponseRowDeleted != null)) {
                    this.tblResponseRowDeleted(this, new tblResponseRowChangeEvent(((tblResponseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblResponseRowDeleting != null)) {
                    this.tblResponseRowDeleting(this, new tblResponseRowChangeEvent(((tblResponseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetblResponseRow(tblResponseRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LinksDataSet ds = new LinksDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblResponseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblMarkerGen1DataTable : global::System.Data.TypedTableBase<tblMarkerGen1Row> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnExtendedID;
            
            private global::System.Data.DataColumn columnRelatedID;
            
            private global::System.Data.DataColumn columnMarkerType;
            
            private global::System.Data.DataColumn columnSurveyYear;
            
            private global::System.Data.DataColumn columnMzEvidence;
            
            private global::System.Data.DataColumn columnSameGeneration;
            
            private global::System.Data.DataColumn columnShareBiomomEvidence;
            
            private global::System.Data.DataColumn columnShareBiodadEvidence;
            
            private global::System.Data.DataColumn columnShareBioGrandparentEvidence;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblMarkerGen1DataTable() {
                this.TableName = "tblMarkerGen1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblMarkerGen1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tblMarkerGen1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExtendedIDColumn {
                get {
                    return this.columnExtendedID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RelatedIDColumn {
                get {
                    return this.columnRelatedID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarkerTypeColumn {
                get {
                    return this.columnMarkerType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SurveyYearColumn {
                get {
                    return this.columnSurveyYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MzEvidenceColumn {
                get {
                    return this.columnMzEvidence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SameGenerationColumn {
                get {
                    return this.columnSameGeneration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShareBiomomEvidenceColumn {
                get {
                    return this.columnShareBiomomEvidence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShareBiodadEvidenceColumn {
                get {
                    return this.columnShareBiodadEvidence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShareBioGrandparentEvidenceColumn {
                get {
                    return this.columnShareBioGrandparentEvidence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblMarkerGen1Row this[int index] {
                get {
                    return ((tblMarkerGen1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblMarkerGen1RowChangeEventHandler tblMarkerGen1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblMarkerGen1RowChangeEventHandler tblMarkerGen1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblMarkerGen1RowChangeEventHandler tblMarkerGen1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblMarkerGen1RowChangeEventHandler tblMarkerGen1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtblMarkerGen1Row(tblMarkerGen1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblMarkerGen1Row AddtblMarkerGen1Row(short ExtendedID, tblRelatedStructureRow parenttblRelatedStructureRowByFK_tblMarkerGen1_tblRelatedStructure, byte MarkerType, short SurveyYear, byte MzEvidence, byte SameGeneration, byte ShareBiomomEvidence, byte ShareBiodadEvidence, byte ShareBioGrandparentEvidence) {
                tblMarkerGen1Row rowtblMarkerGen1Row = ((tblMarkerGen1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ExtendedID,
                        null,
                        MarkerType,
                        SurveyYear,
                        MzEvidence,
                        SameGeneration,
                        ShareBiomomEvidence,
                        ShareBiodadEvidence,
                        ShareBioGrandparentEvidence};
                if ((parenttblRelatedStructureRowByFK_tblMarkerGen1_tblRelatedStructure != null)) {
                    columnValuesArray[2] = parenttblRelatedStructureRowByFK_tblMarkerGen1_tblRelatedStructure[0];
                }
                rowtblMarkerGen1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblMarkerGen1Row);
                return rowtblMarkerGen1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblMarkerGen1Row FindByID(long ID) {
                return ((tblMarkerGen1Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tblMarkerGen1DataTable cln = ((tblMarkerGen1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblMarkerGen1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnExtendedID = base.Columns["ExtendedID"];
                this.columnRelatedID = base.Columns["RelatedID"];
                this.columnMarkerType = base.Columns["MarkerType"];
                this.columnSurveyYear = base.Columns["SurveyYear"];
                this.columnMzEvidence = base.Columns["MzEvidence"];
                this.columnSameGeneration = base.Columns["SameGeneration"];
                this.columnShareBiomomEvidence = base.Columns["ShareBiomomEvidence"];
                this.columnShareBiodadEvidence = base.Columns["ShareBiodadEvidence"];
                this.columnShareBioGrandparentEvidence = base.Columns["ShareBioGrandparentEvidence"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnExtendedID = new global::System.Data.DataColumn("ExtendedID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtendedID);
                this.columnRelatedID = new global::System.Data.DataColumn("RelatedID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelatedID);
                this.columnMarkerType = new global::System.Data.DataColumn("MarkerType", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarkerType);
                this.columnSurveyYear = new global::System.Data.DataColumn("SurveyYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurveyYear);
                this.columnMzEvidence = new global::System.Data.DataColumn("MzEvidence", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMzEvidence);
                this.columnSameGeneration = new global::System.Data.DataColumn("SameGeneration", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSameGeneration);
                this.columnShareBiomomEvidence = new global::System.Data.DataColumn("ShareBiomomEvidence", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShareBiomomEvidence);
                this.columnShareBiodadEvidence = new global::System.Data.DataColumn("ShareBiodadEvidence", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShareBiodadEvidence);
                this.columnShareBioGrandparentEvidence = new global::System.Data.DataColumn("ShareBioGrandparentEvidence", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShareBioGrandparentEvidence);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnExtendedID.AllowDBNull = false;
                this.columnRelatedID.AllowDBNull = false;
                this.columnMarkerType.AllowDBNull = false;
                this.columnSurveyYear.AllowDBNull = false;
                this.columnMzEvidence.AllowDBNull = false;
                this.columnSameGeneration.AllowDBNull = false;
                this.columnShareBiomomEvidence.AllowDBNull = false;
                this.columnShareBiodadEvidence.AllowDBNull = false;
                this.columnShareBioGrandparentEvidence.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblMarkerGen1Row NewtblMarkerGen1Row() {
                return ((tblMarkerGen1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblMarkerGen1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tblMarkerGen1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblMarkerGen1RowChanged != null)) {
                    this.tblMarkerGen1RowChanged(this, new tblMarkerGen1RowChangeEvent(((tblMarkerGen1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblMarkerGen1RowChanging != null)) {
                    this.tblMarkerGen1RowChanging(this, new tblMarkerGen1RowChangeEvent(((tblMarkerGen1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblMarkerGen1RowDeleted != null)) {
                    this.tblMarkerGen1RowDeleted(this, new tblMarkerGen1RowChangeEvent(((tblMarkerGen1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblMarkerGen1RowDeleting != null)) {
                    this.tblMarkerGen1RowDeleting(this, new tblMarkerGen1RowChangeEvent(((tblMarkerGen1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetblMarkerGen1Row(tblMarkerGen1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LinksDataSet ds = new LinksDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblMarkerGen1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblMarkerGen2DataTable : global::System.Data.TypedTableBase<tblMarkerGen2Row> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnExtendedID;
            
            private global::System.Data.DataColumn columnRelatedID;
            
            private global::System.Data.DataColumn columnMarkerType;
            
            private global::System.Data.DataColumn columnSurveyYear;
            
            private global::System.Data.DataColumn columnMzEvidence;
            
            private global::System.Data.DataColumn columnShareBiodadEvidence;
            
            private global::System.Data.DataColumn columnFromMother;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblMarkerGen2DataTable() {
                this.TableName = "tblMarkerGen2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblMarkerGen2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tblMarkerGen2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExtendedIDColumn {
                get {
                    return this.columnExtendedID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RelatedIDColumn {
                get {
                    return this.columnRelatedID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarkerTypeColumn {
                get {
                    return this.columnMarkerType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SurveyYearColumn {
                get {
                    return this.columnSurveyYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MzEvidenceColumn {
                get {
                    return this.columnMzEvidence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShareBiodadEvidenceColumn {
                get {
                    return this.columnShareBiodadEvidence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FromMotherColumn {
                get {
                    return this.columnFromMother;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblMarkerGen2Row this[int index] {
                get {
                    return ((tblMarkerGen2Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblMarkerGen2RowChangeEventHandler tblMarkerGen2RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblMarkerGen2RowChangeEventHandler tblMarkerGen2RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblMarkerGen2RowChangeEventHandler tblMarkerGen2RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblMarkerGen2RowChangeEventHandler tblMarkerGen2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtblMarkerGen2Row(tblMarkerGen2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblMarkerGen2Row AddtblMarkerGen2Row(short ExtendedID, tblRelatedStructureRow parenttblRelatedStructureRowByFK_tblMarkerGen2_tblRelatedStructure, byte MarkerType, short SurveyYear, byte MzEvidence, byte ShareBiodadEvidence, bool FromMother) {
                tblMarkerGen2Row rowtblMarkerGen2Row = ((tblMarkerGen2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ExtendedID,
                        null,
                        MarkerType,
                        SurveyYear,
                        MzEvidence,
                        ShareBiodadEvidence,
                        FromMother};
                if ((parenttblRelatedStructureRowByFK_tblMarkerGen2_tblRelatedStructure != null)) {
                    columnValuesArray[2] = parenttblRelatedStructureRowByFK_tblMarkerGen2_tblRelatedStructure[0];
                }
                rowtblMarkerGen2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblMarkerGen2Row);
                return rowtblMarkerGen2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblMarkerGen2Row FindByID(long ID) {
                return ((tblMarkerGen2Row)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tblMarkerGen2DataTable cln = ((tblMarkerGen2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblMarkerGen2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnExtendedID = base.Columns["ExtendedID"];
                this.columnRelatedID = base.Columns["RelatedID"];
                this.columnMarkerType = base.Columns["MarkerType"];
                this.columnSurveyYear = base.Columns["SurveyYear"];
                this.columnMzEvidence = base.Columns["MzEvidence"];
                this.columnShareBiodadEvidence = base.Columns["ShareBiodadEvidence"];
                this.columnFromMother = base.Columns["FromMother"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnExtendedID = new global::System.Data.DataColumn("ExtendedID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtendedID);
                this.columnRelatedID = new global::System.Data.DataColumn("RelatedID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelatedID);
                this.columnMarkerType = new global::System.Data.DataColumn("MarkerType", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarkerType);
                this.columnSurveyYear = new global::System.Data.DataColumn("SurveyYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurveyYear);
                this.columnMzEvidence = new global::System.Data.DataColumn("MzEvidence", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMzEvidence);
                this.columnShareBiodadEvidence = new global::System.Data.DataColumn("ShareBiodadEvidence", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShareBiodadEvidence);
                this.columnFromMother = new global::System.Data.DataColumn("FromMother", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromMother);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnExtendedID.AllowDBNull = false;
                this.columnRelatedID.AllowDBNull = false;
                this.columnMarkerType.AllowDBNull = false;
                this.columnMzEvidence.AllowDBNull = false;
                this.columnShareBiodadEvidence.AllowDBNull = false;
                this.columnFromMother.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblMarkerGen2Row NewtblMarkerGen2Row() {
                return ((tblMarkerGen2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblMarkerGen2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tblMarkerGen2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblMarkerGen2RowChanged != null)) {
                    this.tblMarkerGen2RowChanged(this, new tblMarkerGen2RowChangeEvent(((tblMarkerGen2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblMarkerGen2RowChanging != null)) {
                    this.tblMarkerGen2RowChanging(this, new tblMarkerGen2RowChangeEvent(((tblMarkerGen2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblMarkerGen2RowDeleted != null)) {
                    this.tblMarkerGen2RowDeleted(this, new tblMarkerGen2RowChangeEvent(((tblMarkerGen2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblMarkerGen2RowDeleting != null)) {
                    this.tblMarkerGen2RowDeleting(this, new tblMarkerGen2RowChangeEvent(((tblMarkerGen2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetblMarkerGen2Row(tblMarkerGen2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LinksDataSet ds = new LinksDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblMarkerGen2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblParentsOfGen1RetroDataTable : global::System.Data.TypedTableBase<tblParentsOfGen1RetroRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnSubjectTag;
            
            private global::System.Data.DataColumn columnExtendedID;
            
            private global::System.Data.DataColumn columnBioparent;
            
            private global::System.Data.DataColumn columnInHH;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnYear;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblParentsOfGen1RetroDataTable() {
                this.TableName = "tblParentsOfGen1Retro";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblParentsOfGen1RetroDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tblParentsOfGen1RetroDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectTagColumn {
                get {
                    return this.columnSubjectTag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExtendedIDColumn {
                get {
                    return this.columnExtendedID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BioparentColumn {
                get {
                    return this.columnBioparent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InHHColumn {
                get {
                    return this.columnInHH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn YearColumn {
                get {
                    return this.columnYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblParentsOfGen1RetroRow this[int index] {
                get {
                    return ((tblParentsOfGen1RetroRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblParentsOfGen1RetroRowChangeEventHandler tblParentsOfGen1RetroRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblParentsOfGen1RetroRowChangeEventHandler tblParentsOfGen1RetroRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblParentsOfGen1RetroRowChangeEventHandler tblParentsOfGen1RetroRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblParentsOfGen1RetroRowChangeEventHandler tblParentsOfGen1RetroRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtblParentsOfGen1RetroRow(tblParentsOfGen1RetroRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblParentsOfGen1RetroRow AddtblParentsOfGen1RetroRow(tblSubjectRow parenttblSubjectRowByFK_tblParentsOfGen1Retro_tblSubject, short ExtendedID, short Bioparent, bool InHH, byte Age, short Year) {
                tblParentsOfGen1RetroRow rowtblParentsOfGen1RetroRow = ((tblParentsOfGen1RetroRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        ExtendedID,
                        Bioparent,
                        InHH,
                        Age,
                        Year};
                if ((parenttblSubjectRowByFK_tblParentsOfGen1Retro_tblSubject != null)) {
                    columnValuesArray[1] = parenttblSubjectRowByFK_tblParentsOfGen1Retro_tblSubject[0];
                }
                rowtblParentsOfGen1RetroRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblParentsOfGen1RetroRow);
                return rowtblParentsOfGen1RetroRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblParentsOfGen1RetroRow FindByID(long ID) {
                return ((tblParentsOfGen1RetroRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tblParentsOfGen1RetroDataTable cln = ((tblParentsOfGen1RetroDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblParentsOfGen1RetroDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnSubjectTag = base.Columns["SubjectTag"];
                this.columnExtendedID = base.Columns["ExtendedID"];
                this.columnBioparent = base.Columns["Bioparent"];
                this.columnInHH = base.Columns["InHH"];
                this.columnAge = base.Columns["Age"];
                this.columnYear = base.Columns["Year"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnSubjectTag = new global::System.Data.DataColumn("SubjectTag", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectTag);
                this.columnExtendedID = new global::System.Data.DataColumn("ExtendedID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtendedID);
                this.columnBioparent = new global::System.Data.DataColumn("Bioparent", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBioparent);
                this.columnInHH = new global::System.Data.DataColumn("InHH", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInHH);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnYear = new global::System.Data.DataColumn("Year", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnSubjectTag.AllowDBNull = false;
                this.columnExtendedID.AllowDBNull = false;
                this.columnBioparent.AllowDBNull = false;
                this.columnAge.AllowDBNull = false;
                this.columnYear.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblParentsOfGen1RetroRow NewtblParentsOfGen1RetroRow() {
                return ((tblParentsOfGen1RetroRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblParentsOfGen1RetroRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tblParentsOfGen1RetroRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblParentsOfGen1RetroRowChanged != null)) {
                    this.tblParentsOfGen1RetroRowChanged(this, new tblParentsOfGen1RetroRowChangeEvent(((tblParentsOfGen1RetroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblParentsOfGen1RetroRowChanging != null)) {
                    this.tblParentsOfGen1RetroRowChanging(this, new tblParentsOfGen1RetroRowChangeEvent(((tblParentsOfGen1RetroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblParentsOfGen1RetroRowDeleted != null)) {
                    this.tblParentsOfGen1RetroRowDeleted(this, new tblParentsOfGen1RetroRowChangeEvent(((tblParentsOfGen1RetroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblParentsOfGen1RetroRowDeleting != null)) {
                    this.tblParentsOfGen1RetroRowDeleting(this, new tblParentsOfGen1RetroRowChangeEvent(((tblParentsOfGen1RetroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetblParentsOfGen1RetroRow(tblParentsOfGen1RetroRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LinksDataSet ds = new LinksDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblParentsOfGen1RetroDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblParentsOfGen1CurrentDataTable : global::System.Data.TypedTableBase<tblParentsOfGen1CurrentRow> {
            
            private global::System.Data.DataColumn columnSubjectTag;
            
            private global::System.Data.DataColumn columnBiodadBirthYearReported;
            
            private global::System.Data.DataColumn columnBiodadBirthYearEstimated;
            
            private global::System.Data.DataColumn columnBiodadYearLastAsked;
            
            private global::System.Data.DataColumn columnBiodadAlive;
            
            private global::System.Data.DataColumn columnBiodadDeathCause;
            
            private global::System.Data.DataColumn columnBiodadDeathAge;
            
            private global::System.Data.DataColumn columnBiodadUSBorn;
            
            private global::System.Data.DataColumn columnBiodadHighestGrade;
            
            private global::System.Data.DataColumn columnBiograndfatherUSBorn;
            
            private global::System.Data.DataColumn columnBiomomBirthYearReported;
            
            private global::System.Data.DataColumn columnBiomomBirthYearEstimated;
            
            private global::System.Data.DataColumn columnBiomomYearLastAsked;
            
            private global::System.Data.DataColumn columnBiomomAlive;
            
            private global::System.Data.DataColumn columnBiomomDeathCause;
            
            private global::System.Data.DataColumn columnBiomomDeathAge;
            
            private global::System.Data.DataColumn columnBiomomUSBorn;
            
            private global::System.Data.DataColumn columnBiomomHighestGrade;
            
            private global::System.Data.DataColumn columnAlwaysLivedWithBothBioparents;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblParentsOfGen1CurrentDataTable() {
                this.TableName = "tblParentsOfGen1Current";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblParentsOfGen1CurrentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tblParentsOfGen1CurrentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectTagColumn {
                get {
                    return this.columnSubjectTag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiodadBirthYearReportedColumn {
                get {
                    return this.columnBiodadBirthYearReported;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiodadBirthYearEstimatedColumn {
                get {
                    return this.columnBiodadBirthYearEstimated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiodadYearLastAskedColumn {
                get {
                    return this.columnBiodadYearLastAsked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiodadAliveColumn {
                get {
                    return this.columnBiodadAlive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiodadDeathCauseColumn {
                get {
                    return this.columnBiodadDeathCause;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiodadDeathAgeColumn {
                get {
                    return this.columnBiodadDeathAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiodadUSBornColumn {
                get {
                    return this.columnBiodadUSBorn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiodadHighestGradeColumn {
                get {
                    return this.columnBiodadHighestGrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiograndfatherUSBornColumn {
                get {
                    return this.columnBiograndfatherUSBorn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiomomBirthYearReportedColumn {
                get {
                    return this.columnBiomomBirthYearReported;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiomomBirthYearEstimatedColumn {
                get {
                    return this.columnBiomomBirthYearEstimated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiomomYearLastAskedColumn {
                get {
                    return this.columnBiomomYearLastAsked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiomomAliveColumn {
                get {
                    return this.columnBiomomAlive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiomomDeathCauseColumn {
                get {
                    return this.columnBiomomDeathCause;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiomomDeathAgeColumn {
                get {
                    return this.columnBiomomDeathAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiomomUSBornColumn {
                get {
                    return this.columnBiomomUSBorn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiomomHighestGradeColumn {
                get {
                    return this.columnBiomomHighestGrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlwaysLivedWithBothBioparentsColumn {
                get {
                    return this.columnAlwaysLivedWithBothBioparents;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblParentsOfGen1CurrentRow this[int index] {
                get {
                    return ((tblParentsOfGen1CurrentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblParentsOfGen1CurrentRowChangeEventHandler tblParentsOfGen1CurrentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblParentsOfGen1CurrentRowChangeEventHandler tblParentsOfGen1CurrentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblParentsOfGen1CurrentRowChangeEventHandler tblParentsOfGen1CurrentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblParentsOfGen1CurrentRowChangeEventHandler tblParentsOfGen1CurrentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtblParentsOfGen1CurrentRow(tblParentsOfGen1CurrentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblParentsOfGen1CurrentRow AddtblParentsOfGen1CurrentRow(
                        tblSubjectRow parenttblSubjectRowByFK_tblParentsOfGen1Current_tblSubject, 
                        short BiodadBirthYearReported, 
                        short BiodadBirthYearEstimated, 
                        short BiodadYearLastAsked, 
                        short BiodadAlive, 
                        short BiodadDeathCause, 
                        byte BiodadDeathAge, 
                        short BiodadUSBorn, 
                        byte BiodadHighestGrade, 
                        short BiograndfatherUSBorn, 
                        short BiomomBirthYearReported, 
                        short BiomomBirthYearEstimated, 
                        short BiomomYearLastAsked, 
                        short BiomomAlive, 
                        short BiomomDeathCause, 
                        byte BiomomDeathAge, 
                        short BiomomUSBorn, 
                        byte BiomomHighestGrade, 
                        short AlwaysLivedWithBothBioparents) {
                tblParentsOfGen1CurrentRow rowtblParentsOfGen1CurrentRow = ((tblParentsOfGen1CurrentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        BiodadBirthYearReported,
                        BiodadBirthYearEstimated,
                        BiodadYearLastAsked,
                        BiodadAlive,
                        BiodadDeathCause,
                        BiodadDeathAge,
                        BiodadUSBorn,
                        BiodadHighestGrade,
                        BiograndfatherUSBorn,
                        BiomomBirthYearReported,
                        BiomomBirthYearEstimated,
                        BiomomYearLastAsked,
                        BiomomAlive,
                        BiomomDeathCause,
                        BiomomDeathAge,
                        BiomomUSBorn,
                        BiomomHighestGrade,
                        AlwaysLivedWithBothBioparents};
                if ((parenttblSubjectRowByFK_tblParentsOfGen1Current_tblSubject != null)) {
                    columnValuesArray[0] = parenttblSubjectRowByFK_tblParentsOfGen1Current_tblSubject[0];
                }
                rowtblParentsOfGen1CurrentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblParentsOfGen1CurrentRow);
                return rowtblParentsOfGen1CurrentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblParentsOfGen1CurrentRow FindBySubjectTag(int SubjectTag) {
                return ((tblParentsOfGen1CurrentRow)(this.Rows.Find(new object[] {
                            SubjectTag})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tblParentsOfGen1CurrentDataTable cln = ((tblParentsOfGen1CurrentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblParentsOfGen1CurrentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSubjectTag = base.Columns["SubjectTag"];
                this.columnBiodadBirthYearReported = base.Columns["BiodadBirthYearReported"];
                this.columnBiodadBirthYearEstimated = base.Columns["BiodadBirthYearEstimated"];
                this.columnBiodadYearLastAsked = base.Columns["BiodadYearLastAsked"];
                this.columnBiodadAlive = base.Columns["BiodadAlive"];
                this.columnBiodadDeathCause = base.Columns["BiodadDeathCause"];
                this.columnBiodadDeathAge = base.Columns["BiodadDeathAge"];
                this.columnBiodadUSBorn = base.Columns["BiodadUSBorn"];
                this.columnBiodadHighestGrade = base.Columns["BiodadHighestGrade"];
                this.columnBiograndfatherUSBorn = base.Columns["BiograndfatherUSBorn"];
                this.columnBiomomBirthYearReported = base.Columns["BiomomBirthYearReported"];
                this.columnBiomomBirthYearEstimated = base.Columns["BiomomBirthYearEstimated"];
                this.columnBiomomYearLastAsked = base.Columns["BiomomYearLastAsked"];
                this.columnBiomomAlive = base.Columns["BiomomAlive"];
                this.columnBiomomDeathCause = base.Columns["BiomomDeathCause"];
                this.columnBiomomDeathAge = base.Columns["BiomomDeathAge"];
                this.columnBiomomUSBorn = base.Columns["BiomomUSBorn"];
                this.columnBiomomHighestGrade = base.Columns["BiomomHighestGrade"];
                this.columnAlwaysLivedWithBothBioparents = base.Columns["AlwaysLivedWithBothBioparents"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSubjectTag = new global::System.Data.DataColumn("SubjectTag", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectTag);
                this.columnBiodadBirthYearReported = new global::System.Data.DataColumn("BiodadBirthYearReported", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiodadBirthYearReported);
                this.columnBiodadBirthYearEstimated = new global::System.Data.DataColumn("BiodadBirthYearEstimated", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiodadBirthYearEstimated);
                this.columnBiodadYearLastAsked = new global::System.Data.DataColumn("BiodadYearLastAsked", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiodadYearLastAsked);
                this.columnBiodadAlive = new global::System.Data.DataColumn("BiodadAlive", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiodadAlive);
                this.columnBiodadDeathCause = new global::System.Data.DataColumn("BiodadDeathCause", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiodadDeathCause);
                this.columnBiodadDeathAge = new global::System.Data.DataColumn("BiodadDeathAge", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiodadDeathAge);
                this.columnBiodadUSBorn = new global::System.Data.DataColumn("BiodadUSBorn", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiodadUSBorn);
                this.columnBiodadHighestGrade = new global::System.Data.DataColumn("BiodadHighestGrade", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiodadHighestGrade);
                this.columnBiograndfatherUSBorn = new global::System.Data.DataColumn("BiograndfatherUSBorn", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiograndfatherUSBorn);
                this.columnBiomomBirthYearReported = new global::System.Data.DataColumn("BiomomBirthYearReported", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiomomBirthYearReported);
                this.columnBiomomBirthYearEstimated = new global::System.Data.DataColumn("BiomomBirthYearEstimated", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiomomBirthYearEstimated);
                this.columnBiomomYearLastAsked = new global::System.Data.DataColumn("BiomomYearLastAsked", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiomomYearLastAsked);
                this.columnBiomomAlive = new global::System.Data.DataColumn("BiomomAlive", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiomomAlive);
                this.columnBiomomDeathCause = new global::System.Data.DataColumn("BiomomDeathCause", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiomomDeathCause);
                this.columnBiomomDeathAge = new global::System.Data.DataColumn("BiomomDeathAge", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiomomDeathAge);
                this.columnBiomomUSBorn = new global::System.Data.DataColumn("BiomomUSBorn", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiomomUSBorn);
                this.columnBiomomHighestGrade = new global::System.Data.DataColumn("BiomomHighestGrade", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiomomHighestGrade);
                this.columnAlwaysLivedWithBothBioparents = new global::System.Data.DataColumn("AlwaysLivedWithBothBioparents", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlwaysLivedWithBothBioparents);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSubjectTag}, true));
                this.columnSubjectTag.AllowDBNull = false;
                this.columnSubjectTag.Unique = true;
                this.columnBiodadAlive.AllowDBNull = false;
                this.columnBiodadDeathCause.AllowDBNull = false;
                this.columnBiodadUSBorn.AllowDBNull = false;
                this.columnBiograndfatherUSBorn.AllowDBNull = false;
                this.columnBiomomAlive.AllowDBNull = false;
                this.columnBiomomDeathCause.AllowDBNull = false;
                this.columnBiomomUSBorn.AllowDBNull = false;
                this.columnAlwaysLivedWithBothBioparents.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblParentsOfGen1CurrentRow NewtblParentsOfGen1CurrentRow() {
                return ((tblParentsOfGen1CurrentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblParentsOfGen1CurrentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tblParentsOfGen1CurrentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblParentsOfGen1CurrentRowChanged != null)) {
                    this.tblParentsOfGen1CurrentRowChanged(this, new tblParentsOfGen1CurrentRowChangeEvent(((tblParentsOfGen1CurrentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblParentsOfGen1CurrentRowChanging != null)) {
                    this.tblParentsOfGen1CurrentRowChanging(this, new tblParentsOfGen1CurrentRowChangeEvent(((tblParentsOfGen1CurrentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblParentsOfGen1CurrentRowDeleted != null)) {
                    this.tblParentsOfGen1CurrentRowDeleted(this, new tblParentsOfGen1CurrentRowChangeEvent(((tblParentsOfGen1CurrentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblParentsOfGen1CurrentRowDeleting != null)) {
                    this.tblParentsOfGen1CurrentRowDeleting(this, new tblParentsOfGen1CurrentRowChangeEvent(((tblParentsOfGen1CurrentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetblParentsOfGen1CurrentRow(tblParentsOfGen1CurrentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LinksDataSet ds = new LinksDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblParentsOfGen1CurrentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblOutcomeDataTable : global::System.Data.TypedTableBase<tblOutcomeRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnSubjectTag;
            
            private global::System.Data.DataColumn columnItem;
            
            private global::System.Data.DataColumn columnSurveyYear;
            
            private global::System.Data.DataColumn columnValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblOutcomeDataTable() {
                this.TableName = "tblOutcome";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblOutcomeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tblOutcomeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectTagColumn {
                get {
                    return this.columnSubjectTag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemColumn {
                get {
                    return this.columnItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SurveyYearColumn {
                get {
                    return this.columnSurveyYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ValueColumn {
                get {
                    return this.columnValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblOutcomeRow this[int index] {
                get {
                    return ((tblOutcomeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblOutcomeRowChangeEventHandler tblOutcomeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblOutcomeRowChangeEventHandler tblOutcomeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblOutcomeRowChangeEventHandler tblOutcomeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblOutcomeRowChangeEventHandler tblOutcomeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtblOutcomeRow(tblOutcomeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblOutcomeRow AddtblOutcomeRow(tblSubjectRow parenttblSubjectRowByFK_tblOutcome_tblSubject, short Item, short SurveyYear, int Value) {
                tblOutcomeRow rowtblOutcomeRow = ((tblOutcomeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Item,
                        SurveyYear,
                        Value};
                if ((parenttblSubjectRowByFK_tblOutcome_tblSubject != null)) {
                    columnValuesArray[1] = parenttblSubjectRowByFK_tblOutcome_tblSubject[0];
                }
                rowtblOutcomeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblOutcomeRow);
                return rowtblOutcomeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblOutcomeRow FindByID(int ID) {
                return ((tblOutcomeRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tblOutcomeDataTable cln = ((tblOutcomeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblOutcomeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnSubjectTag = base.Columns["SubjectTag"];
                this.columnItem = base.Columns["Item"];
                this.columnSurveyYear = base.Columns["SurveyYear"];
                this.columnValue = base.Columns["Value"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnSubjectTag = new global::System.Data.DataColumn("SubjectTag", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectTag);
                this.columnItem = new global::System.Data.DataColumn("Item", typeof(short), null, global::System.Data.MappingType.Element);
                this.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Item");
                this.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "ItemColumn");
                this.columnItem.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnItem");
                this.columnItem.ExtendedProperties.Add("Generator_UserColumnName", "Item");
                base.Columns.Add(this.columnItem);
                this.columnSurveyYear = new global::System.Data.DataColumn("SurveyYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurveyYear);
                this.columnValue = new global::System.Data.DataColumn("Value", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnSubjectTag.AllowDBNull = false;
                this.columnItem.AllowDBNull = false;
                this.columnSurveyYear.AllowDBNull = false;
                this.columnValue.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblOutcomeRow NewtblOutcomeRow() {
                return ((tblOutcomeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblOutcomeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tblOutcomeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblOutcomeRowChanged != null)) {
                    this.tblOutcomeRowChanged(this, new tblOutcomeRowChangeEvent(((tblOutcomeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblOutcomeRowChanging != null)) {
                    this.tblOutcomeRowChanging(this, new tblOutcomeRowChangeEvent(((tblOutcomeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblOutcomeRowDeleted != null)) {
                    this.tblOutcomeRowDeleted(this, new tblOutcomeRowChangeEvent(((tblOutcomeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblOutcomeRowDeleting != null)) {
                    this.tblOutcomeRowDeleting(this, new tblOutcomeRowChangeEvent(((tblOutcomeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetblOutcomeRow(tblOutcomeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LinksDataSet ds = new LinksDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblOutcomeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblSubjectDataTable : global::System.Data.TypedTableBase<tblSubjectRow> {
            
            private global::System.Data.DataColumn columnSubjectTag;
            
            private global::System.Data.DataColumn columnExtendedID;
            
            private global::System.Data.DataColumn columnSubjectID;
            
            private global::System.Data.DataColumn columnGeneration;
            
            private global::System.Data.DataColumn columnGender;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectDataTable() {
                this.TableName = "tblSubject";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblSubjectDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tblSubjectDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectTagColumn {
                get {
                    return this.columnSubjectTag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExtendedIDColumn {
                get {
                    return this.columnExtendedID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectIDColumn {
                get {
                    return this.columnSubjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenerationColumn {
                get {
                    return this.columnGeneration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectRow this[int index] {
                get {
                    return ((tblSubjectRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblSubjectRowChangeEventHandler tblSubjectRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblSubjectRowChangeEventHandler tblSubjectRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblSubjectRowChangeEventHandler tblSubjectRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblSubjectRowChangeEventHandler tblSubjectRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtblSubjectRow(tblSubjectRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectRow AddtblSubjectRow(int SubjectTag, short ExtendedID, int SubjectID, byte Generation, byte Gender) {
                tblSubjectRow rowtblSubjectRow = ((tblSubjectRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SubjectTag,
                        ExtendedID,
                        SubjectID,
                        Generation,
                        Gender};
                rowtblSubjectRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblSubjectRow);
                return rowtblSubjectRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectRow FindBySubjectTag(int SubjectTag) {
                return ((tblSubjectRow)(this.Rows.Find(new object[] {
                            SubjectTag})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tblSubjectDataTable cln = ((tblSubjectDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblSubjectDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSubjectTag = base.Columns["SubjectTag"];
                this.columnExtendedID = base.Columns["ExtendedID"];
                this.columnSubjectID = base.Columns["SubjectID"];
                this.columnGeneration = base.Columns["Generation"];
                this.columnGender = base.Columns["Gender"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSubjectTag = new global::System.Data.DataColumn("SubjectTag", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectTag);
                this.columnExtendedID = new global::System.Data.DataColumn("ExtendedID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtendedID);
                this.columnSubjectID = new global::System.Data.DataColumn("SubjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectID);
                this.columnGeneration = new global::System.Data.DataColumn("Generation", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneration);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSubjectTag}, true));
                this.columnSubjectTag.AllowDBNull = false;
                this.columnSubjectTag.Unique = true;
                this.columnExtendedID.AllowDBNull = false;
                this.columnSubjectID.AllowDBNull = false;
                this.columnGeneration.AllowDBNull = false;
                this.columnGender.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectRow NewtblSubjectRow() {
                return ((tblSubjectRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblSubjectRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tblSubjectRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblSubjectRowChanged != null)) {
                    this.tblSubjectRowChanged(this, new tblSubjectRowChangeEvent(((tblSubjectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblSubjectRowChanging != null)) {
                    this.tblSubjectRowChanging(this, new tblSubjectRowChangeEvent(((tblSubjectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblSubjectRowDeleted != null)) {
                    this.tblSubjectRowDeleted(this, new tblSubjectRowChangeEvent(((tblSubjectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblSubjectRowDeleting != null)) {
                    this.tblSubjectRowDeleting(this, new tblSubjectRowChangeEvent(((tblSubjectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetblSubjectRow(tblSubjectRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LinksDataSet ds = new LinksDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblSubjectDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblRelatedStructureDataTable : global::System.Data.TypedTableBase<tblRelatedStructureRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnExtendedID;
            
            private global::System.Data.DataColumn columnSubjectTag_S1;
            
            private global::System.Data.DataColumn columnSubjectTag_S2;
            
            private global::System.Data.DataColumn columnRelationshipPath;
            
            private global::System.Data.DataColumn columnEverSharedHouse;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedStructureDataTable() {
                this.TableName = "tblRelatedStructure";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblRelatedStructureDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tblRelatedStructureDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExtendedIDColumn {
                get {
                    return this.columnExtendedID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectTag_S1Column {
                get {
                    return this.columnSubjectTag_S1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectTag_S2Column {
                get {
                    return this.columnSubjectTag_S2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RelationshipPathColumn {
                get {
                    return this.columnRelationshipPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EverSharedHouseColumn {
                get {
                    return this.columnEverSharedHouse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedStructureRow this[int index] {
                get {
                    return ((tblRelatedStructureRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblRelatedStructureRowChangeEventHandler tblRelatedStructureRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblRelatedStructureRowChangeEventHandler tblRelatedStructureRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblRelatedStructureRowChangeEventHandler tblRelatedStructureRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblRelatedStructureRowChangeEventHandler tblRelatedStructureRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtblRelatedStructureRow(tblRelatedStructureRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedStructureRow AddtblRelatedStructureRow(short ExtendedID, tblSubjectRow parenttblSubjectRowByFK_tblRelatedStructure_tblSubject_Subject1, tblSubjectRow parenttblSubjectRowByFK_tblRelatedStructure_tblSubject_Subject2, byte RelationshipPath, bool EverSharedHouse) {
                tblRelatedStructureRow rowtblRelatedStructureRow = ((tblRelatedStructureRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ExtendedID,
                        null,
                        null,
                        RelationshipPath,
                        EverSharedHouse};
                if ((parenttblSubjectRowByFK_tblRelatedStructure_tblSubject_Subject1 != null)) {
                    columnValuesArray[2] = parenttblSubjectRowByFK_tblRelatedStructure_tblSubject_Subject1[0];
                }
                if ((parenttblSubjectRowByFK_tblRelatedStructure_tblSubject_Subject2 != null)) {
                    columnValuesArray[3] = parenttblSubjectRowByFK_tblRelatedStructure_tblSubject_Subject2[0];
                }
                rowtblRelatedStructureRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblRelatedStructureRow);
                return rowtblRelatedStructureRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedStructureRow FindByID(int ID) {
                return ((tblRelatedStructureRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tblRelatedStructureDataTable cln = ((tblRelatedStructureDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblRelatedStructureDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnExtendedID = base.Columns["ExtendedID"];
                this.columnSubjectTag_S1 = base.Columns["SubjectTag_S1"];
                this.columnSubjectTag_S2 = base.Columns["SubjectTag_S2"];
                this.columnRelationshipPath = base.Columns["RelationshipPath"];
                this.columnEverSharedHouse = base.Columns["EverSharedHouse"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnExtendedID = new global::System.Data.DataColumn("ExtendedID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtendedID);
                this.columnSubjectTag_S1 = new global::System.Data.DataColumn("SubjectTag_S1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectTag_S1);
                this.columnSubjectTag_S2 = new global::System.Data.DataColumn("SubjectTag_S2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectTag_S2);
                this.columnRelationshipPath = new global::System.Data.DataColumn("RelationshipPath", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelationshipPath);
                this.columnEverSharedHouse = new global::System.Data.DataColumn("EverSharedHouse", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEverSharedHouse);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnExtendedID.AllowDBNull = false;
                this.columnSubjectTag_S1.AllowDBNull = false;
                this.columnSubjectTag_S2.AllowDBNull = false;
                this.columnRelationshipPath.AllowDBNull = false;
                this.columnEverSharedHouse.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedStructureRow NewtblRelatedStructureRow() {
                return ((tblRelatedStructureRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblRelatedStructureRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tblRelatedStructureRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblRelatedStructureRowChanged != null)) {
                    this.tblRelatedStructureRowChanged(this, new tblRelatedStructureRowChangeEvent(((tblRelatedStructureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblRelatedStructureRowChanging != null)) {
                    this.tblRelatedStructureRowChanging(this, new tblRelatedStructureRowChangeEvent(((tblRelatedStructureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblRelatedStructureRowDeleted != null)) {
                    this.tblRelatedStructureRowDeleted(this, new tblRelatedStructureRowChangeEvent(((tblRelatedStructureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblRelatedStructureRowDeleting != null)) {
                    this.tblRelatedStructureRowDeleting(this, new tblRelatedStructureRowChangeEvent(((tblRelatedStructureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetblRelatedStructureRow(tblRelatedStructureRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LinksDataSet ds = new LinksDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblRelatedStructureDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblRelatedValuesDataTable : global::System.Data.TypedTableBase<tblRelatedValuesRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnMultipleBirthIfSameSex;
            
            private global::System.Data.DataColumn columnIsMz;
            
            private global::System.Data.DataColumn columnLastSurvey_S1;
            
            private global::System.Data.DataColumn columnLastSurvey_S2;
            
            private global::System.Data.DataColumn columnImplicitShareBiomomPass1;
            
            private global::System.Data.DataColumn columnImplicitShareBiodadPass1;
            
            private global::System.Data.DataColumn columnExplicitShareBiomomPass1;
            
            private global::System.Data.DataColumn columnExplicitShareBiodadPass1;
            
            private global::System.Data.DataColumn columnShareBiomomPass1;
            
            private global::System.Data.DataColumn columnShareBiodadPass1;
            
            private global::System.Data.DataColumn columnRImplicitPass1;
            
            private global::System.Data.DataColumn columnRImplicit;
            
            private global::System.Data.DataColumn columnRImplicitSubject;
            
            private global::System.Data.DataColumn columnRImplicitMother;
            
            private global::System.Data.DataColumn columnRImplicit2004;
            
            private global::System.Data.DataColumn columnRExplicitOlderSibVersion;
            
            private global::System.Data.DataColumn columnRExplicitYoungerSibVersion;
            
            private global::System.Data.DataColumn columnRExplicitPass1;
            
            private global::System.Data.DataColumn columnRExplicit;
            
            private global::System.Data.DataColumn columnRPass1;
            
            private global::System.Data.DataColumn columnR;
            
            private global::System.Data.DataColumn columnRFull;
            
            private global::System.Data.DataColumn columnRPeek;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedValuesDataTable() {
                this.TableName = "tblRelatedValues";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblRelatedValuesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tblRelatedValuesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MultipleBirthIfSameSexColumn {
                get {
                    return this.columnMultipleBirthIfSameSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsMzColumn {
                get {
                    return this.columnIsMz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastSurvey_S1Column {
                get {
                    return this.columnLastSurvey_S1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastSurvey_S2Column {
                get {
                    return this.columnLastSurvey_S2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImplicitShareBiomomPass1Column {
                get {
                    return this.columnImplicitShareBiomomPass1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImplicitShareBiodadPass1Column {
                get {
                    return this.columnImplicitShareBiodadPass1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExplicitShareBiomomPass1Column {
                get {
                    return this.columnExplicitShareBiomomPass1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExplicitShareBiodadPass1Column {
                get {
                    return this.columnExplicitShareBiodadPass1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShareBiomomPass1Column {
                get {
                    return this.columnShareBiomomPass1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShareBiodadPass1Column {
                get {
                    return this.columnShareBiodadPass1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RImplicitPass1Column {
                get {
                    return this.columnRImplicitPass1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RImplicitColumn {
                get {
                    return this.columnRImplicit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RImplicitSubjectColumn {
                get {
                    return this.columnRImplicitSubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RImplicitMotherColumn {
                get {
                    return this.columnRImplicitMother;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RImplicit2004Column {
                get {
                    return this.columnRImplicit2004;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RExplicitOlderSibVersionColumn {
                get {
                    return this.columnRExplicitOlderSibVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RExplicitYoungerSibVersionColumn {
                get {
                    return this.columnRExplicitYoungerSibVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RExplicitPass1Column {
                get {
                    return this.columnRExplicitPass1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RExplicitColumn {
                get {
                    return this.columnRExplicit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RPass1Column {
                get {
                    return this.columnRPass1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RColumn {
                get {
                    return this.columnR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RFullColumn {
                get {
                    return this.columnRFull;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RPeekColumn {
                get {
                    return this.columnRPeek;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedValuesRow this[int index] {
                get {
                    return ((tblRelatedValuesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblRelatedValuesRowChangeEventHandler tblRelatedValuesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblRelatedValuesRowChangeEventHandler tblRelatedValuesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblRelatedValuesRowChangeEventHandler tblRelatedValuesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblRelatedValuesRowChangeEventHandler tblRelatedValuesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtblRelatedValuesRow(tblRelatedValuesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedValuesRow AddtblRelatedValuesRow(
                        tblRelatedStructureRow parenttblRelatedStructureRowByFK_tblRelatedValues_tblRelatedStructure, 
                        byte MultipleBirthIfSameSex, 
                        byte IsMz, 
                        short LastSurvey_S1, 
                        short LastSurvey_S2, 
                        byte ImplicitShareBiomomPass1, 
                        byte ImplicitShareBiodadPass1, 
                        byte ExplicitShareBiomomPass1, 
                        byte ExplicitShareBiodadPass1, 
                        byte ShareBiomomPass1, 
                        byte ShareBiodadPass1, 
                        double RImplicitPass1, 
                        double RImplicit, 
                        double RImplicitSubject, 
                        double RImplicitMother, 
                        double RImplicit2004, 
                        double RExplicitOlderSibVersion, 
                        double RExplicitYoungerSibVersion, 
                        double RExplicitPass1, 
                        double RExplicit, 
                        double RPass1, 
                        double R, 
                        double RFull, 
                        double RPeek) {
                tblRelatedValuesRow rowtblRelatedValuesRow = ((tblRelatedValuesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MultipleBirthIfSameSex,
                        IsMz,
                        LastSurvey_S1,
                        LastSurvey_S2,
                        ImplicitShareBiomomPass1,
                        ImplicitShareBiodadPass1,
                        ExplicitShareBiomomPass1,
                        ExplicitShareBiodadPass1,
                        ShareBiomomPass1,
                        ShareBiodadPass1,
                        RImplicitPass1,
                        RImplicit,
                        RImplicitSubject,
                        RImplicitMother,
                        RImplicit2004,
                        RExplicitOlderSibVersion,
                        RExplicitYoungerSibVersion,
                        RExplicitPass1,
                        RExplicit,
                        RPass1,
                        R,
                        RFull,
                        RPeek};
                if ((parenttblRelatedStructureRowByFK_tblRelatedValues_tblRelatedStructure != null)) {
                    columnValuesArray[0] = parenttblRelatedStructureRowByFK_tblRelatedValues_tblRelatedStructure[0];
                }
                rowtblRelatedValuesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblRelatedValuesRow);
                return rowtblRelatedValuesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedValuesRow FindByID(int ID) {
                return ((tblRelatedValuesRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tblRelatedValuesDataTable cln = ((tblRelatedValuesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblRelatedValuesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnMultipleBirthIfSameSex = base.Columns["MultipleBirthIfSameSex"];
                this.columnIsMz = base.Columns["IsMz"];
                this.columnLastSurvey_S1 = base.Columns["LastSurvey_S1"];
                this.columnLastSurvey_S2 = base.Columns["LastSurvey_S2"];
                this.columnImplicitShareBiomomPass1 = base.Columns["ImplicitShareBiomomPass1"];
                this.columnImplicitShareBiodadPass1 = base.Columns["ImplicitShareBiodadPass1"];
                this.columnExplicitShareBiomomPass1 = base.Columns["ExplicitShareBiomomPass1"];
                this.columnExplicitShareBiodadPass1 = base.Columns["ExplicitShareBiodadPass1"];
                this.columnShareBiomomPass1 = base.Columns["ShareBiomomPass1"];
                this.columnShareBiodadPass1 = base.Columns["ShareBiodadPass1"];
                this.columnRImplicitPass1 = base.Columns["RImplicitPass1"];
                this.columnRImplicit = base.Columns["RImplicit"];
                this.columnRImplicitSubject = base.Columns["RImplicitSubject"];
                this.columnRImplicitMother = base.Columns["RImplicitMother"];
                this.columnRImplicit2004 = base.Columns["RImplicit2004"];
                this.columnRExplicitOlderSibVersion = base.Columns["RExplicitOlderSibVersion"];
                this.columnRExplicitYoungerSibVersion = base.Columns["RExplicitYoungerSibVersion"];
                this.columnRExplicitPass1 = base.Columns["RExplicitPass1"];
                this.columnRExplicit = base.Columns["RExplicit"];
                this.columnRPass1 = base.Columns["RPass1"];
                this.columnR = base.Columns["R"];
                this.columnRFull = base.Columns["RFull"];
                this.columnRPeek = base.Columns["RPeek"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnMultipleBirthIfSameSex = new global::System.Data.DataColumn("MultipleBirthIfSameSex", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMultipleBirthIfSameSex);
                this.columnIsMz = new global::System.Data.DataColumn("IsMz", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsMz);
                this.columnLastSurvey_S1 = new global::System.Data.DataColumn("LastSurvey_S1", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastSurvey_S1);
                this.columnLastSurvey_S2 = new global::System.Data.DataColumn("LastSurvey_S2", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastSurvey_S2);
                this.columnImplicitShareBiomomPass1 = new global::System.Data.DataColumn("ImplicitShareBiomomPass1", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImplicitShareBiomomPass1);
                this.columnImplicitShareBiodadPass1 = new global::System.Data.DataColumn("ImplicitShareBiodadPass1", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImplicitShareBiodadPass1);
                this.columnExplicitShareBiomomPass1 = new global::System.Data.DataColumn("ExplicitShareBiomomPass1", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExplicitShareBiomomPass1);
                this.columnExplicitShareBiodadPass1 = new global::System.Data.DataColumn("ExplicitShareBiodadPass1", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExplicitShareBiodadPass1);
                this.columnShareBiomomPass1 = new global::System.Data.DataColumn("ShareBiomomPass1", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShareBiomomPass1);
                this.columnShareBiodadPass1 = new global::System.Data.DataColumn("ShareBiodadPass1", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShareBiodadPass1);
                this.columnRImplicitPass1 = new global::System.Data.DataColumn("RImplicitPass1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRImplicitPass1);
                this.columnRImplicit = new global::System.Data.DataColumn("RImplicit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRImplicit);
                this.columnRImplicitSubject = new global::System.Data.DataColumn("RImplicitSubject", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRImplicitSubject);
                this.columnRImplicitMother = new global::System.Data.DataColumn("RImplicitMother", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRImplicitMother);
                this.columnRImplicit2004 = new global::System.Data.DataColumn("RImplicit2004", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRImplicit2004);
                this.columnRExplicitOlderSibVersion = new global::System.Data.DataColumn("RExplicitOlderSibVersion", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRExplicitOlderSibVersion);
                this.columnRExplicitYoungerSibVersion = new global::System.Data.DataColumn("RExplicitYoungerSibVersion", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRExplicitYoungerSibVersion);
                this.columnRExplicitPass1 = new global::System.Data.DataColumn("RExplicitPass1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRExplicitPass1);
                this.columnRExplicit = new global::System.Data.DataColumn("RExplicit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRExplicit);
                this.columnRPass1 = new global::System.Data.DataColumn("RPass1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPass1);
                this.columnR = new global::System.Data.DataColumn("R", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnR);
                this.columnRFull = new global::System.Data.DataColumn("RFull", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRFull);
                this.columnRPeek = new global::System.Data.DataColumn("RPeek", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPeek);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnMultipleBirthIfSameSex.AllowDBNull = false;
                this.columnIsMz.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedValuesRow NewtblRelatedValuesRow() {
                return ((tblRelatedValuesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblRelatedValuesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tblRelatedValuesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblRelatedValuesRowChanged != null)) {
                    this.tblRelatedValuesRowChanged(this, new tblRelatedValuesRowChangeEvent(((tblRelatedValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblRelatedValuesRowChanging != null)) {
                    this.tblRelatedValuesRowChanging(this, new tblRelatedValuesRowChangeEvent(((tblRelatedValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblRelatedValuesRowDeleted != null)) {
                    this.tblRelatedValuesRowDeleted(this, new tblRelatedValuesRowChangeEvent(((tblRelatedValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblRelatedValuesRowDeleting != null)) {
                    this.tblRelatedValuesRowDeleting(this, new tblRelatedValuesRowChangeEvent(((tblRelatedValuesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetblRelatedValuesRow(tblRelatedValuesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LinksDataSet ds = new LinksDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblRelatedValuesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblSubjectDetailsDataTable : global::System.Data.TypedTableBase<tblSubjectDetailsRow> {
            
            private global::System.Data.DataColumn columnSubjectTag;
            
            private global::System.Data.DataColumn columnRaceCohort;
            
            private global::System.Data.DataColumn columnSiblingCountInNls;
            
            private global::System.Data.DataColumn columnBirthOrderInNls;
            
            private global::System.Data.DataColumn columnSimilarAgeCount;
            
            private global::System.Data.DataColumn columnHasMzPossibly;
            
            private global::System.Data.DataColumn columnKidCountBio;
            
            private global::System.Data.DataColumn columnKidCountInNls;
            
            private global::System.Data.DataColumn columnMob;
            
            private global::System.Data.DataColumn columnLastSurveyYearCompleted;
            
            private global::System.Data.DataColumn columnAgeAtLastSurvey;
            
            private global::System.Data.DataColumn columnIsDead;
            
            private global::System.Data.DataColumn columnDeathDate;
            
            private global::System.Data.DataColumn columnIsBiodadDead;
            
            private global::System.Data.DataColumn columnBiodadDeathDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectDetailsDataTable() {
                this.TableName = "tblSubjectDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblSubjectDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tblSubjectDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectTagColumn {
                get {
                    return this.columnSubjectTag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RaceCohortColumn {
                get {
                    return this.columnRaceCohort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SiblingCountInNlsColumn {
                get {
                    return this.columnSiblingCountInNls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BirthOrderInNlsColumn {
                get {
                    return this.columnBirthOrderInNls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SimilarAgeCountColumn {
                get {
                    return this.columnSimilarAgeCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HasMzPossiblyColumn {
                get {
                    return this.columnHasMzPossibly;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KidCountBioColumn {
                get {
                    return this.columnKidCountBio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KidCountInNlsColumn {
                get {
                    return this.columnKidCountInNls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MobColumn {
                get {
                    return this.columnMob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastSurveyYearCompletedColumn {
                get {
                    return this.columnLastSurveyYearCompleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeAtLastSurveyColumn {
                get {
                    return this.columnAgeAtLastSurvey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsDeadColumn {
                get {
                    return this.columnIsDead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeathDateColumn {
                get {
                    return this.columnDeathDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsBiodadDeadColumn {
                get {
                    return this.columnIsBiodadDead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiodadDeathDateColumn {
                get {
                    return this.columnBiodadDeathDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectDetailsRow this[int index] {
                get {
                    return ((tblSubjectDetailsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblSubjectDetailsRowChangeEventHandler tblSubjectDetailsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblSubjectDetailsRowChangeEventHandler tblSubjectDetailsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblSubjectDetailsRowChangeEventHandler tblSubjectDetailsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblSubjectDetailsRowChangeEventHandler tblSubjectDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtblSubjectDetailsRow(tblSubjectDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectDetailsRow AddtblSubjectDetailsRow(tblSubjectRow parenttblSubjectRowByFK_tblSubjectDetails_tblSubject, byte RaceCohort, byte SiblingCountInNls, byte BirthOrderInNls, byte SimilarAgeCount, bool HasMzPossibly, byte KidCountBio, byte KidCountInNls, System.DateTime Mob, short LastSurveyYearCompleted, double AgeAtLastSurvey, bool IsDead, System.DateTime DeathDate, bool IsBiodadDead, System.DateTime BiodadDeathDate) {
                tblSubjectDetailsRow rowtblSubjectDetailsRow = ((tblSubjectDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        RaceCohort,
                        SiblingCountInNls,
                        BirthOrderInNls,
                        SimilarAgeCount,
                        HasMzPossibly,
                        KidCountBio,
                        KidCountInNls,
                        Mob,
                        LastSurveyYearCompleted,
                        AgeAtLastSurvey,
                        IsDead,
                        DeathDate,
                        IsBiodadDead,
                        BiodadDeathDate};
                if ((parenttblSubjectRowByFK_tblSubjectDetails_tblSubject != null)) {
                    columnValuesArray[0] = parenttblSubjectRowByFK_tblSubjectDetails_tblSubject[0];
                }
                rowtblSubjectDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblSubjectDetailsRow);
                return rowtblSubjectDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectDetailsRow FindBySubjectTag(int SubjectTag) {
                return ((tblSubjectDetailsRow)(this.Rows.Find(new object[] {
                            SubjectTag})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tblSubjectDetailsDataTable cln = ((tblSubjectDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblSubjectDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSubjectTag = base.Columns["SubjectTag"];
                this.columnRaceCohort = base.Columns["RaceCohort"];
                this.columnSiblingCountInNls = base.Columns["SiblingCountInNls"];
                this.columnBirthOrderInNls = base.Columns["BirthOrderInNls"];
                this.columnSimilarAgeCount = base.Columns["SimilarAgeCount"];
                this.columnHasMzPossibly = base.Columns["HasMzPossibly"];
                this.columnKidCountBio = base.Columns["KidCountBio"];
                this.columnKidCountInNls = base.Columns["KidCountInNls"];
                this.columnMob = base.Columns["Mob"];
                this.columnLastSurveyYearCompleted = base.Columns["LastSurveyYearCompleted"];
                this.columnAgeAtLastSurvey = base.Columns["AgeAtLastSurvey"];
                this.columnIsDead = base.Columns["IsDead"];
                this.columnDeathDate = base.Columns["DeathDate"];
                this.columnIsBiodadDead = base.Columns["IsBiodadDead"];
                this.columnBiodadDeathDate = base.Columns["BiodadDeathDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSubjectTag = new global::System.Data.DataColumn("SubjectTag", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectTag);
                this.columnRaceCohort = new global::System.Data.DataColumn("RaceCohort", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRaceCohort);
                this.columnSiblingCountInNls = new global::System.Data.DataColumn("SiblingCountInNls", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiblingCountInNls);
                this.columnBirthOrderInNls = new global::System.Data.DataColumn("BirthOrderInNls", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthOrderInNls);
                this.columnSimilarAgeCount = new global::System.Data.DataColumn("SimilarAgeCount", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSimilarAgeCount);
                this.columnHasMzPossibly = new global::System.Data.DataColumn("HasMzPossibly", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasMzPossibly);
                this.columnKidCountBio = new global::System.Data.DataColumn("KidCountBio", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKidCountBio);
                this.columnKidCountInNls = new global::System.Data.DataColumn("KidCountInNls", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKidCountInNls);
                this.columnMob = new global::System.Data.DataColumn("Mob", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMob);
                this.columnLastSurveyYearCompleted = new global::System.Data.DataColumn("LastSurveyYearCompleted", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastSurveyYearCompleted);
                this.columnAgeAtLastSurvey = new global::System.Data.DataColumn("AgeAtLastSurvey", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeAtLastSurvey);
                this.columnIsDead = new global::System.Data.DataColumn("IsDead", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDead);
                this.columnDeathDate = new global::System.Data.DataColumn("DeathDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeathDate);
                this.columnIsBiodadDead = new global::System.Data.DataColumn("IsBiodadDead", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsBiodadDead);
                this.columnBiodadDeathDate = new global::System.Data.DataColumn("BiodadDeathDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiodadDeathDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSubjectTag}, true));
                this.columnSubjectTag.AllowDBNull = false;
                this.columnSubjectTag.Unique = true;
                this.columnRaceCohort.AllowDBNull = false;
                this.columnSiblingCountInNls.AllowDBNull = false;
                this.columnBirthOrderInNls.AllowDBNull = false;
                this.columnSimilarAgeCount.AllowDBNull = false;
                this.columnHasMzPossibly.AllowDBNull = false;
                this.columnIsDead.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectDetailsRow NewtblSubjectDetailsRow() {
                return ((tblSubjectDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblSubjectDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tblSubjectDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblSubjectDetailsRowChanged != null)) {
                    this.tblSubjectDetailsRowChanged(this, new tblSubjectDetailsRowChangeEvent(((tblSubjectDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblSubjectDetailsRowChanging != null)) {
                    this.tblSubjectDetailsRowChanging(this, new tblSubjectDetailsRowChangeEvent(((tblSubjectDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblSubjectDetailsRowDeleted != null)) {
                    this.tblSubjectDetailsRowDeleted(this, new tblSubjectDetailsRowChangeEvent(((tblSubjectDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblSubjectDetailsRowDeleting != null)) {
                    this.tblSubjectDetailsRowDeleting(this, new tblSubjectDetailsRowChangeEvent(((tblSubjectDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetblSubjectDetailsRow(tblSubjectDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LinksDataSet ds = new LinksDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblSubjectDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblMzManualDataTable : global::System.Data.TypedTableBase<tblMzManualRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnSubjectTag_S1;
            
            private global::System.Data.DataColumn columnSubjectTag_S2;
            
            private global::System.Data.DataColumn columnGeneration;
            
            private global::System.Data.DataColumn columnMultipleBirthIfSameSex;
            
            private global::System.Data.DataColumn columnIsMz;
            
            private global::System.Data.DataColumn columnUndecided;
            
            private global::System.Data.DataColumn columnRelated;
            
            private global::System.Data.DataColumn columnNotes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblMzManualDataTable() {
                this.TableName = "tblMzManual";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblMzManualDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tblMzManualDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectTag_S1Column {
                get {
                    return this.columnSubjectTag_S1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectTag_S2Column {
                get {
                    return this.columnSubjectTag_S2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenerationColumn {
                get {
                    return this.columnGeneration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MultipleBirthIfSameSexColumn {
                get {
                    return this.columnMultipleBirthIfSameSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsMzColumn {
                get {
                    return this.columnIsMz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UndecidedColumn {
                get {
                    return this.columnUndecided;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RelatedColumn {
                get {
                    return this.columnRelated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NotesColumn {
                get {
                    return this.columnNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblMzManualRow this[int index] {
                get {
                    return ((tblMzManualRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblMzManualRowChangeEventHandler tblMzManualRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblMzManualRowChangeEventHandler tblMzManualRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblMzManualRowChangeEventHandler tblMzManualRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblMzManualRowChangeEventHandler tblMzManualRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtblMzManualRow(tblMzManualRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblMzManualRow AddtblMzManualRow(int ID, int SubjectTag_S1, int SubjectTag_S2, byte Generation, byte MultipleBirthIfSameSex, byte IsMz, bool Undecided, bool Related, string Notes) {
                tblMzManualRow rowtblMzManualRow = ((tblMzManualRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        SubjectTag_S1,
                        SubjectTag_S2,
                        Generation,
                        MultipleBirthIfSameSex,
                        IsMz,
                        Undecided,
                        Related,
                        Notes};
                rowtblMzManualRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblMzManualRow);
                return rowtblMzManualRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblMzManualRow FindByID(int ID) {
                return ((tblMzManualRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tblMzManualDataTable cln = ((tblMzManualDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblMzManualDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnSubjectTag_S1 = base.Columns["SubjectTag_S1"];
                this.columnSubjectTag_S2 = base.Columns["SubjectTag_S2"];
                this.columnGeneration = base.Columns["Generation"];
                this.columnMultipleBirthIfSameSex = base.Columns["MultipleBirthIfSameSex"];
                this.columnIsMz = base.Columns["IsMz"];
                this.columnUndecided = base.Columns["Undecided"];
                this.columnRelated = base.Columns["Related"];
                this.columnNotes = base.Columns["Notes"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnSubjectTag_S1 = new global::System.Data.DataColumn("SubjectTag_S1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectTag_S1);
                this.columnSubjectTag_S2 = new global::System.Data.DataColumn("SubjectTag_S2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectTag_S2);
                this.columnGeneration = new global::System.Data.DataColumn("Generation", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneration);
                this.columnMultipleBirthIfSameSex = new global::System.Data.DataColumn("MultipleBirthIfSameSex", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMultipleBirthIfSameSex);
                this.columnIsMz = new global::System.Data.DataColumn("IsMz", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsMz);
                this.columnUndecided = new global::System.Data.DataColumn("Undecided", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUndecided);
                this.columnRelated = new global::System.Data.DataColumn("Related", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelated);
                this.columnNotes = new global::System.Data.DataColumn("Notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotes);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnSubjectTag_S1.AllowDBNull = false;
                this.columnSubjectTag_S2.AllowDBNull = false;
                this.columnGeneration.AllowDBNull = false;
                this.columnMultipleBirthIfSameSex.AllowDBNull = false;
                this.columnIsMz.AllowDBNull = false;
                this.columnUndecided.AllowDBNull = false;
                this.columnNotes.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblMzManualRow NewtblMzManualRow() {
                return ((tblMzManualRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblMzManualRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tblMzManualRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblMzManualRowChanged != null)) {
                    this.tblMzManualRowChanged(this, new tblMzManualRowChangeEvent(((tblMzManualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblMzManualRowChanging != null)) {
                    this.tblMzManualRowChanging(this, new tblMzManualRowChangeEvent(((tblMzManualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblMzManualRowDeleted != null)) {
                    this.tblMzManualRowDeleted(this, new tblMzManualRowChangeEvent(((tblMzManualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblMzManualRowDeleting != null)) {
                    this.tblMzManualRowDeleting(this, new tblMzManualRowChangeEvent(((tblMzManualRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetblMzManualRow(tblMzManualRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LinksDataSet ds = new LinksDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblMzManualDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblRosterGen1AssignmentDataTable : global::System.Data.TypedTableBase<tblRosterGen1AssignmentRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnResponseLower;
            
            private global::System.Data.DataColumn columnResponseUpper;
            
            private global::System.Data.DataColumn columnFreq;
            
            private global::System.Data.DataColumn columnResolved;
            
            private global::System.Data.DataColumn columnR;
            
            private global::System.Data.DataColumn columnRBoundLower;
            
            private global::System.Data.DataColumn columnRBoundUpper;
            
            private global::System.Data.DataColumn columnSameGeneration;
            
            private global::System.Data.DataColumn columnShareBiodad;
            
            private global::System.Data.DataColumn columnShareBiomom;
            
            private global::System.Data.DataColumn columnShareBiograndparent;
            
            private global::System.Data.DataColumn columnInconsistent;
            
            private global::System.Data.DataColumn columnNotes;
            
            private global::System.Data.DataColumn columnResponseLowerLabel;
            
            private global::System.Data.DataColumn columnResponseUpperLabel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRosterGen1AssignmentDataTable() {
                this.TableName = "tblRosterGen1Assignment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblRosterGen1AssignmentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tblRosterGen1AssignmentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResponseLowerColumn {
                get {
                    return this.columnResponseLower;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResponseUpperColumn {
                get {
                    return this.columnResponseUpper;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreqColumn {
                get {
                    return this.columnFreq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResolvedColumn {
                get {
                    return this.columnResolved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RColumn {
                get {
                    return this.columnR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RBoundLowerColumn {
                get {
                    return this.columnRBoundLower;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RBoundUpperColumn {
                get {
                    return this.columnRBoundUpper;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SameGenerationColumn {
                get {
                    return this.columnSameGeneration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShareBiodadColumn {
                get {
                    return this.columnShareBiodad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShareBiomomColumn {
                get {
                    return this.columnShareBiomom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShareBiograndparentColumn {
                get {
                    return this.columnShareBiograndparent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InconsistentColumn {
                get {
                    return this.columnInconsistent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NotesColumn {
                get {
                    return this.columnNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResponseLowerLabelColumn {
                get {
                    return this.columnResponseLowerLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResponseUpperLabelColumn {
                get {
                    return this.columnResponseUpperLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRosterGen1AssignmentRow this[int index] {
                get {
                    return ((tblRosterGen1AssignmentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblRosterGen1AssignmentRowChangeEventHandler tblRosterGen1AssignmentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblRosterGen1AssignmentRowChangeEventHandler tblRosterGen1AssignmentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblRosterGen1AssignmentRowChangeEventHandler tblRosterGen1AssignmentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblRosterGen1AssignmentRowChangeEventHandler tblRosterGen1AssignmentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtblRosterGen1AssignmentRow(tblRosterGen1AssignmentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRosterGen1AssignmentRow AddtblRosterGen1AssignmentRow(
                        byte ID, 
                        short ResponseLower, 
                        short ResponseUpper, 
                        short Freq, 
                        bool Resolved, 
                        double R, 
                        double RBoundLower, 
                        double RBoundUpper, 
                        byte SameGeneration, 
                        byte ShareBiodad, 
                        byte ShareBiomom, 
                        byte ShareBiograndparent, 
                        bool Inconsistent, 
                        string Notes, 
                        string ResponseLowerLabel, 
                        string ResponseUpperLabel) {
                tblRosterGen1AssignmentRow rowtblRosterGen1AssignmentRow = ((tblRosterGen1AssignmentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        ResponseLower,
                        ResponseUpper,
                        Freq,
                        Resolved,
                        R,
                        RBoundLower,
                        RBoundUpper,
                        SameGeneration,
                        ShareBiodad,
                        ShareBiomom,
                        ShareBiograndparent,
                        Inconsistent,
                        Notes,
                        ResponseLowerLabel,
                        ResponseUpperLabel};
                rowtblRosterGen1AssignmentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblRosterGen1AssignmentRow);
                return rowtblRosterGen1AssignmentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRosterGen1AssignmentRow FindByID(byte ID) {
                return ((tblRosterGen1AssignmentRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tblRosterGen1AssignmentDataTable cln = ((tblRosterGen1AssignmentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblRosterGen1AssignmentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnResponseLower = base.Columns["ResponseLower"];
                this.columnResponseUpper = base.Columns["ResponseUpper"];
                this.columnFreq = base.Columns["Freq"];
                this.columnResolved = base.Columns["Resolved"];
                this.columnR = base.Columns["R"];
                this.columnRBoundLower = base.Columns["RBoundLower"];
                this.columnRBoundUpper = base.Columns["RBoundUpper"];
                this.columnSameGeneration = base.Columns["SameGeneration"];
                this.columnShareBiodad = base.Columns["ShareBiodad"];
                this.columnShareBiomom = base.Columns["ShareBiomom"];
                this.columnShareBiograndparent = base.Columns["ShareBiograndparent"];
                this.columnInconsistent = base.Columns["Inconsistent"];
                this.columnNotes = base.Columns["Notes"];
                this.columnResponseLowerLabel = base.Columns["ResponseLowerLabel"];
                this.columnResponseUpperLabel = base.Columns["ResponseUpperLabel"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnResponseLower = new global::System.Data.DataColumn("ResponseLower", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResponseLower);
                this.columnResponseUpper = new global::System.Data.DataColumn("ResponseUpper", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResponseUpper);
                this.columnFreq = new global::System.Data.DataColumn("Freq", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreq);
                this.columnResolved = new global::System.Data.DataColumn("Resolved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResolved);
                this.columnR = new global::System.Data.DataColumn("R", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnR);
                this.columnRBoundLower = new global::System.Data.DataColumn("RBoundLower", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRBoundLower);
                this.columnRBoundUpper = new global::System.Data.DataColumn("RBoundUpper", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRBoundUpper);
                this.columnSameGeneration = new global::System.Data.DataColumn("SameGeneration", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSameGeneration);
                this.columnShareBiodad = new global::System.Data.DataColumn("ShareBiodad", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShareBiodad);
                this.columnShareBiomom = new global::System.Data.DataColumn("ShareBiomom", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShareBiomom);
                this.columnShareBiograndparent = new global::System.Data.DataColumn("ShareBiograndparent", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShareBiograndparent);
                this.columnInconsistent = new global::System.Data.DataColumn("Inconsistent", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInconsistent);
                this.columnNotes = new global::System.Data.DataColumn("Notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotes);
                this.columnResponseLowerLabel = new global::System.Data.DataColumn("ResponseLowerLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResponseLowerLabel);
                this.columnResponseUpperLabel = new global::System.Data.DataColumn("ResponseUpperLabel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResponseUpperLabel);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnResponseLower.AllowDBNull = false;
                this.columnResponseUpper.AllowDBNull = false;
                this.columnFreq.AllowDBNull = false;
                this.columnResolved.AllowDBNull = false;
                this.columnRBoundLower.AllowDBNull = false;
                this.columnRBoundUpper.AllowDBNull = false;
                this.columnSameGeneration.AllowDBNull = false;
                this.columnShareBiodad.AllowDBNull = false;
                this.columnShareBiomom.AllowDBNull = false;
                this.columnShareBiograndparent.AllowDBNull = false;
                this.columnInconsistent.AllowDBNull = false;
                this.columnNotes.MaxLength = 255;
                this.columnResponseLowerLabel.MaxLength = 50;
                this.columnResponseUpperLabel.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRosterGen1AssignmentRow NewtblRosterGen1AssignmentRow() {
                return ((tblRosterGen1AssignmentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblRosterGen1AssignmentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tblRosterGen1AssignmentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblRosterGen1AssignmentRowChanged != null)) {
                    this.tblRosterGen1AssignmentRowChanged(this, new tblRosterGen1AssignmentRowChangeEvent(((tblRosterGen1AssignmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblRosterGen1AssignmentRowChanging != null)) {
                    this.tblRosterGen1AssignmentRowChanging(this, new tblRosterGen1AssignmentRowChangeEvent(((tblRosterGen1AssignmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblRosterGen1AssignmentRowDeleted != null)) {
                    this.tblRosterGen1AssignmentRowDeleted(this, new tblRosterGen1AssignmentRowChangeEvent(((tblRosterGen1AssignmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblRosterGen1AssignmentRowDeleting != null)) {
                    this.tblRosterGen1AssignmentRowDeleting(this, new tblRosterGen1AssignmentRowChangeEvent(((tblRosterGen1AssignmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetblRosterGen1AssignmentRow(tblRosterGen1AssignmentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LinksDataSet ds = new LinksDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblRosterGen1AssignmentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblVariableDataTable : global::System.Data.TypedTableBase<tblVariableRow> {
            
            private global::System.Data.DataColumn columnVariableCode;
            
            private global::System.Data.DataColumn columnItem;
            
            private global::System.Data.DataColumn columnGeneration;
            
            private global::System.Data.DataColumn columnExtractSource;
            
            private global::System.Data.DataColumn columnSurveySource;
            
            private global::System.Data.DataColumn columnSurveyYear;
            
            private global::System.Data.DataColumn columnLoopIndex;
            
            private global::System.Data.DataColumn columnTranslate;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnNotes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblVariableDataTable() {
                this.TableName = "tblVariable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblVariableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tblVariableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VariableCodeColumn {
                get {
                    return this.columnVariableCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemColumn {
                get {
                    return this.columnItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenerationColumn {
                get {
                    return this.columnGeneration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExtractSourceColumn {
                get {
                    return this.columnExtractSource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SurveySourceColumn {
                get {
                    return this.columnSurveySource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SurveyYearColumn {
                get {
                    return this.columnSurveyYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LoopIndexColumn {
                get {
                    return this.columnLoopIndex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TranslateColumn {
                get {
                    return this.columnTranslate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NotesColumn {
                get {
                    return this.columnNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblVariableRow this[int index] {
                get {
                    return ((tblVariableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblVariableRowChangeEventHandler tblVariableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblVariableRowChangeEventHandler tblVariableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblVariableRowChangeEventHandler tblVariableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblVariableRowChangeEventHandler tblVariableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtblVariableRow(tblVariableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblVariableRow AddtblVariableRow(string VariableCode, tblItemRow parenttblItemRowByFK_tblVariable_79_tblItem_79, byte Generation, byte ExtractSource, byte SurveySource, short SurveyYear, byte LoopIndex, bool Translate, bool Active, string Notes) {
                tblVariableRow rowtblVariableRow = ((tblVariableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VariableCode,
                        null,
                        Generation,
                        ExtractSource,
                        SurveySource,
                        SurveyYear,
                        LoopIndex,
                        Translate,
                        Active,
                        Notes};
                if ((parenttblItemRowByFK_tblVariable_79_tblItem_79 != null)) {
                    columnValuesArray[1] = parenttblItemRowByFK_tblVariable_79_tblItem_79[0];
                }
                rowtblVariableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblVariableRow);
                return rowtblVariableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblVariableRow FindByVariableCode(string VariableCode) {
                return ((tblVariableRow)(this.Rows.Find(new object[] {
                            VariableCode})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tblVariableDataTable cln = ((tblVariableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblVariableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnVariableCode = base.Columns["VariableCode"];
                this.columnItem = base.Columns["Item"];
                this.columnGeneration = base.Columns["Generation"];
                this.columnExtractSource = base.Columns["ExtractSource"];
                this.columnSurveySource = base.Columns["SurveySource"];
                this.columnSurveyYear = base.Columns["SurveyYear"];
                this.columnLoopIndex = base.Columns["LoopIndex"];
                this.columnTranslate = base.Columns["Translate"];
                this.columnActive = base.Columns["Active"];
                this.columnNotes = base.Columns["Notes"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnVariableCode = new global::System.Data.DataColumn("VariableCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVariableCode);
                this.columnItem = new global::System.Data.DataColumn("Item", typeof(short), null, global::System.Data.MappingType.Element);
                this.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Item");
                this.columnItem.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "ItemColumn");
                this.columnItem.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnItem");
                this.columnItem.ExtendedProperties.Add("Generator_UserColumnName", "Item");
                base.Columns.Add(this.columnItem);
                this.columnGeneration = new global::System.Data.DataColumn("Generation", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneration);
                this.columnExtractSource = new global::System.Data.DataColumn("ExtractSource", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtractSource);
                this.columnSurveySource = new global::System.Data.DataColumn("SurveySource", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurveySource);
                this.columnSurveyYear = new global::System.Data.DataColumn("SurveyYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurveyYear);
                this.columnLoopIndex = new global::System.Data.DataColumn("LoopIndex", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoopIndex);
                this.columnTranslate = new global::System.Data.DataColumn("Translate", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTranslate);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnNotes = new global::System.Data.DataColumn("Notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotes);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnVariableCode}, true));
                this.columnVariableCode.AllowDBNull = false;
                this.columnVariableCode.Unique = true;
                this.columnVariableCode.MaxLength = 8;
                this.columnItem.AllowDBNull = false;
                this.columnGeneration.AllowDBNull = false;
                this.columnExtractSource.AllowDBNull = false;
                this.columnSurveySource.AllowDBNull = false;
                this.columnSurveyYear.AllowDBNull = false;
                this.columnLoopIndex.AllowDBNull = false;
                this.columnTranslate.AllowDBNull = false;
                this.columnActive.AllowDBNull = false;
                this.columnNotes.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblVariableRow NewtblVariableRow() {
                return ((tblVariableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblVariableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tblVariableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblVariableRowChanged != null)) {
                    this.tblVariableRowChanged(this, new tblVariableRowChangeEvent(((tblVariableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblVariableRowChanging != null)) {
                    this.tblVariableRowChanging(this, new tblVariableRowChangeEvent(((tblVariableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblVariableRowDeleted != null)) {
                    this.tblVariableRowDeleted(this, new tblVariableRowChangeEvent(((tblVariableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblVariableRowDeleting != null)) {
                    this.tblVariableRowDeleting(this, new tblVariableRowChangeEvent(((tblVariableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetblVariableRow(tblVariableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LinksDataSet ds = new LinksDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblVariableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblItemDataTable : global::System.Data.TypedTableBase<tblItemRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnLabel;
            
            private global::System.Data.DataColumn columnMinValue;
            
            private global::System.Data.DataColumn columnMinNonnegative;
            
            private global::System.Data.DataColumn columnMaxValue;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnNotes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblItemDataTable() {
                this.TableName = "tblItem";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblItemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tblItemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LabelColumn {
                get {
                    return this.columnLabel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MinValueColumn {
                get {
                    return this.columnMinValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MinNonnegativeColumn {
                get {
                    return this.columnMinNonnegative;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxValueColumn {
                get {
                    return this.columnMaxValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NotesColumn {
                get {
                    return this.columnNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblItemRow this[int index] {
                get {
                    return ((tblItemRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblItemRowChangeEventHandler tblItemRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblItemRowChangeEventHandler tblItemRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblItemRowChangeEventHandler tblItemRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblItemRowChangeEventHandler tblItemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtblItemRow(tblItemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblItemRow AddtblItemRow(short ID, string Label, int MinValue, int MinNonnegative, int MaxValue, string Active, string Notes) {
                tblItemRow rowtblItemRow = ((tblItemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        Label,
                        MinValue,
                        MinNonnegative,
                        MaxValue,
                        Active,
                        Notes};
                rowtblItemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblItemRow);
                return rowtblItemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblItemRow FindByID(short ID) {
                return ((tblItemRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tblItemDataTable cln = ((tblItemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblItemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnLabel = base.Columns["Label"];
                this.columnMinValue = base.Columns["MinValue"];
                this.columnMinNonnegative = base.Columns["MinNonnegative"];
                this.columnMaxValue = base.Columns["MaxValue"];
                this.columnActive = base.Columns["Active"];
                this.columnNotes = base.Columns["Notes"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnLabel = new global::System.Data.DataColumn("Label", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabel);
                this.columnMinValue = new global::System.Data.DataColumn("MinValue", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinValue);
                this.columnMinNonnegative = new global::System.Data.DataColumn("MinNonnegative", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinNonnegative);
                this.columnMaxValue = new global::System.Data.DataColumn("MaxValue", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxValue);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnNotes = new global::System.Data.DataColumn("Notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotes);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnLabel.AllowDBNull = false;
                this.columnLabel.MaxLength = 50;
                this.columnMinValue.AllowDBNull = false;
                this.columnMaxValue.AllowDBNull = false;
                this.columnActive.AllowDBNull = false;
                this.columnActive.MaxLength = 5;
                this.columnNotes.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblItemRow NewtblItemRow() {
                return ((tblItemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblItemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tblItemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblItemRowChanged != null)) {
                    this.tblItemRowChanged(this, new tblItemRowChangeEvent(((tblItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblItemRowChanging != null)) {
                    this.tblItemRowChanging(this, new tblItemRowChangeEvent(((tblItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblItemRowDeleted != null)) {
                    this.tblItemRowDeleted(this, new tblItemRowChangeEvent(((tblItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblItemRowDeleting != null)) {
                    this.tblItemRowDeleting(this, new tblItemRowChangeEvent(((tblItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetblItemRow(tblItemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LinksDataSet ds = new LinksDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblItemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblRelatedValuesArchiveDataTable : global::System.Data.TypedTableBase<tblRelatedValuesArchiveRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnAlgorithmVersion;
            
            private global::System.Data.DataColumn columnSubjectTag_S1;
            
            private global::System.Data.DataColumn columnSubjectTag_S2;
            
            private global::System.Data.DataColumn columnMultipleBirthIfSameSex;
            
            private global::System.Data.DataColumn columnIsMz;
            
            private global::System.Data.DataColumn columnSameGeneration;
            
            private global::System.Data.DataColumn columnRosterAssignmentID;
            
            private global::System.Data.DataColumn columnRRoster;
            
            private global::System.Data.DataColumn columnLastSurvey_S1;
            
            private global::System.Data.DataColumn columnLastSurvey_S2;
            
            private global::System.Data.DataColumn columnRImplicitPass1;
            
            private global::System.Data.DataColumn columnRImplicit;
            
            private global::System.Data.DataColumn columnRImplicitSubject;
            
            private global::System.Data.DataColumn columnRImplicitMother;
            
            private global::System.Data.DataColumn columnRImplicit2004;
            
            private global::System.Data.DataColumn columnRExplicitOldestSibVersion;
            
            private global::System.Data.DataColumn columnRExplicitYoungestSibVersion;
            
            private global::System.Data.DataColumn columnRExplicitPass1;
            
            private global::System.Data.DataColumn columnRExplicit;
            
            private global::System.Data.DataColumn columnRPass1;
            
            private global::System.Data.DataColumn columnR;
            
            private global::System.Data.DataColumn columnRFull;
            
            private global::System.Data.DataColumn columnRPeek;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedValuesArchiveDataTable() {
                this.TableName = "tblRelatedValuesArchive";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblRelatedValuesArchiveDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tblRelatedValuesArchiveDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlgorithmVersionColumn {
                get {
                    return this.columnAlgorithmVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectTag_S1Column {
                get {
                    return this.columnSubjectTag_S1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectTag_S2Column {
                get {
                    return this.columnSubjectTag_S2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MultipleBirthIfSameSexColumn {
                get {
                    return this.columnMultipleBirthIfSameSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsMzColumn {
                get {
                    return this.columnIsMz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SameGenerationColumn {
                get {
                    return this.columnSameGeneration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RosterAssignmentIDColumn {
                get {
                    return this.columnRosterAssignmentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RRosterColumn {
                get {
                    return this.columnRRoster;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastSurvey_S1Column {
                get {
                    return this.columnLastSurvey_S1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastSurvey_S2Column {
                get {
                    return this.columnLastSurvey_S2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RImplicitPass1Column {
                get {
                    return this.columnRImplicitPass1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RImplicitColumn {
                get {
                    return this.columnRImplicit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RImplicitSubjectColumn {
                get {
                    return this.columnRImplicitSubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RImplicitMotherColumn {
                get {
                    return this.columnRImplicitMother;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RImplicit2004Column {
                get {
                    return this.columnRImplicit2004;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RExplicitOldestSibVersionColumn {
                get {
                    return this.columnRExplicitOldestSibVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RExplicitYoungestSibVersionColumn {
                get {
                    return this.columnRExplicitYoungestSibVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RExplicitPass1Column {
                get {
                    return this.columnRExplicitPass1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RExplicitColumn {
                get {
                    return this.columnRExplicit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RPass1Column {
                get {
                    return this.columnRPass1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RColumn {
                get {
                    return this.columnR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RFullColumn {
                get {
                    return this.columnRFull;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RPeekColumn {
                get {
                    return this.columnRPeek;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedValuesArchiveRow this[int index] {
                get {
                    return ((tblRelatedValuesArchiveRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblRelatedValuesArchiveRowChangeEventHandler tblRelatedValuesArchiveRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblRelatedValuesArchiveRowChangeEventHandler tblRelatedValuesArchiveRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblRelatedValuesArchiveRowChangeEventHandler tblRelatedValuesArchiveRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tblRelatedValuesArchiveRowChangeEventHandler tblRelatedValuesArchiveRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddtblRelatedValuesArchiveRow(tblRelatedValuesArchiveRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedValuesArchiveRow AddtblRelatedValuesArchiveRow(
                        short AlgorithmVersion, 
                        int SubjectTag_S1, 
                        int SubjectTag_S2, 
                        byte MultipleBirthIfSameSex, 
                        byte IsMz, 
                        byte SameGeneration, 
                        tblRosterGen1AssignmentRow parenttblRosterGen1AssignmentRowByFK_tblRelatedValuesArchive_tblLURosterGen1Assignment, 
                        double RRoster, 
                        short LastSurvey_S1, 
                        short LastSurvey_S2, 
                        double RImplicitPass1, 
                        double RImplicit, 
                        double RImplicitSubject, 
                        double RImplicitMother, 
                        double RImplicit2004, 
                        double RExplicitOldestSibVersion, 
                        double RExplicitYoungestSibVersion, 
                        double RExplicitPass1, 
                        double RExplicit, 
                        double RPass1, 
                        double R, 
                        double RFull, 
                        double RPeek) {
                tblRelatedValuesArchiveRow rowtblRelatedValuesArchiveRow = ((tblRelatedValuesArchiveRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        AlgorithmVersion,
                        SubjectTag_S1,
                        SubjectTag_S2,
                        MultipleBirthIfSameSex,
                        IsMz,
                        SameGeneration,
                        null,
                        RRoster,
                        LastSurvey_S1,
                        LastSurvey_S2,
                        RImplicitPass1,
                        RImplicit,
                        RImplicitSubject,
                        RImplicitMother,
                        RImplicit2004,
                        RExplicitOldestSibVersion,
                        RExplicitYoungestSibVersion,
                        RExplicitPass1,
                        RExplicit,
                        RPass1,
                        R,
                        RFull,
                        RPeek};
                if ((parenttblRosterGen1AssignmentRowByFK_tblRelatedValuesArchive_tblLURosterGen1Assignment != null)) {
                    columnValuesArray[7] = parenttblRosterGen1AssignmentRowByFK_tblRelatedValuesArchive_tblLURosterGen1Assignment[0];
                }
                rowtblRelatedValuesArchiveRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblRelatedValuesArchiveRow);
                return rowtblRelatedValuesArchiveRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedValuesArchiveRow FindByID(int ID) {
                return ((tblRelatedValuesArchiveRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tblRelatedValuesArchiveDataTable cln = ((tblRelatedValuesArchiveDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblRelatedValuesArchiveDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnAlgorithmVersion = base.Columns["AlgorithmVersion"];
                this.columnSubjectTag_S1 = base.Columns["SubjectTag_S1"];
                this.columnSubjectTag_S2 = base.Columns["SubjectTag_S2"];
                this.columnMultipleBirthIfSameSex = base.Columns["MultipleBirthIfSameSex"];
                this.columnIsMz = base.Columns["IsMz"];
                this.columnSameGeneration = base.Columns["SameGeneration"];
                this.columnRosterAssignmentID = base.Columns["RosterAssignmentID"];
                this.columnRRoster = base.Columns["RRoster"];
                this.columnLastSurvey_S1 = base.Columns["LastSurvey_S1"];
                this.columnLastSurvey_S2 = base.Columns["LastSurvey_S2"];
                this.columnRImplicitPass1 = base.Columns["RImplicitPass1"];
                this.columnRImplicit = base.Columns["RImplicit"];
                this.columnRImplicitSubject = base.Columns["RImplicitSubject"];
                this.columnRImplicitMother = base.Columns["RImplicitMother"];
                this.columnRImplicit2004 = base.Columns["RImplicit2004"];
                this.columnRExplicitOldestSibVersion = base.Columns["RExplicitOldestSibVersion"];
                this.columnRExplicitYoungestSibVersion = base.Columns["RExplicitYoungestSibVersion"];
                this.columnRExplicitPass1 = base.Columns["RExplicitPass1"];
                this.columnRExplicit = base.Columns["RExplicit"];
                this.columnRPass1 = base.Columns["RPass1"];
                this.columnR = base.Columns["R"];
                this.columnRFull = base.Columns["RFull"];
                this.columnRPeek = base.Columns["RPeek"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnAlgorithmVersion = new global::System.Data.DataColumn("AlgorithmVersion", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlgorithmVersion);
                this.columnSubjectTag_S1 = new global::System.Data.DataColumn("SubjectTag_S1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectTag_S1);
                this.columnSubjectTag_S2 = new global::System.Data.DataColumn("SubjectTag_S2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectTag_S2);
                this.columnMultipleBirthIfSameSex = new global::System.Data.DataColumn("MultipleBirthIfSameSex", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMultipleBirthIfSameSex);
                this.columnIsMz = new global::System.Data.DataColumn("IsMz", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsMz);
                this.columnSameGeneration = new global::System.Data.DataColumn("SameGeneration", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSameGeneration);
                this.columnRosterAssignmentID = new global::System.Data.DataColumn("RosterAssignmentID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRosterAssignmentID);
                this.columnRRoster = new global::System.Data.DataColumn("RRoster", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRRoster);
                this.columnLastSurvey_S1 = new global::System.Data.DataColumn("LastSurvey_S1", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastSurvey_S1);
                this.columnLastSurvey_S2 = new global::System.Data.DataColumn("LastSurvey_S2", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastSurvey_S2);
                this.columnRImplicitPass1 = new global::System.Data.DataColumn("RImplicitPass1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRImplicitPass1);
                this.columnRImplicit = new global::System.Data.DataColumn("RImplicit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRImplicit);
                this.columnRImplicitSubject = new global::System.Data.DataColumn("RImplicitSubject", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRImplicitSubject);
                this.columnRImplicitMother = new global::System.Data.DataColumn("RImplicitMother", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRImplicitMother);
                this.columnRImplicit2004 = new global::System.Data.DataColumn("RImplicit2004", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRImplicit2004);
                this.columnRExplicitOldestSibVersion = new global::System.Data.DataColumn("RExplicitOldestSibVersion", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRExplicitOldestSibVersion);
                this.columnRExplicitYoungestSibVersion = new global::System.Data.DataColumn("RExplicitYoungestSibVersion", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRExplicitYoungestSibVersion);
                this.columnRExplicitPass1 = new global::System.Data.DataColumn("RExplicitPass1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRExplicitPass1);
                this.columnRExplicit = new global::System.Data.DataColumn("RExplicit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRExplicit);
                this.columnRPass1 = new global::System.Data.DataColumn("RPass1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPass1);
                this.columnR = new global::System.Data.DataColumn("R", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnR);
                this.columnRFull = new global::System.Data.DataColumn("RFull", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRFull);
                this.columnRPeek = new global::System.Data.DataColumn("RPeek", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPeek);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnAlgorithmVersion.AllowDBNull = false;
                this.columnSubjectTag_S1.AllowDBNull = false;
                this.columnSubjectTag_S2.AllowDBNull = false;
                this.columnMultipleBirthIfSameSex.AllowDBNull = false;
                this.columnIsMz.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedValuesArchiveRow NewtblRelatedValuesArchiveRow() {
                return ((tblRelatedValuesArchiveRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblRelatedValuesArchiveRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tblRelatedValuesArchiveRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblRelatedValuesArchiveRowChanged != null)) {
                    this.tblRelatedValuesArchiveRowChanged(this, new tblRelatedValuesArchiveRowChangeEvent(((tblRelatedValuesArchiveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblRelatedValuesArchiveRowChanging != null)) {
                    this.tblRelatedValuesArchiveRowChanging(this, new tblRelatedValuesArchiveRowChangeEvent(((tblRelatedValuesArchiveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblRelatedValuesArchiveRowDeleted != null)) {
                    this.tblRelatedValuesArchiveRowDeleted(this, new tblRelatedValuesArchiveRowChangeEvent(((tblRelatedValuesArchiveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblRelatedValuesArchiveRowDeleting != null)) {
                    this.tblRelatedValuesArchiveRowDeleting(this, new tblRelatedValuesArchiveRowChangeEvent(((tblRelatedValuesArchiveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovetblRelatedValuesArchiveRow(tblRelatedValuesArchiveRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LinksDataSet ds = new LinksDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblRelatedValuesArchiveDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tblSurveyTimeRow : global::System.Data.DataRow {
            
            private tblSurveyTimeDataTable tabletblSurveyTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblSurveyTimeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblSurveyTime = ((tblSurveyTimeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tabletblSurveyTime.IDColumn]));
                }
                set {
                    this[this.tabletblSurveyTime.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SubjectTag {
                get {
                    return ((int)(this[this.tabletblSurveyTime.SubjectTagColumn]));
                }
                set {
                    this[this.tabletblSurveyTime.SubjectTagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte SurveySource {
                get {
                    return ((byte)(this[this.tabletblSurveyTime.SurveySourceColumn]));
                }
                set {
                    this[this.tabletblSurveyTime.SurveySourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short SurveyYear {
                get {
                    return ((short)(this[this.tabletblSurveyTime.SurveyYearColumn]));
                }
                set {
                    this[this.tabletblSurveyTime.SurveyYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SurveyDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblSurveyTime.SurveyDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SurveyDate\' in table \'tblSurveyTime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSurveyTime.SurveyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AgeSelfReportYears {
                get {
                    try {
                        return ((double)(this[this.tabletblSurveyTime.AgeSelfReportYearsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeSelfReportYears\' in table \'tblSurveyTime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSurveyTime.AgeSelfReportYearsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AgeCalculateYears {
                get {
                    try {
                        return ((double)(this[this.tabletblSurveyTime.AgeCalculateYearsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeCalculateYears\' in table \'tblSurveyTime\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSurveyTime.AgeCalculateYearsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectRow tblSubjectRow {
                get {
                    return ((tblSubjectRow)(this.GetParentRow(this.Table.ParentRelations["FK_tblSurveyTime_tblSubject"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_tblSurveyTime_tblSubject"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSurveyDateNull() {
                return this.IsNull(this.tabletblSurveyTime.SurveyDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSurveyDateNull() {
                this[this.tabletblSurveyTime.SurveyDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeSelfReportYearsNull() {
                return this.IsNull(this.tabletblSurveyTime.AgeSelfReportYearsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeSelfReportYearsNull() {
                this[this.tabletblSurveyTime.AgeSelfReportYearsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeCalculateYearsNull() {
                return this.IsNull(this.tabletblSurveyTime.AgeCalculateYearsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeCalculateYearsNull() {
                this[this.tabletblSurveyTime.AgeCalculateYearsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tblBabyDaddyRow : global::System.Data.DataRow {
            
            private tblBabyDaddyDataTable tabletblBabyDaddy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblBabyDaddyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblBabyDaddy = ((tblBabyDaddyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ID {
                get {
                    return ((long)(this[this.tabletblBabyDaddy.IDColumn]));
                }
                set {
                    this[this.tabletblBabyDaddy.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SubjectTag {
                get {
                    return ((int)(this[this.tabletblBabyDaddy.SubjectTagColumn]));
                }
                set {
                    this[this.tabletblBabyDaddy.SubjectTagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ChildLoopIndex {
                get {
                    return ((byte)(this[this.tabletblBabyDaddy.ChildLoopIndexColumn]));
                }
                set {
                    this[this.tabletblBabyDaddy.ChildLoopIndexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short SurveyYear {
                get {
                    return ((short)(this[this.tabletblBabyDaddy.SurveyYearColumn]));
                }
                set {
                    this[this.tabletblBabyDaddy.SurveyYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BiodadInHH {
                get {
                    return ((short)(this[this.tabletblBabyDaddy.BiodadInHHColumn]));
                }
                set {
                    this[this.tabletblBabyDaddy.BiodadInHHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BiodadAlive {
                get {
                    return ((short)(this[this.tabletblBabyDaddy.BiodadAliveColumn]));
                }
                set {
                    this[this.tabletblBabyDaddy.BiodadAliveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BiodadEverLiveInHH {
                get {
                    return ((short)(this[this.tabletblBabyDaddy.BiodadEverLiveInHHColumn]));
                }
                set {
                    this[this.tabletblBabyDaddy.BiodadEverLiveInHHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime BiodadLeftHHDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblBabyDaddy.BiodadLeftHHDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BiodadLeftHHDate\' in table \'tblBabyDaddy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBabyDaddy.BiodadLeftHHDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime BiodadDeathDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblBabyDaddy.BiodadDeathDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BiodadDeathDate\' in table \'tblBabyDaddy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBabyDaddy.BiodadDeathDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BiodadDistanceFromHH {
                get {
                    try {
                        return ((short)(this[this.tabletblBabyDaddy.BiodadDistanceFromHHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BiodadDistanceFromHH\' in table \'tblBabyDaddy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblBabyDaddy.BiodadDistanceFromHHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BiodadAsthma {
                get {
                    return ((short)(this[this.tabletblBabyDaddy.BiodadAsthmaColumn]));
                }
                set {
                    this[this.tabletblBabyDaddy.BiodadAsthmaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectRow tblSubjectRow {
                get {
                    return ((tblSubjectRow)(this.GetParentRow(this.Table.ParentRelations["FK_tblBabyDaddy_tblSubject"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_tblBabyDaddy_tblSubject"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBiodadLeftHHDateNull() {
                return this.IsNull(this.tabletblBabyDaddy.BiodadLeftHHDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBiodadLeftHHDateNull() {
                this[this.tabletblBabyDaddy.BiodadLeftHHDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBiodadDeathDateNull() {
                return this.IsNull(this.tabletblBabyDaddy.BiodadDeathDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBiodadDeathDateNull() {
                this[this.tabletblBabyDaddy.BiodadDeathDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBiodadDistanceFromHHNull() {
                return this.IsNull(this.tabletblBabyDaddy.BiodadDistanceFromHHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBiodadDistanceFromHHNull() {
                this[this.tabletblBabyDaddy.BiodadDistanceFromHHColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class vewSurveyTimeMostRecentRow : global::System.Data.DataRow {
            
            private vewSurveyTimeMostRecentDataTable tablevewSurveyTimeMostRecent;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal vewSurveyTimeMostRecentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevewSurveyTimeMostRecent = ((vewSurveyTimeMostRecentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SubjectTag {
                get {
                    return ((int)(this[this.tablevewSurveyTimeMostRecent.SubjectTagColumn]));
                }
                set {
                    this[this.tablevewSurveyTimeMostRecent.SubjectTagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short SurveyYearMostRecent {
                get {
                    try {
                        return ((short)(this[this.tablevewSurveyTimeMostRecent.SurveyYearMostRecentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SurveyYearMostRecent\' in table \'vewSurveyTimeMostRecent\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablevewSurveyTimeMostRecent.SurveyYearMostRecentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSurveyYearMostRecentNull() {
                return this.IsNull(this.tablevewSurveyTimeMostRecent.SurveyYearMostRecentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSurveyYearMostRecentNull() {
                this[this.tablevewSurveyTimeMostRecent.SurveyYearMostRecentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tblFatherOfGen2Row : global::System.Data.DataRow {
            
            private tblFatherOfGen2DataTable tabletblFatherOfGen2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblFatherOfGen2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblFatherOfGen2 = ((tblFatherOfGen2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ID {
                get {
                    return ((long)(this[this.tabletblFatherOfGen2.IDColumn]));
                }
                set {
                    this[this.tabletblFatherOfGen2.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SubjectTag {
                get {
                    return ((int)(this[this.tabletblFatherOfGen2.SubjectTagColumn]));
                }
                set {
                    this[this.tabletblFatherOfGen2.SubjectTagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short SurveyYear {
                get {
                    return ((short)(this[this.tabletblFatherOfGen2.SurveyYearColumn]));
                }
                set {
                    this[this.tabletblFatherOfGen2.SurveyYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BiodadInHH {
                get {
                    return ((short)(this[this.tabletblFatherOfGen2.BiodadInHHColumn]));
                }
                set {
                    this[this.tabletblFatherOfGen2.BiodadInHHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BiodadAlive {
                get {
                    return ((short)(this[this.tabletblFatherOfGen2.BiodadAliveColumn]));
                }
                set {
                    this[this.tabletblFatherOfGen2.BiodadAliveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BiodadDistanceFromHH {
                get {
                    try {
                        return ((short)(this[this.tabletblFatherOfGen2.BiodadDistanceFromHHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BiodadDistanceFromHH\' in table \'tblFatherOfGen2\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabletblFatherOfGen2.BiodadDistanceFromHHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BiodadAsthma {
                get {
                    return ((short)(this[this.tabletblFatherOfGen2.BiodadAsthmaColumn]));
                }
                set {
                    this[this.tabletblFatherOfGen2.BiodadAsthmaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectRow tblSubjectRow {
                get {
                    return ((tblSubjectRow)(this.GetParentRow(this.Table.ParentRelations["FK_tblFatherOfGen2_tblSubject"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_tblFatherOfGen2_tblSubject"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBiodadDistanceFromHHNull() {
                return this.IsNull(this.tabletblFatherOfGen2.BiodadDistanceFromHHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBiodadDistanceFromHHNull() {
                this[this.tabletblFatherOfGen2.BiodadDistanceFromHHColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tblRosterGen1Row : global::System.Data.DataRow {
            
            private tblRosterGen1DataTable tabletblRosterGen1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblRosterGen1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblRosterGen1 = ((tblRosterGen1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RelatedID {
                get {
                    return ((int)(this[this.tabletblRosterGen1.RelatedIDColumn]));
                }
                set {
                    this[this.tabletblRosterGen1.RelatedIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte RosterAssignmentID {
                get {
                    return ((byte)(this[this.tabletblRosterGen1.RosterAssignmentIDColumn]));
                }
                set {
                    this[this.tabletblRosterGen1.RosterAssignmentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ResponseLower {
                get {
                    return ((short)(this[this.tabletblRosterGen1.ResponseLowerColumn]));
                }
                set {
                    this[this.tabletblRosterGen1.ResponseLowerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ResponseUpper {
                get {
                    return ((short)(this[this.tabletblRosterGen1.ResponseUpperColumn]));
                }
                set {
                    this[this.tabletblRosterGen1.ResponseUpperColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Resolved {
                get {
                    return ((bool)(this[this.tabletblRosterGen1.ResolvedColumn]));
                }
                set {
                    this[this.tabletblRosterGen1.ResolvedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double R {
                get {
                    try {
                        return ((double)(this[this.tabletblRosterGen1.RColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'R\' in table \'tblRosterGen1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRosterGen1.RColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RBoundLower {
                get {
                    return ((double)(this[this.tabletblRosterGen1.RBoundLowerColumn]));
                }
                set {
                    this[this.tabletblRosterGen1.RBoundLowerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RBoundUpper {
                get {
                    return ((double)(this[this.tabletblRosterGen1.RBoundUpperColumn]));
                }
                set {
                    this[this.tabletblRosterGen1.RBoundUpperColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte SameGeneration {
                get {
                    return ((byte)(this[this.tabletblRosterGen1.SameGenerationColumn]));
                }
                set {
                    this[this.tabletblRosterGen1.SameGenerationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ShareBiodad {
                get {
                    return ((byte)(this[this.tabletblRosterGen1.ShareBiodadColumn]));
                }
                set {
                    this[this.tabletblRosterGen1.ShareBiodadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ShareBiomom {
                get {
                    return ((byte)(this[this.tabletblRosterGen1.ShareBiomomColumn]));
                }
                set {
                    this[this.tabletblRosterGen1.ShareBiomomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ShareBiograndparent {
                get {
                    return ((byte)(this[this.tabletblRosterGen1.ShareBiograndparentColumn]));
                }
                set {
                    this[this.tabletblRosterGen1.ShareBiograndparentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Inconsistent {
                get {
                    return ((bool)(this[this.tabletblRosterGen1.InconsistentColumn]));
                }
                set {
                    this[this.tabletblRosterGen1.InconsistentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedStructureRow tblRelatedStructureRow {
                get {
                    return ((tblRelatedStructureRow)(this.GetParentRow(this.Table.ParentRelations["FK_tblRosterGen1_tblRelatedStructure"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_tblRosterGen1_tblRelatedStructure"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRNull() {
                return this.IsNull(this.tabletblRosterGen1.RColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRNull() {
                this[this.tabletblRosterGen1.RColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tblResponseRow : global::System.Data.DataRow {
            
            private tblResponseDataTable tabletblResponse;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblResponseRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblResponse = ((tblResponseDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tabletblResponse.IDColumn]));
                }
                set {
                    this[this.tabletblResponse.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SubjectTag {
                get {
                    return ((int)(this[this.tabletblResponse.SubjectTagColumn]));
                }
                set {
                    this[this.tabletblResponse.SubjectTagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ExtendedID {
                get {
                    return ((short)(this[this.tabletblResponse.ExtendedIDColumn]));
                }
                set {
                    this[this.tabletblResponse.ExtendedIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Generation {
                get {
                    return ((byte)(this[this.tabletblResponse.GenerationColumn]));
                }
                set {
                    this[this.tabletblResponse.GenerationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte SurveySource {
                get {
                    return ((byte)(this[this.tabletblResponse.SurveySourceColumn]));
                }
                set {
                    this[this.tabletblResponse.SurveySourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short SurveyYear {
                get {
                    return ((short)(this[this.tabletblResponse.SurveyYearColumn]));
                }
                set {
                    this[this.tabletblResponse.SurveyYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short Item {
                get {
                    return ((short)(this[this.tabletblResponse.ItemColumn]));
                }
                set {
                    this[this.tabletblResponse.ItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Value {
                get {
                    return ((int)(this[this.tabletblResponse.ValueColumn]));
                }
                set {
                    this[this.tabletblResponse.ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte LoopIndex {
                get {
                    return ((byte)(this[this.tabletblResponse.LoopIndexColumn]));
                }
                set {
                    this[this.tabletblResponse.LoopIndexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectRow tblSubjectRow {
                get {
                    return ((tblSubjectRow)(this.GetParentRow(this.Table.ParentRelations["FK_tblResponse_tblSubject"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_tblResponse_tblSubject"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblItemRow tblItemRow {
                get {
                    return ((tblItemRow)(this.GetParentRow(this.Table.ParentRelations["FK_tblResponse_tblItem_79"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_tblResponse_tblItem_79"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tblMarkerGen1Row : global::System.Data.DataRow {
            
            private tblMarkerGen1DataTable tabletblMarkerGen1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblMarkerGen1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblMarkerGen1 = ((tblMarkerGen1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ID {
                get {
                    return ((long)(this[this.tabletblMarkerGen1.IDColumn]));
                }
                set {
                    this[this.tabletblMarkerGen1.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ExtendedID {
                get {
                    return ((short)(this[this.tabletblMarkerGen1.ExtendedIDColumn]));
                }
                set {
                    this[this.tabletblMarkerGen1.ExtendedIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RelatedID {
                get {
                    return ((int)(this[this.tabletblMarkerGen1.RelatedIDColumn]));
                }
                set {
                    this[this.tabletblMarkerGen1.RelatedIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte MarkerType {
                get {
                    return ((byte)(this[this.tabletblMarkerGen1.MarkerTypeColumn]));
                }
                set {
                    this[this.tabletblMarkerGen1.MarkerTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short SurveyYear {
                get {
                    return ((short)(this[this.tabletblMarkerGen1.SurveyYearColumn]));
                }
                set {
                    this[this.tabletblMarkerGen1.SurveyYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte MzEvidence {
                get {
                    return ((byte)(this[this.tabletblMarkerGen1.MzEvidenceColumn]));
                }
                set {
                    this[this.tabletblMarkerGen1.MzEvidenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte SameGeneration {
                get {
                    return ((byte)(this[this.tabletblMarkerGen1.SameGenerationColumn]));
                }
                set {
                    this[this.tabletblMarkerGen1.SameGenerationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ShareBiomomEvidence {
                get {
                    return ((byte)(this[this.tabletblMarkerGen1.ShareBiomomEvidenceColumn]));
                }
                set {
                    this[this.tabletblMarkerGen1.ShareBiomomEvidenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ShareBiodadEvidence {
                get {
                    return ((byte)(this[this.tabletblMarkerGen1.ShareBiodadEvidenceColumn]));
                }
                set {
                    this[this.tabletblMarkerGen1.ShareBiodadEvidenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ShareBioGrandparentEvidence {
                get {
                    return ((byte)(this[this.tabletblMarkerGen1.ShareBioGrandparentEvidenceColumn]));
                }
                set {
                    this[this.tabletblMarkerGen1.ShareBioGrandparentEvidenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedStructureRow tblRelatedStructureRow {
                get {
                    return ((tblRelatedStructureRow)(this.GetParentRow(this.Table.ParentRelations["FK_tblMarkerGen1_tblRelatedStructure"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_tblMarkerGen1_tblRelatedStructure"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tblMarkerGen2Row : global::System.Data.DataRow {
            
            private tblMarkerGen2DataTable tabletblMarkerGen2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblMarkerGen2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblMarkerGen2 = ((tblMarkerGen2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ID {
                get {
                    return ((long)(this[this.tabletblMarkerGen2.IDColumn]));
                }
                set {
                    this[this.tabletblMarkerGen2.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ExtendedID {
                get {
                    return ((short)(this[this.tabletblMarkerGen2.ExtendedIDColumn]));
                }
                set {
                    this[this.tabletblMarkerGen2.ExtendedIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RelatedID {
                get {
                    return ((int)(this[this.tabletblMarkerGen2.RelatedIDColumn]));
                }
                set {
                    this[this.tabletblMarkerGen2.RelatedIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte MarkerType {
                get {
                    return ((byte)(this[this.tabletblMarkerGen2.MarkerTypeColumn]));
                }
                set {
                    this[this.tabletblMarkerGen2.MarkerTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short SurveyYear {
                get {
                    try {
                        return ((short)(this[this.tabletblMarkerGen2.SurveyYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SurveyYear\' in table \'tblMarkerGen2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMarkerGen2.SurveyYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte MzEvidence {
                get {
                    return ((byte)(this[this.tabletblMarkerGen2.MzEvidenceColumn]));
                }
                set {
                    this[this.tabletblMarkerGen2.MzEvidenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ShareBiodadEvidence {
                get {
                    return ((byte)(this[this.tabletblMarkerGen2.ShareBiodadEvidenceColumn]));
                }
                set {
                    this[this.tabletblMarkerGen2.ShareBiodadEvidenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FromMother {
                get {
                    return ((bool)(this[this.tabletblMarkerGen2.FromMotherColumn]));
                }
                set {
                    this[this.tabletblMarkerGen2.FromMotherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedStructureRow tblRelatedStructureRow {
                get {
                    return ((tblRelatedStructureRow)(this.GetParentRow(this.Table.ParentRelations["FK_tblMarkerGen2_tblRelatedStructure"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_tblMarkerGen2_tblRelatedStructure"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSurveyYearNull() {
                return this.IsNull(this.tabletblMarkerGen2.SurveyYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSurveyYearNull() {
                this[this.tabletblMarkerGen2.SurveyYearColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tblParentsOfGen1RetroRow : global::System.Data.DataRow {
            
            private tblParentsOfGen1RetroDataTable tabletblParentsOfGen1Retro;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblParentsOfGen1RetroRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblParentsOfGen1Retro = ((tblParentsOfGen1RetroDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ID {
                get {
                    return ((long)(this[this.tabletblParentsOfGen1Retro.IDColumn]));
                }
                set {
                    this[this.tabletblParentsOfGen1Retro.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SubjectTag {
                get {
                    return ((int)(this[this.tabletblParentsOfGen1Retro.SubjectTagColumn]));
                }
                set {
                    this[this.tabletblParentsOfGen1Retro.SubjectTagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ExtendedID {
                get {
                    return ((short)(this[this.tabletblParentsOfGen1Retro.ExtendedIDColumn]));
                }
                set {
                    this[this.tabletblParentsOfGen1Retro.ExtendedIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short Bioparent {
                get {
                    return ((short)(this[this.tabletblParentsOfGen1Retro.BioparentColumn]));
                }
                set {
                    this[this.tabletblParentsOfGen1Retro.BioparentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool InHH {
                get {
                    try {
                        return ((bool)(this[this.tabletblParentsOfGen1Retro.InHHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InHH\' in table \'tblParentsOfGen1Retro\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblParentsOfGen1Retro.InHHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Age {
                get {
                    return ((byte)(this[this.tabletblParentsOfGen1Retro.AgeColumn]));
                }
                set {
                    this[this.tabletblParentsOfGen1Retro.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short Year {
                get {
                    return ((short)(this[this.tabletblParentsOfGen1Retro.YearColumn]));
                }
                set {
                    this[this.tabletblParentsOfGen1Retro.YearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectRow tblSubjectRow {
                get {
                    return ((tblSubjectRow)(this.GetParentRow(this.Table.ParentRelations["FK_tblParentsOfGen1Retro_tblSubject"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_tblParentsOfGen1Retro_tblSubject"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInHHNull() {
                return this.IsNull(this.tabletblParentsOfGen1Retro.InHHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInHHNull() {
                this[this.tabletblParentsOfGen1Retro.InHHColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tblParentsOfGen1CurrentRow : global::System.Data.DataRow {
            
            private tblParentsOfGen1CurrentDataTable tabletblParentsOfGen1Current;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblParentsOfGen1CurrentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblParentsOfGen1Current = ((tblParentsOfGen1CurrentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SubjectTag {
                get {
                    return ((int)(this[this.tabletblParentsOfGen1Current.SubjectTagColumn]));
                }
                set {
                    this[this.tabletblParentsOfGen1Current.SubjectTagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BiodadBirthYearReported {
                get {
                    try {
                        return ((short)(this[this.tabletblParentsOfGen1Current.BiodadBirthYearReportedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BiodadBirthYearReported\' in table \'tblParentsOfGen1Current\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblParentsOfGen1Current.BiodadBirthYearReportedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BiodadBirthYearEstimated {
                get {
                    try {
                        return ((short)(this[this.tabletblParentsOfGen1Current.BiodadBirthYearEstimatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BiodadBirthYearEstimated\' in table \'tblParentsOfGen1Current" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblParentsOfGen1Current.BiodadBirthYearEstimatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BiodadYearLastAsked {
                get {
                    try {
                        return ((short)(this[this.tabletblParentsOfGen1Current.BiodadYearLastAskedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BiodadYearLastAsked\' in table \'tblParentsOfGen1Current\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblParentsOfGen1Current.BiodadYearLastAskedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BiodadAlive {
                get {
                    return ((short)(this[this.tabletblParentsOfGen1Current.BiodadAliveColumn]));
                }
                set {
                    this[this.tabletblParentsOfGen1Current.BiodadAliveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BiodadDeathCause {
                get {
                    return ((short)(this[this.tabletblParentsOfGen1Current.BiodadDeathCauseColumn]));
                }
                set {
                    this[this.tabletblParentsOfGen1Current.BiodadDeathCauseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte BiodadDeathAge {
                get {
                    try {
                        return ((byte)(this[this.tabletblParentsOfGen1Current.BiodadDeathAgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BiodadDeathAge\' in table \'tblParentsOfGen1Current\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabletblParentsOfGen1Current.BiodadDeathAgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BiodadUSBorn {
                get {
                    return ((short)(this[this.tabletblParentsOfGen1Current.BiodadUSBornColumn]));
                }
                set {
                    this[this.tabletblParentsOfGen1Current.BiodadUSBornColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte BiodadHighestGrade {
                get {
                    try {
                        return ((byte)(this[this.tabletblParentsOfGen1Current.BiodadHighestGradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BiodadHighestGrade\' in table \'tblParentsOfGen1Current\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tabletblParentsOfGen1Current.BiodadHighestGradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BiograndfatherUSBorn {
                get {
                    return ((short)(this[this.tabletblParentsOfGen1Current.BiograndfatherUSBornColumn]));
                }
                set {
                    this[this.tabletblParentsOfGen1Current.BiograndfatherUSBornColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BiomomBirthYearReported {
                get {
                    try {
                        return ((short)(this[this.tabletblParentsOfGen1Current.BiomomBirthYearReportedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BiomomBirthYearReported\' in table \'tblParentsOfGen1Current\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblParentsOfGen1Current.BiomomBirthYearReportedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BiomomBirthYearEstimated {
                get {
                    try {
                        return ((short)(this[this.tabletblParentsOfGen1Current.BiomomBirthYearEstimatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BiomomBirthYearEstimated\' in table \'tblParentsOfGen1Current" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblParentsOfGen1Current.BiomomBirthYearEstimatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BiomomYearLastAsked {
                get {
                    try {
                        return ((short)(this[this.tabletblParentsOfGen1Current.BiomomYearLastAskedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BiomomYearLastAsked\' in table \'tblParentsOfGen1Current\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblParentsOfGen1Current.BiomomYearLastAskedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BiomomAlive {
                get {
                    return ((short)(this[this.tabletblParentsOfGen1Current.BiomomAliveColumn]));
                }
                set {
                    this[this.tabletblParentsOfGen1Current.BiomomAliveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BiomomDeathCause {
                get {
                    return ((short)(this[this.tabletblParentsOfGen1Current.BiomomDeathCauseColumn]));
                }
                set {
                    this[this.tabletblParentsOfGen1Current.BiomomDeathCauseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte BiomomDeathAge {
                get {
                    try {
                        return ((byte)(this[this.tabletblParentsOfGen1Current.BiomomDeathAgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BiomomDeathAge\' in table \'tblParentsOfGen1Current\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabletblParentsOfGen1Current.BiomomDeathAgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BiomomUSBorn {
                get {
                    return ((short)(this[this.tabletblParentsOfGen1Current.BiomomUSBornColumn]));
                }
                set {
                    this[this.tabletblParentsOfGen1Current.BiomomUSBornColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte BiomomHighestGrade {
                get {
                    try {
                        return ((byte)(this[this.tabletblParentsOfGen1Current.BiomomHighestGradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BiomomHighestGrade\' in table \'tblParentsOfGen1Current\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tabletblParentsOfGen1Current.BiomomHighestGradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short AlwaysLivedWithBothBioparents {
                get {
                    return ((short)(this[this.tabletblParentsOfGen1Current.AlwaysLivedWithBothBioparentsColumn]));
                }
                set {
                    this[this.tabletblParentsOfGen1Current.AlwaysLivedWithBothBioparentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectRow tblSubjectRow {
                get {
                    return ((tblSubjectRow)(this.GetParentRow(this.Table.ParentRelations["FK_tblParentsOfGen1Current_tblSubject"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_tblParentsOfGen1Current_tblSubject"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBiodadBirthYearReportedNull() {
                return this.IsNull(this.tabletblParentsOfGen1Current.BiodadBirthYearReportedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBiodadBirthYearReportedNull() {
                this[this.tabletblParentsOfGen1Current.BiodadBirthYearReportedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBiodadBirthYearEstimatedNull() {
                return this.IsNull(this.tabletblParentsOfGen1Current.BiodadBirthYearEstimatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBiodadBirthYearEstimatedNull() {
                this[this.tabletblParentsOfGen1Current.BiodadBirthYearEstimatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBiodadYearLastAskedNull() {
                return this.IsNull(this.tabletblParentsOfGen1Current.BiodadYearLastAskedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBiodadYearLastAskedNull() {
                this[this.tabletblParentsOfGen1Current.BiodadYearLastAskedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBiodadDeathAgeNull() {
                return this.IsNull(this.tabletblParentsOfGen1Current.BiodadDeathAgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBiodadDeathAgeNull() {
                this[this.tabletblParentsOfGen1Current.BiodadDeathAgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBiodadHighestGradeNull() {
                return this.IsNull(this.tabletblParentsOfGen1Current.BiodadHighestGradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBiodadHighestGradeNull() {
                this[this.tabletblParentsOfGen1Current.BiodadHighestGradeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBiomomBirthYearReportedNull() {
                return this.IsNull(this.tabletblParentsOfGen1Current.BiomomBirthYearReportedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBiomomBirthYearReportedNull() {
                this[this.tabletblParentsOfGen1Current.BiomomBirthYearReportedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBiomomBirthYearEstimatedNull() {
                return this.IsNull(this.tabletblParentsOfGen1Current.BiomomBirthYearEstimatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBiomomBirthYearEstimatedNull() {
                this[this.tabletblParentsOfGen1Current.BiomomBirthYearEstimatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBiomomYearLastAskedNull() {
                return this.IsNull(this.tabletblParentsOfGen1Current.BiomomYearLastAskedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBiomomYearLastAskedNull() {
                this[this.tabletblParentsOfGen1Current.BiomomYearLastAskedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBiomomDeathAgeNull() {
                return this.IsNull(this.tabletblParentsOfGen1Current.BiomomDeathAgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBiomomDeathAgeNull() {
                this[this.tabletblParentsOfGen1Current.BiomomDeathAgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBiomomHighestGradeNull() {
                return this.IsNull(this.tabletblParentsOfGen1Current.BiomomHighestGradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBiomomHighestGradeNull() {
                this[this.tabletblParentsOfGen1Current.BiomomHighestGradeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tblOutcomeRow : global::System.Data.DataRow {
            
            private tblOutcomeDataTable tabletblOutcome;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblOutcomeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblOutcome = ((tblOutcomeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tabletblOutcome.IDColumn]));
                }
                set {
                    this[this.tabletblOutcome.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SubjectTag {
                get {
                    return ((int)(this[this.tabletblOutcome.SubjectTagColumn]));
                }
                set {
                    this[this.tabletblOutcome.SubjectTagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short Item {
                get {
                    return ((short)(this[this.tabletblOutcome.ItemColumn]));
                }
                set {
                    this[this.tabletblOutcome.ItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short SurveyYear {
                get {
                    return ((short)(this[this.tabletblOutcome.SurveyYearColumn]));
                }
                set {
                    this[this.tabletblOutcome.SurveyYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Value {
                get {
                    return ((int)(this[this.tabletblOutcome.ValueColumn]));
                }
                set {
                    this[this.tabletblOutcome.ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectRow tblSubjectRow {
                get {
                    return ((tblSubjectRow)(this.GetParentRow(this.Table.ParentRelations["FK_tblOutcome_tblSubject"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_tblOutcome_tblSubject"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tblSubjectRow : global::System.Data.DataRow {
            
            private tblSubjectDataTable tabletblSubject;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblSubjectRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblSubject = ((tblSubjectDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SubjectTag {
                get {
                    return ((int)(this[this.tabletblSubject.SubjectTagColumn]));
                }
                set {
                    this[this.tabletblSubject.SubjectTagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ExtendedID {
                get {
                    return ((short)(this[this.tabletblSubject.ExtendedIDColumn]));
                }
                set {
                    this[this.tabletblSubject.ExtendedIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SubjectID {
                get {
                    return ((int)(this[this.tabletblSubject.SubjectIDColumn]));
                }
                set {
                    this[this.tabletblSubject.SubjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Generation {
                get {
                    return ((byte)(this[this.tabletblSubject.GenerationColumn]));
                }
                set {
                    this[this.tabletblSubject.GenerationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Gender {
                get {
                    return ((byte)(this[this.tabletblSubject.GenderColumn]));
                }
                set {
                    this[this.tabletblSubject.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSurveyTimeRow[] GettblSurveyTimeRows() {
                if ((this.Table.ChildRelations["FK_tblSurveyTime_tblSubject"] == null)) {
                    return new tblSurveyTimeRow[0];
                }
                else {
                    return ((tblSurveyTimeRow[])(base.GetChildRows(this.Table.ChildRelations["FK_tblSurveyTime_tblSubject"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblBabyDaddyRow[] GettblBabyDaddyRows() {
                if ((this.Table.ChildRelations["FK_tblBabyDaddy_tblSubject"] == null)) {
                    return new tblBabyDaddyRow[0];
                }
                else {
                    return ((tblBabyDaddyRow[])(base.GetChildRows(this.Table.ChildRelations["FK_tblBabyDaddy_tblSubject"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblFatherOfGen2Row[] GettblFatherOfGen2Rows() {
                if ((this.Table.ChildRelations["FK_tblFatherOfGen2_tblSubject"] == null)) {
                    return new tblFatherOfGen2Row[0];
                }
                else {
                    return ((tblFatherOfGen2Row[])(base.GetChildRows(this.Table.ChildRelations["FK_tblFatherOfGen2_tblSubject"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblResponseRow[] GettblResponseRows() {
                if ((this.Table.ChildRelations["FK_tblResponse_tblSubject"] == null)) {
                    return new tblResponseRow[0];
                }
                else {
                    return ((tblResponseRow[])(base.GetChildRows(this.Table.ChildRelations["FK_tblResponse_tblSubject"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblParentsOfGen1RetroRow[] GettblParentsOfGen1RetroRows() {
                if ((this.Table.ChildRelations["FK_tblParentsOfGen1Retro_tblSubject"] == null)) {
                    return new tblParentsOfGen1RetroRow[0];
                }
                else {
                    return ((tblParentsOfGen1RetroRow[])(base.GetChildRows(this.Table.ChildRelations["FK_tblParentsOfGen1Retro_tblSubject"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblParentsOfGen1CurrentRow[] GettblParentsOfGen1CurrentRows() {
                if ((this.Table.ChildRelations["FK_tblParentsOfGen1Current_tblSubject"] == null)) {
                    return new tblParentsOfGen1CurrentRow[0];
                }
                else {
                    return ((tblParentsOfGen1CurrentRow[])(base.GetChildRows(this.Table.ChildRelations["FK_tblParentsOfGen1Current_tblSubject"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblOutcomeRow[] GettblOutcomeRows() {
                if ((this.Table.ChildRelations["FK_tblOutcome_tblSubject"] == null)) {
                    return new tblOutcomeRow[0];
                }
                else {
                    return ((tblOutcomeRow[])(base.GetChildRows(this.Table.ChildRelations["FK_tblOutcome_tblSubject"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedStructureRow[] GettblRelatedStructureRowsByFK_tblRelatedStructure_tblSubject_Subject1() {
                if ((this.Table.ChildRelations["FK_tblRelatedStructure_tblSubject_Subject1"] == null)) {
                    return new tblRelatedStructureRow[0];
                }
                else {
                    return ((tblRelatedStructureRow[])(base.GetChildRows(this.Table.ChildRelations["FK_tblRelatedStructure_tblSubject_Subject1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedStructureRow[] GettblRelatedStructureRowsByFK_tblRelatedStructure_tblSubject_Subject2() {
                if ((this.Table.ChildRelations["FK_tblRelatedStructure_tblSubject_Subject2"] == null)) {
                    return new tblRelatedStructureRow[0];
                }
                else {
                    return ((tblRelatedStructureRow[])(base.GetChildRows(this.Table.ChildRelations["FK_tblRelatedStructure_tblSubject_Subject2"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectDetailsRow[] GettblSubjectDetailsRows() {
                if ((this.Table.ChildRelations["FK_tblSubjectDetails_tblSubject"] == null)) {
                    return new tblSubjectDetailsRow[0];
                }
                else {
                    return ((tblSubjectDetailsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_tblSubjectDetails_tblSubject"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tblRelatedStructureRow : global::System.Data.DataRow {
            
            private tblRelatedStructureDataTable tabletblRelatedStructure;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblRelatedStructureRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblRelatedStructure = ((tblRelatedStructureDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tabletblRelatedStructure.IDColumn]));
                }
                set {
                    this[this.tabletblRelatedStructure.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ExtendedID {
                get {
                    return ((short)(this[this.tabletblRelatedStructure.ExtendedIDColumn]));
                }
                set {
                    this[this.tabletblRelatedStructure.ExtendedIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SubjectTag_S1 {
                get {
                    return ((int)(this[this.tabletblRelatedStructure.SubjectTag_S1Column]));
                }
                set {
                    this[this.tabletblRelatedStructure.SubjectTag_S1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SubjectTag_S2 {
                get {
                    return ((int)(this[this.tabletblRelatedStructure.SubjectTag_S2Column]));
                }
                set {
                    this[this.tabletblRelatedStructure.SubjectTag_S2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte RelationshipPath {
                get {
                    return ((byte)(this[this.tabletblRelatedStructure.RelationshipPathColumn]));
                }
                set {
                    this[this.tabletblRelatedStructure.RelationshipPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool EverSharedHouse {
                get {
                    return ((bool)(this[this.tabletblRelatedStructure.EverSharedHouseColumn]));
                }
                set {
                    this[this.tabletblRelatedStructure.EverSharedHouseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectRow tblSubjectRowByFK_tblRelatedStructure_tblSubject_Subject1 {
                get {
                    return ((tblSubjectRow)(this.GetParentRow(this.Table.ParentRelations["FK_tblRelatedStructure_tblSubject_Subject1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_tblRelatedStructure_tblSubject_Subject1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectRow tblSubjectRowByFK_tblRelatedStructure_tblSubject_Subject2 {
                get {
                    return ((tblSubjectRow)(this.GetParentRow(this.Table.ParentRelations["FK_tblRelatedStructure_tblSubject_Subject2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_tblRelatedStructure_tblSubject_Subject2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRosterGen1Row[] GettblRosterGen1Rows() {
                if ((this.Table.ChildRelations["FK_tblRosterGen1_tblRelatedStructure"] == null)) {
                    return new tblRosterGen1Row[0];
                }
                else {
                    return ((tblRosterGen1Row[])(base.GetChildRows(this.Table.ChildRelations["FK_tblRosterGen1_tblRelatedStructure"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblMarkerGen1Row[] GettblMarkerGen1Rows() {
                if ((this.Table.ChildRelations["FK_tblMarkerGen1_tblRelatedStructure"] == null)) {
                    return new tblMarkerGen1Row[0];
                }
                else {
                    return ((tblMarkerGen1Row[])(base.GetChildRows(this.Table.ChildRelations["FK_tblMarkerGen1_tblRelatedStructure"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblMarkerGen2Row[] GettblMarkerGen2Rows() {
                if ((this.Table.ChildRelations["FK_tblMarkerGen2_tblRelatedStructure"] == null)) {
                    return new tblMarkerGen2Row[0];
                }
                else {
                    return ((tblMarkerGen2Row[])(base.GetChildRows(this.Table.ChildRelations["FK_tblMarkerGen2_tblRelatedStructure"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedValuesRow[] GettblRelatedValuesRows() {
                if ((this.Table.ChildRelations["FK_tblRelatedValues_tblRelatedStructure"] == null)) {
                    return new tblRelatedValuesRow[0];
                }
                else {
                    return ((tblRelatedValuesRow[])(base.GetChildRows(this.Table.ChildRelations["FK_tblRelatedValues_tblRelatedStructure"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tblRelatedValuesRow : global::System.Data.DataRow {
            
            private tblRelatedValuesDataTable tabletblRelatedValues;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblRelatedValuesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblRelatedValues = ((tblRelatedValuesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tabletblRelatedValues.IDColumn]));
                }
                set {
                    this[this.tabletblRelatedValues.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte MultipleBirthIfSameSex {
                get {
                    return ((byte)(this[this.tabletblRelatedValues.MultipleBirthIfSameSexColumn]));
                }
                set {
                    this[this.tabletblRelatedValues.MultipleBirthIfSameSexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte IsMz {
                get {
                    return ((byte)(this[this.tabletblRelatedValues.IsMzColumn]));
                }
                set {
                    this[this.tabletblRelatedValues.IsMzColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short LastSurvey_S1 {
                get {
                    try {
                        return ((short)(this[this.tabletblRelatedValues.LastSurvey_S1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastSurvey_S1\' in table \'tblRelatedValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValues.LastSurvey_S1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short LastSurvey_S2 {
                get {
                    try {
                        return ((short)(this[this.tabletblRelatedValues.LastSurvey_S2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastSurvey_S2\' in table \'tblRelatedValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValues.LastSurvey_S2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ImplicitShareBiomomPass1 {
                get {
                    try {
                        return ((byte)(this[this.tabletblRelatedValues.ImplicitShareBiomomPass1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImplicitShareBiomomPass1\' in table \'tblRelatedValues\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValues.ImplicitShareBiomomPass1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ImplicitShareBiodadPass1 {
                get {
                    try {
                        return ((byte)(this[this.tabletblRelatedValues.ImplicitShareBiodadPass1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImplicitShareBiodadPass1\' in table \'tblRelatedValues\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValues.ImplicitShareBiodadPass1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ExplicitShareBiomomPass1 {
                get {
                    try {
                        return ((byte)(this[this.tabletblRelatedValues.ExplicitShareBiomomPass1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExplicitShareBiomomPass1\' in table \'tblRelatedValues\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValues.ExplicitShareBiomomPass1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ExplicitShareBiodadPass1 {
                get {
                    try {
                        return ((byte)(this[this.tabletblRelatedValues.ExplicitShareBiodadPass1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExplicitShareBiodadPass1\' in table \'tblRelatedValues\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValues.ExplicitShareBiodadPass1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ShareBiomomPass1 {
                get {
                    try {
                        return ((byte)(this[this.tabletblRelatedValues.ShareBiomomPass1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShareBiomomPass1\' in table \'tblRelatedValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValues.ShareBiomomPass1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ShareBiodadPass1 {
                get {
                    try {
                        return ((byte)(this[this.tabletblRelatedValues.ShareBiodadPass1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShareBiodadPass1\' in table \'tblRelatedValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValues.ShareBiodadPass1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RImplicitPass1 {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValues.RImplicitPass1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RImplicitPass1\' in table \'tblRelatedValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValues.RImplicitPass1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RImplicit {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValues.RImplicitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RImplicit\' in table \'tblRelatedValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValues.RImplicitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RImplicitSubject {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValues.RImplicitSubjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RImplicitSubject\' in table \'tblRelatedValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValues.RImplicitSubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RImplicitMother {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValues.RImplicitMotherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RImplicitMother\' in table \'tblRelatedValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValues.RImplicitMotherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RImplicit2004 {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValues.RImplicit2004Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RImplicit2004\' in table \'tblRelatedValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValues.RImplicit2004Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RExplicitOlderSibVersion {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValues.RExplicitOlderSibVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RExplicitOlderSibVersion\' in table \'tblRelatedValues\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValues.RExplicitOlderSibVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RExplicitYoungerSibVersion {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValues.RExplicitYoungerSibVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RExplicitYoungerSibVersion\' in table \'tblRelatedValues\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValues.RExplicitYoungerSibVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RExplicitPass1 {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValues.RExplicitPass1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RExplicitPass1\' in table \'tblRelatedValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValues.RExplicitPass1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RExplicit {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValues.RExplicitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RExplicit\' in table \'tblRelatedValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValues.RExplicitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RPass1 {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValues.RPass1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPass1\' in table \'tblRelatedValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValues.RPass1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double R {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValues.RColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'R\' in table \'tblRelatedValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValues.RColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RFull {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValues.RFullColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RFull\' in table \'tblRelatedValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValues.RFullColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RPeek {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValues.RPeekColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPeek\' in table \'tblRelatedValues\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValues.RPeekColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedStructureRow tblRelatedStructureRow {
                get {
                    return ((tblRelatedStructureRow)(this.GetParentRow(this.Table.ParentRelations["FK_tblRelatedValues_tblRelatedStructure"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_tblRelatedValues_tblRelatedStructure"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastSurvey_S1Null() {
                return this.IsNull(this.tabletblRelatedValues.LastSurvey_S1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastSurvey_S1Null() {
                this[this.tabletblRelatedValues.LastSurvey_S1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastSurvey_S2Null() {
                return this.IsNull(this.tabletblRelatedValues.LastSurvey_S2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastSurvey_S2Null() {
                this[this.tabletblRelatedValues.LastSurvey_S2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImplicitShareBiomomPass1Null() {
                return this.IsNull(this.tabletblRelatedValues.ImplicitShareBiomomPass1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImplicitShareBiomomPass1Null() {
                this[this.tabletblRelatedValues.ImplicitShareBiomomPass1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImplicitShareBiodadPass1Null() {
                return this.IsNull(this.tabletblRelatedValues.ImplicitShareBiodadPass1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImplicitShareBiodadPass1Null() {
                this[this.tabletblRelatedValues.ImplicitShareBiodadPass1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExplicitShareBiomomPass1Null() {
                return this.IsNull(this.tabletblRelatedValues.ExplicitShareBiomomPass1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExplicitShareBiomomPass1Null() {
                this[this.tabletblRelatedValues.ExplicitShareBiomomPass1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExplicitShareBiodadPass1Null() {
                return this.IsNull(this.tabletblRelatedValues.ExplicitShareBiodadPass1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExplicitShareBiodadPass1Null() {
                this[this.tabletblRelatedValues.ExplicitShareBiodadPass1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShareBiomomPass1Null() {
                return this.IsNull(this.tabletblRelatedValues.ShareBiomomPass1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShareBiomomPass1Null() {
                this[this.tabletblRelatedValues.ShareBiomomPass1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShareBiodadPass1Null() {
                return this.IsNull(this.tabletblRelatedValues.ShareBiodadPass1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShareBiodadPass1Null() {
                this[this.tabletblRelatedValues.ShareBiodadPass1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRImplicitPass1Null() {
                return this.IsNull(this.tabletblRelatedValues.RImplicitPass1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRImplicitPass1Null() {
                this[this.tabletblRelatedValues.RImplicitPass1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRImplicitNull() {
                return this.IsNull(this.tabletblRelatedValues.RImplicitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRImplicitNull() {
                this[this.tabletblRelatedValues.RImplicitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRImplicitSubjectNull() {
                return this.IsNull(this.tabletblRelatedValues.RImplicitSubjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRImplicitSubjectNull() {
                this[this.tabletblRelatedValues.RImplicitSubjectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRImplicitMotherNull() {
                return this.IsNull(this.tabletblRelatedValues.RImplicitMotherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRImplicitMotherNull() {
                this[this.tabletblRelatedValues.RImplicitMotherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRImplicit2004Null() {
                return this.IsNull(this.tabletblRelatedValues.RImplicit2004Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRImplicit2004Null() {
                this[this.tabletblRelatedValues.RImplicit2004Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRExplicitOlderSibVersionNull() {
                return this.IsNull(this.tabletblRelatedValues.RExplicitOlderSibVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRExplicitOlderSibVersionNull() {
                this[this.tabletblRelatedValues.RExplicitOlderSibVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRExplicitYoungerSibVersionNull() {
                return this.IsNull(this.tabletblRelatedValues.RExplicitYoungerSibVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRExplicitYoungerSibVersionNull() {
                this[this.tabletblRelatedValues.RExplicitYoungerSibVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRExplicitPass1Null() {
                return this.IsNull(this.tabletblRelatedValues.RExplicitPass1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRExplicitPass1Null() {
                this[this.tabletblRelatedValues.RExplicitPass1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRExplicitNull() {
                return this.IsNull(this.tabletblRelatedValues.RExplicitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRExplicitNull() {
                this[this.tabletblRelatedValues.RExplicitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRPass1Null() {
                return this.IsNull(this.tabletblRelatedValues.RPass1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRPass1Null() {
                this[this.tabletblRelatedValues.RPass1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRNull() {
                return this.IsNull(this.tabletblRelatedValues.RColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRNull() {
                this[this.tabletblRelatedValues.RColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRFullNull() {
                return this.IsNull(this.tabletblRelatedValues.RFullColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRFullNull() {
                this[this.tabletblRelatedValues.RFullColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRPeekNull() {
                return this.IsNull(this.tabletblRelatedValues.RPeekColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRPeekNull() {
                this[this.tabletblRelatedValues.RPeekColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tblSubjectDetailsRow : global::System.Data.DataRow {
            
            private tblSubjectDetailsDataTable tabletblSubjectDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblSubjectDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblSubjectDetails = ((tblSubjectDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SubjectTag {
                get {
                    return ((int)(this[this.tabletblSubjectDetails.SubjectTagColumn]));
                }
                set {
                    this[this.tabletblSubjectDetails.SubjectTagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte RaceCohort {
                get {
                    return ((byte)(this[this.tabletblSubjectDetails.RaceCohortColumn]));
                }
                set {
                    this[this.tabletblSubjectDetails.RaceCohortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte SiblingCountInNls {
                get {
                    return ((byte)(this[this.tabletblSubjectDetails.SiblingCountInNlsColumn]));
                }
                set {
                    this[this.tabletblSubjectDetails.SiblingCountInNlsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte BirthOrderInNls {
                get {
                    return ((byte)(this[this.tabletblSubjectDetails.BirthOrderInNlsColumn]));
                }
                set {
                    this[this.tabletblSubjectDetails.BirthOrderInNlsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte SimilarAgeCount {
                get {
                    return ((byte)(this[this.tabletblSubjectDetails.SimilarAgeCountColumn]));
                }
                set {
                    this[this.tabletblSubjectDetails.SimilarAgeCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool HasMzPossibly {
                get {
                    return ((bool)(this[this.tabletblSubjectDetails.HasMzPossiblyColumn]));
                }
                set {
                    this[this.tabletblSubjectDetails.HasMzPossiblyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte KidCountBio {
                get {
                    try {
                        return ((byte)(this[this.tabletblSubjectDetails.KidCountBioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KidCountBio\' in table \'tblSubjectDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSubjectDetails.KidCountBioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte KidCountInNls {
                get {
                    try {
                        return ((byte)(this[this.tabletblSubjectDetails.KidCountInNlsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KidCountInNls\' in table \'tblSubjectDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSubjectDetails.KidCountInNlsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Mob {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblSubjectDetails.MobColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mob\' in table \'tblSubjectDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSubjectDetails.MobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short LastSurveyYearCompleted {
                get {
                    try {
                        return ((short)(this[this.tabletblSubjectDetails.LastSurveyYearCompletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastSurveyYearCompleted\' in table \'tblSubjectDetails\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tabletblSubjectDetails.LastSurveyYearCompletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AgeAtLastSurvey {
                get {
                    try {
                        return ((double)(this[this.tabletblSubjectDetails.AgeAtLastSurveyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeAtLastSurvey\' in table \'tblSubjectDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSubjectDetails.AgeAtLastSurveyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDead {
                get {
                    return ((bool)(this[this.tabletblSubjectDetails.IsDeadColumn]));
                }
                set {
                    this[this.tabletblSubjectDetails.IsDeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DeathDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblSubjectDetails.DeathDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeathDate\' in table \'tblSubjectDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSubjectDetails.DeathDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBiodadDead {
                get {
                    try {
                        return ((bool)(this[this.tabletblSubjectDetails.IsBiodadDeadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsBiodadDead\' in table \'tblSubjectDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSubjectDetails.IsBiodadDeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime BiodadDeathDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblSubjectDetails.BiodadDeathDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BiodadDeathDate\' in table \'tblSubjectDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblSubjectDetails.BiodadDeathDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectRow tblSubjectRow {
                get {
                    return ((tblSubjectRow)(this.GetParentRow(this.Table.ParentRelations["FK_tblSubjectDetails_tblSubject"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_tblSubjectDetails_tblSubject"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKidCountBioNull() {
                return this.IsNull(this.tabletblSubjectDetails.KidCountBioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKidCountBioNull() {
                this[this.tabletblSubjectDetails.KidCountBioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKidCountInNlsNull() {
                return this.IsNull(this.tabletblSubjectDetails.KidCountInNlsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKidCountInNlsNull() {
                this[this.tabletblSubjectDetails.KidCountInNlsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMobNull() {
                return this.IsNull(this.tabletblSubjectDetails.MobColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMobNull() {
                this[this.tabletblSubjectDetails.MobColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastSurveyYearCompletedNull() {
                return this.IsNull(this.tabletblSubjectDetails.LastSurveyYearCompletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastSurveyYearCompletedNull() {
                this[this.tabletblSubjectDetails.LastSurveyYearCompletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeAtLastSurveyNull() {
                return this.IsNull(this.tabletblSubjectDetails.AgeAtLastSurveyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeAtLastSurveyNull() {
                this[this.tabletblSubjectDetails.AgeAtLastSurveyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeathDateNull() {
                return this.IsNull(this.tabletblSubjectDetails.DeathDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeathDateNull() {
                this[this.tabletblSubjectDetails.DeathDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsBiodadDeadNull() {
                return this.IsNull(this.tabletblSubjectDetails.IsBiodadDeadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsBiodadDeadNull() {
                this[this.tabletblSubjectDetails.IsBiodadDeadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBiodadDeathDateNull() {
                return this.IsNull(this.tabletblSubjectDetails.BiodadDeathDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBiodadDeathDateNull() {
                this[this.tabletblSubjectDetails.BiodadDeathDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tblMzManualRow : global::System.Data.DataRow {
            
            private tblMzManualDataTable tabletblMzManual;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblMzManualRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblMzManual = ((tblMzManualDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tabletblMzManual.IDColumn]));
                }
                set {
                    this[this.tabletblMzManual.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SubjectTag_S1 {
                get {
                    return ((int)(this[this.tabletblMzManual.SubjectTag_S1Column]));
                }
                set {
                    this[this.tabletblMzManual.SubjectTag_S1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SubjectTag_S2 {
                get {
                    return ((int)(this[this.tabletblMzManual.SubjectTag_S2Column]));
                }
                set {
                    this[this.tabletblMzManual.SubjectTag_S2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Generation {
                get {
                    return ((byte)(this[this.tabletblMzManual.GenerationColumn]));
                }
                set {
                    this[this.tabletblMzManual.GenerationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte MultipleBirthIfSameSex {
                get {
                    return ((byte)(this[this.tabletblMzManual.MultipleBirthIfSameSexColumn]));
                }
                set {
                    this[this.tabletblMzManual.MultipleBirthIfSameSexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte IsMz {
                get {
                    return ((byte)(this[this.tabletblMzManual.IsMzColumn]));
                }
                set {
                    this[this.tabletblMzManual.IsMzColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Undecided {
                get {
                    return ((bool)(this[this.tabletblMzManual.UndecidedColumn]));
                }
                set {
                    this[this.tabletblMzManual.UndecidedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Related {
                get {
                    try {
                        return ((bool)(this[this.tabletblMzManual.RelatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Related\' in table \'tblMzManual\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMzManual.RelatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Notes {
                get {
                    try {
                        return ((string)(this[this.tabletblMzManual.NotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Notes\' in table \'tblMzManual\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblMzManual.NotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRelatedNull() {
                return this.IsNull(this.tabletblMzManual.RelatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRelatedNull() {
                this[this.tabletblMzManual.RelatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNotesNull() {
                return this.IsNull(this.tabletblMzManual.NotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNotesNull() {
                this[this.tabletblMzManual.NotesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tblRosterGen1AssignmentRow : global::System.Data.DataRow {
            
            private tblRosterGen1AssignmentDataTable tabletblRosterGen1Assignment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblRosterGen1AssignmentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblRosterGen1Assignment = ((tblRosterGen1AssignmentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ID {
                get {
                    return ((byte)(this[this.tabletblRosterGen1Assignment.IDColumn]));
                }
                set {
                    this[this.tabletblRosterGen1Assignment.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ResponseLower {
                get {
                    return ((short)(this[this.tabletblRosterGen1Assignment.ResponseLowerColumn]));
                }
                set {
                    this[this.tabletblRosterGen1Assignment.ResponseLowerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ResponseUpper {
                get {
                    return ((short)(this[this.tabletblRosterGen1Assignment.ResponseUpperColumn]));
                }
                set {
                    this[this.tabletblRosterGen1Assignment.ResponseUpperColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short Freq {
                get {
                    return ((short)(this[this.tabletblRosterGen1Assignment.FreqColumn]));
                }
                set {
                    this[this.tabletblRosterGen1Assignment.FreqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Resolved {
                get {
                    return ((bool)(this[this.tabletblRosterGen1Assignment.ResolvedColumn]));
                }
                set {
                    this[this.tabletblRosterGen1Assignment.ResolvedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double R {
                get {
                    try {
                        return ((double)(this[this.tabletblRosterGen1Assignment.RColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'R\' in table \'tblRosterGen1Assignment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRosterGen1Assignment.RColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RBoundLower {
                get {
                    return ((double)(this[this.tabletblRosterGen1Assignment.RBoundLowerColumn]));
                }
                set {
                    this[this.tabletblRosterGen1Assignment.RBoundLowerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RBoundUpper {
                get {
                    return ((double)(this[this.tabletblRosterGen1Assignment.RBoundUpperColumn]));
                }
                set {
                    this[this.tabletblRosterGen1Assignment.RBoundUpperColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte SameGeneration {
                get {
                    return ((byte)(this[this.tabletblRosterGen1Assignment.SameGenerationColumn]));
                }
                set {
                    this[this.tabletblRosterGen1Assignment.SameGenerationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ShareBiodad {
                get {
                    return ((byte)(this[this.tabletblRosterGen1Assignment.ShareBiodadColumn]));
                }
                set {
                    this[this.tabletblRosterGen1Assignment.ShareBiodadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ShareBiomom {
                get {
                    return ((byte)(this[this.tabletblRosterGen1Assignment.ShareBiomomColumn]));
                }
                set {
                    this[this.tabletblRosterGen1Assignment.ShareBiomomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ShareBiograndparent {
                get {
                    return ((byte)(this[this.tabletblRosterGen1Assignment.ShareBiograndparentColumn]));
                }
                set {
                    this[this.tabletblRosterGen1Assignment.ShareBiograndparentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Inconsistent {
                get {
                    return ((bool)(this[this.tabletblRosterGen1Assignment.InconsistentColumn]));
                }
                set {
                    this[this.tabletblRosterGen1Assignment.InconsistentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Notes {
                get {
                    try {
                        return ((string)(this[this.tabletblRosterGen1Assignment.NotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Notes\' in table \'tblRosterGen1Assignment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRosterGen1Assignment.NotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ResponseLowerLabel {
                get {
                    try {
                        return ((string)(this[this.tabletblRosterGen1Assignment.ResponseLowerLabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResponseLowerLabel\' in table \'tblRosterGen1Assignment\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tabletblRosterGen1Assignment.ResponseLowerLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ResponseUpperLabel {
                get {
                    try {
                        return ((string)(this[this.tabletblRosterGen1Assignment.ResponseUpperLabelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResponseUpperLabel\' in table \'tblRosterGen1Assignment\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tabletblRosterGen1Assignment.ResponseUpperLabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRNull() {
                return this.IsNull(this.tabletblRosterGen1Assignment.RColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRNull() {
                this[this.tabletblRosterGen1Assignment.RColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNotesNull() {
                return this.IsNull(this.tabletblRosterGen1Assignment.NotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNotesNull() {
                this[this.tabletblRosterGen1Assignment.NotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResponseLowerLabelNull() {
                return this.IsNull(this.tabletblRosterGen1Assignment.ResponseLowerLabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResponseLowerLabelNull() {
                this[this.tabletblRosterGen1Assignment.ResponseLowerLabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResponseUpperLabelNull() {
                return this.IsNull(this.tabletblRosterGen1Assignment.ResponseUpperLabelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResponseUpperLabelNull() {
                this[this.tabletblRosterGen1Assignment.ResponseUpperLabelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedValuesArchiveRow[] GettblRelatedValuesArchiveRows() {
                if ((this.Table.ChildRelations["FK_tblRelatedValuesArchive_tblLURosterGen1Assignment"] == null)) {
                    return new tblRelatedValuesArchiveRow[0];
                }
                else {
                    return ((tblRelatedValuesArchiveRow[])(base.GetChildRows(this.Table.ChildRelations["FK_tblRelatedValuesArchive_tblLURosterGen1Assignment"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tblVariableRow : global::System.Data.DataRow {
            
            private tblVariableDataTable tabletblVariable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblVariableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblVariable = ((tblVariableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VariableCode {
                get {
                    return ((string)(this[this.tabletblVariable.VariableCodeColumn]));
                }
                set {
                    this[this.tabletblVariable.VariableCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short Item {
                get {
                    return ((short)(this[this.tabletblVariable.ItemColumn]));
                }
                set {
                    this[this.tabletblVariable.ItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Generation {
                get {
                    return ((byte)(this[this.tabletblVariable.GenerationColumn]));
                }
                set {
                    this[this.tabletblVariable.GenerationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ExtractSource {
                get {
                    return ((byte)(this[this.tabletblVariable.ExtractSourceColumn]));
                }
                set {
                    this[this.tabletblVariable.ExtractSourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte SurveySource {
                get {
                    return ((byte)(this[this.tabletblVariable.SurveySourceColumn]));
                }
                set {
                    this[this.tabletblVariable.SurveySourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short SurveyYear {
                get {
                    return ((short)(this[this.tabletblVariable.SurveyYearColumn]));
                }
                set {
                    this[this.tabletblVariable.SurveyYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte LoopIndex {
                get {
                    return ((byte)(this[this.tabletblVariable.LoopIndexColumn]));
                }
                set {
                    this[this.tabletblVariable.LoopIndexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Translate {
                get {
                    return ((bool)(this[this.tabletblVariable.TranslateColumn]));
                }
                set {
                    this[this.tabletblVariable.TranslateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Active {
                get {
                    return ((bool)(this[this.tabletblVariable.ActiveColumn]));
                }
                set {
                    this[this.tabletblVariable.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Notes {
                get {
                    try {
                        return ((string)(this[this.tabletblVariable.NotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Notes\' in table \'tblVariable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblVariable.NotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblItemRow tblItemRow {
                get {
                    return ((tblItemRow)(this.GetParentRow(this.Table.ParentRelations["FK_tblVariable_79_tblItem_79"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_tblVariable_79_tblItem_79"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNotesNull() {
                return this.IsNull(this.tabletblVariable.NotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNotesNull() {
                this[this.tabletblVariable.NotesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tblItemRow : global::System.Data.DataRow {
            
            private tblItemDataTable tabletblItem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblItemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblItem = ((tblItemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short ID {
                get {
                    return ((short)(this[this.tabletblItem.IDColumn]));
                }
                set {
                    this[this.tabletblItem.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Label {
                get {
                    return ((string)(this[this.tabletblItem.LabelColumn]));
                }
                set {
                    this[this.tabletblItem.LabelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MinValue {
                get {
                    return ((int)(this[this.tabletblItem.MinValueColumn]));
                }
                set {
                    this[this.tabletblItem.MinValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MinNonnegative {
                get {
                    try {
                        return ((int)(this[this.tabletblItem.MinNonnegativeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MinNonnegative\' in table \'tblItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblItem.MinNonnegativeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxValue {
                get {
                    return ((int)(this[this.tabletblItem.MaxValueColumn]));
                }
                set {
                    this[this.tabletblItem.MaxValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Active {
                get {
                    return ((string)(this[this.tabletblItem.ActiveColumn]));
                }
                set {
                    this[this.tabletblItem.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Notes {
                get {
                    try {
                        return ((string)(this[this.tabletblItem.NotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Notes\' in table \'tblItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblItem.NotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMinNonnegativeNull() {
                return this.IsNull(this.tabletblItem.MinNonnegativeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMinNonnegativeNull() {
                this[this.tabletblItem.MinNonnegativeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNotesNull() {
                return this.IsNull(this.tabletblItem.NotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNotesNull() {
                this[this.tabletblItem.NotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblVariableRow[] GettblVariableRows() {
                if ((this.Table.ChildRelations["FK_tblVariable_79_tblItem_79"] == null)) {
                    return new tblVariableRow[0];
                }
                else {
                    return ((tblVariableRow[])(base.GetChildRows(this.Table.ChildRelations["FK_tblVariable_79_tblItem_79"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblResponseRow[] GettblResponseRows() {
                if ((this.Table.ChildRelations["FK_tblResponse_tblItem_79"] == null)) {
                    return new tblResponseRow[0];
                }
                else {
                    return ((tblResponseRow[])(base.GetChildRows(this.Table.ChildRelations["FK_tblResponse_tblItem_79"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tblRelatedValuesArchiveRow : global::System.Data.DataRow {
            
            private tblRelatedValuesArchiveDataTable tabletblRelatedValuesArchive;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tblRelatedValuesArchiveRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblRelatedValuesArchive = ((tblRelatedValuesArchiveDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tabletblRelatedValuesArchive.IDColumn]));
                }
                set {
                    this[this.tabletblRelatedValuesArchive.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short AlgorithmVersion {
                get {
                    return ((short)(this[this.tabletblRelatedValuesArchive.AlgorithmVersionColumn]));
                }
                set {
                    this[this.tabletblRelatedValuesArchive.AlgorithmVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SubjectTag_S1 {
                get {
                    return ((int)(this[this.tabletblRelatedValuesArchive.SubjectTag_S1Column]));
                }
                set {
                    this[this.tabletblRelatedValuesArchive.SubjectTag_S1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SubjectTag_S2 {
                get {
                    return ((int)(this[this.tabletblRelatedValuesArchive.SubjectTag_S2Column]));
                }
                set {
                    this[this.tabletblRelatedValuesArchive.SubjectTag_S2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte MultipleBirthIfSameSex {
                get {
                    return ((byte)(this[this.tabletblRelatedValuesArchive.MultipleBirthIfSameSexColumn]));
                }
                set {
                    this[this.tabletblRelatedValuesArchive.MultipleBirthIfSameSexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte IsMz {
                get {
                    return ((byte)(this[this.tabletblRelatedValuesArchive.IsMzColumn]));
                }
                set {
                    this[this.tabletblRelatedValuesArchive.IsMzColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte SameGeneration {
                get {
                    try {
                        return ((byte)(this[this.tabletblRelatedValuesArchive.SameGenerationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SameGeneration\' in table \'tblRelatedValuesArchive\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValuesArchive.SameGenerationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte RosterAssignmentID {
                get {
                    try {
                        return ((byte)(this[this.tabletblRelatedValuesArchive.RosterAssignmentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RosterAssignmentID\' in table \'tblRelatedValuesArchive\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValuesArchive.RosterAssignmentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RRoster {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValuesArchive.RRosterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RRoster\' in table \'tblRelatedValuesArchive\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValuesArchive.RRosterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short LastSurvey_S1 {
                get {
                    try {
                        return ((short)(this[this.tabletblRelatedValuesArchive.LastSurvey_S1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastSurvey_S1\' in table \'tblRelatedValuesArchive\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValuesArchive.LastSurvey_S1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short LastSurvey_S2 {
                get {
                    try {
                        return ((short)(this[this.tabletblRelatedValuesArchive.LastSurvey_S2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastSurvey_S2\' in table \'tblRelatedValuesArchive\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValuesArchive.LastSurvey_S2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RImplicitPass1 {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValuesArchive.RImplicitPass1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RImplicitPass1\' in table \'tblRelatedValuesArchive\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValuesArchive.RImplicitPass1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RImplicit {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValuesArchive.RImplicitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RImplicit\' in table \'tblRelatedValuesArchive\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValuesArchive.RImplicitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RImplicitSubject {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValuesArchive.RImplicitSubjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RImplicitSubject\' in table \'tblRelatedValuesArchive\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValuesArchive.RImplicitSubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RImplicitMother {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValuesArchive.RImplicitMotherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RImplicitMother\' in table \'tblRelatedValuesArchive\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValuesArchive.RImplicitMotherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RImplicit2004 {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValuesArchive.RImplicit2004Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RImplicit2004\' in table \'tblRelatedValuesArchive\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValuesArchive.RImplicit2004Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RExplicitOldestSibVersion {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValuesArchive.RExplicitOldestSibVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RExplicitOldestSibVersion\' in table \'tblRelatedValuesArchiv" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValuesArchive.RExplicitOldestSibVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RExplicitYoungestSibVersion {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValuesArchive.RExplicitYoungestSibVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RExplicitYoungestSibVersion\' in table \'tblRelatedValuesArch" +
                                "ive\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValuesArchive.RExplicitYoungestSibVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RExplicitPass1 {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValuesArchive.RExplicitPass1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RExplicitPass1\' in table \'tblRelatedValuesArchive\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValuesArchive.RExplicitPass1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RExplicit {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValuesArchive.RExplicitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RExplicit\' in table \'tblRelatedValuesArchive\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValuesArchive.RExplicitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RPass1 {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValuesArchive.RPass1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPass1\' in table \'tblRelatedValuesArchive\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValuesArchive.RPass1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double R {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValuesArchive.RColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'R\' in table \'tblRelatedValuesArchive\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValuesArchive.RColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RFull {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValuesArchive.RFullColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RFull\' in table \'tblRelatedValuesArchive\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValuesArchive.RFullColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RPeek {
                get {
                    try {
                        return ((double)(this[this.tabletblRelatedValuesArchive.RPeekColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPeek\' in table \'tblRelatedValuesArchive\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblRelatedValuesArchive.RPeekColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRosterGen1AssignmentRow tblRosterGen1AssignmentRow {
                get {
                    return ((tblRosterGen1AssignmentRow)(this.GetParentRow(this.Table.ParentRelations["FK_tblRelatedValuesArchive_tblLURosterGen1Assignment"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_tblRelatedValuesArchive_tblLURosterGen1Assignment"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSameGenerationNull() {
                return this.IsNull(this.tabletblRelatedValuesArchive.SameGenerationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSameGenerationNull() {
                this[this.tabletblRelatedValuesArchive.SameGenerationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRosterAssignmentIDNull() {
                return this.IsNull(this.tabletblRelatedValuesArchive.RosterAssignmentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRosterAssignmentIDNull() {
                this[this.tabletblRelatedValuesArchive.RosterAssignmentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRRosterNull() {
                return this.IsNull(this.tabletblRelatedValuesArchive.RRosterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRRosterNull() {
                this[this.tabletblRelatedValuesArchive.RRosterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastSurvey_S1Null() {
                return this.IsNull(this.tabletblRelatedValuesArchive.LastSurvey_S1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastSurvey_S1Null() {
                this[this.tabletblRelatedValuesArchive.LastSurvey_S1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastSurvey_S2Null() {
                return this.IsNull(this.tabletblRelatedValuesArchive.LastSurvey_S2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastSurvey_S2Null() {
                this[this.tabletblRelatedValuesArchive.LastSurvey_S2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRImplicitPass1Null() {
                return this.IsNull(this.tabletblRelatedValuesArchive.RImplicitPass1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRImplicitPass1Null() {
                this[this.tabletblRelatedValuesArchive.RImplicitPass1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRImplicitNull() {
                return this.IsNull(this.tabletblRelatedValuesArchive.RImplicitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRImplicitNull() {
                this[this.tabletblRelatedValuesArchive.RImplicitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRImplicitSubjectNull() {
                return this.IsNull(this.tabletblRelatedValuesArchive.RImplicitSubjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRImplicitSubjectNull() {
                this[this.tabletblRelatedValuesArchive.RImplicitSubjectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRImplicitMotherNull() {
                return this.IsNull(this.tabletblRelatedValuesArchive.RImplicitMotherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRImplicitMotherNull() {
                this[this.tabletblRelatedValuesArchive.RImplicitMotherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRImplicit2004Null() {
                return this.IsNull(this.tabletblRelatedValuesArchive.RImplicit2004Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRImplicit2004Null() {
                this[this.tabletblRelatedValuesArchive.RImplicit2004Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRExplicitOldestSibVersionNull() {
                return this.IsNull(this.tabletblRelatedValuesArchive.RExplicitOldestSibVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRExplicitOldestSibVersionNull() {
                this[this.tabletblRelatedValuesArchive.RExplicitOldestSibVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRExplicitYoungestSibVersionNull() {
                return this.IsNull(this.tabletblRelatedValuesArchive.RExplicitYoungestSibVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRExplicitYoungestSibVersionNull() {
                this[this.tabletblRelatedValuesArchive.RExplicitYoungestSibVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRExplicitPass1Null() {
                return this.IsNull(this.tabletblRelatedValuesArchive.RExplicitPass1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRExplicitPass1Null() {
                this[this.tabletblRelatedValuesArchive.RExplicitPass1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRExplicitNull() {
                return this.IsNull(this.tabletblRelatedValuesArchive.RExplicitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRExplicitNull() {
                this[this.tabletblRelatedValuesArchive.RExplicitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRPass1Null() {
                return this.IsNull(this.tabletblRelatedValuesArchive.RPass1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRPass1Null() {
                this[this.tabletblRelatedValuesArchive.RPass1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRNull() {
                return this.IsNull(this.tabletblRelatedValuesArchive.RColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRNull() {
                this[this.tabletblRelatedValuesArchive.RColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRFullNull() {
                return this.IsNull(this.tabletblRelatedValuesArchive.RFullColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRFullNull() {
                this[this.tabletblRelatedValuesArchive.RFullColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRPeekNull() {
                return this.IsNull(this.tabletblRelatedValuesArchive.RPeekColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRPeekNull() {
                this[this.tabletblRelatedValuesArchive.RPeekColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tblSurveyTimeRowChangeEvent : global::System.EventArgs {
            
            private tblSurveyTimeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSurveyTimeRowChangeEvent(tblSurveyTimeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSurveyTimeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tblBabyDaddyRowChangeEvent : global::System.EventArgs {
            
            private tblBabyDaddyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblBabyDaddyRowChangeEvent(tblBabyDaddyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblBabyDaddyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class vewSurveyTimeMostRecentRowChangeEvent : global::System.EventArgs {
            
            private vewSurveyTimeMostRecentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vewSurveyTimeMostRecentRowChangeEvent(vewSurveyTimeMostRecentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public vewSurveyTimeMostRecentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tblFatherOfGen2RowChangeEvent : global::System.EventArgs {
            
            private tblFatherOfGen2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblFatherOfGen2RowChangeEvent(tblFatherOfGen2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblFatherOfGen2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tblRosterGen1RowChangeEvent : global::System.EventArgs {
            
            private tblRosterGen1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRosterGen1RowChangeEvent(tblRosterGen1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRosterGen1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tblResponseRowChangeEvent : global::System.EventArgs {
            
            private tblResponseRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblResponseRowChangeEvent(tblResponseRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblResponseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tblMarkerGen1RowChangeEvent : global::System.EventArgs {
            
            private tblMarkerGen1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblMarkerGen1RowChangeEvent(tblMarkerGen1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblMarkerGen1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tblMarkerGen2RowChangeEvent : global::System.EventArgs {
            
            private tblMarkerGen2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblMarkerGen2RowChangeEvent(tblMarkerGen2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblMarkerGen2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tblParentsOfGen1RetroRowChangeEvent : global::System.EventArgs {
            
            private tblParentsOfGen1RetroRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblParentsOfGen1RetroRowChangeEvent(tblParentsOfGen1RetroRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblParentsOfGen1RetroRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tblParentsOfGen1CurrentRowChangeEvent : global::System.EventArgs {
            
            private tblParentsOfGen1CurrentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblParentsOfGen1CurrentRowChangeEvent(tblParentsOfGen1CurrentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblParentsOfGen1CurrentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tblOutcomeRowChangeEvent : global::System.EventArgs {
            
            private tblOutcomeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblOutcomeRowChangeEvent(tblOutcomeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblOutcomeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tblSubjectRowChangeEvent : global::System.EventArgs {
            
            private tblSubjectRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectRowChangeEvent(tblSubjectRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tblRelatedStructureRowChangeEvent : global::System.EventArgs {
            
            private tblRelatedStructureRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedStructureRowChangeEvent(tblRelatedStructureRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedStructureRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tblRelatedValuesRowChangeEvent : global::System.EventArgs {
            
            private tblRelatedValuesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedValuesRowChangeEvent(tblRelatedValuesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedValuesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tblSubjectDetailsRowChangeEvent : global::System.EventArgs {
            
            private tblSubjectDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectDetailsRowChangeEvent(tblSubjectDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblSubjectDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tblMzManualRowChangeEvent : global::System.EventArgs {
            
            private tblMzManualRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblMzManualRowChangeEvent(tblMzManualRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblMzManualRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tblRosterGen1AssignmentRowChangeEvent : global::System.EventArgs {
            
            private tblRosterGen1AssignmentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRosterGen1AssignmentRowChangeEvent(tblRosterGen1AssignmentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRosterGen1AssignmentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tblVariableRowChangeEvent : global::System.EventArgs {
            
            private tblVariableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblVariableRowChangeEvent(tblVariableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblVariableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tblItemRowChangeEvent : global::System.EventArgs {
            
            private tblItemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblItemRowChangeEvent(tblItemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblItemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tblRelatedValuesArchiveRowChangeEvent : global::System.EventArgs {
            
            private tblRelatedValuesArchiveRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedValuesArchiveRowChangeEvent(tblRelatedValuesArchiveRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tblRelatedValuesArchiveRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Nls.Base79.LinksDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblSurveyTimeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tblSurveyTimeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblSurveyTime";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("SubjectTag", "SubjectTag");
            tableMapping.ColumnMappings.Add("SurveySource", "SurveySource");
            tableMapping.ColumnMappings.Add("SurveyYear", "SurveyYear");
            tableMapping.ColumnMappings.Add("SurveyDate", "SurveyDate");
            tableMapping.ColumnMappings.Add("AgeSelfReportYears", "AgeSelfReportYears");
            tableMapping.ColumnMappings.Add("AgeCalculateYears", "AgeCalculateYears");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Process].[tblSurveyTime] WHERE (([ID] = @Original_ID) AND ([SubjectTag] = @Original_SubjectTag) AND ([SurveySource] = @Original_SurveySource) AND ([SurveyYear] = @Original_SurveyYear) AND ((@IsNull_SurveyDate = 1 AND [SurveyDate] IS NULL) OR ([SurveyDate] = @Original_SurveyDate)) AND ((@IsNull_AgeSelfReportYears = 1 AND [AgeSelfReportYears] IS NULL) OR ([AgeSelfReportYears] = @Original_AgeSelfReportYears)) AND ((@IsNull_AgeCalculateYears = 1 AND [AgeCalculateYears] IS NULL) OR ([AgeCalculateYears] = @Original_AgeCalculateYears)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveySource", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveySource", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SurveyDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveyDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AgeSelfReportYears", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeSelfReportYears", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AgeSelfReportYears", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeSelfReportYears", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AgeCalculateYears", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeCalculateYears", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AgeCalculateYears", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeCalculateYears", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Process].[tblSurveyTime] ([SubjectTag], [SurveySource], [SurveyYear], [SurveyDate], [AgeSelfReportYears], [AgeCalculateYears]) VALUES (@SubjectTag, @SurveySource, @SurveyYear, @SurveyDate, @AgeSelfReportYears, @AgeCalculateYears);
SELECT ID, SubjectTag, SurveySource, SurveyYear, SurveyDate, AgeSelfReportYears, AgeCalculateYears FROM Process.tblSurveyTime WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveySource", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveySource", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveyDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeSelfReportYears", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeSelfReportYears", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeCalculateYears", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeCalculateYears", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Process].[tblSurveyTime] SET [SubjectTag] = @SubjectTag, [SurveySource] = @SurveySource, [SurveyYear] = @SurveyYear, [SurveyDate] = @SurveyDate, [AgeSelfReportYears] = @AgeSelfReportYears, [AgeCalculateYears] = @AgeCalculateYears WHERE (([ID] = @Original_ID) AND ([SubjectTag] = @Original_SubjectTag) AND ([SurveySource] = @Original_SurveySource) AND ([SurveyYear] = @Original_SurveyYear) AND ((@IsNull_SurveyDate = 1 AND [SurveyDate] IS NULL) OR ([SurveyDate] = @Original_SurveyDate)) AND ((@IsNull_AgeSelfReportYears = 1 AND [AgeSelfReportYears] IS NULL) OR ([AgeSelfReportYears] = @Original_AgeSelfReportYears)) AND ((@IsNull_AgeCalculateYears = 1 AND [AgeCalculateYears] IS NULL) OR ([AgeCalculateYears] = @Original_AgeCalculateYears)));
SELECT ID, SubjectTag, SurveySource, SurveyYear, SurveyDate, AgeSelfReportYears, AgeCalculateYears FROM Process.tblSurveyTime WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveySource", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveySource", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveyDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeSelfReportYears", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeSelfReportYears", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeCalculateYears", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeCalculateYears", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveySource", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveySource", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SurveyDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveyDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AgeSelfReportYears", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeSelfReportYears", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AgeSelfReportYears", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeSelfReportYears", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AgeCalculateYears", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeCalculateYears", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AgeCalculateYears", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeCalculateYears", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Nls.Base79.Properties.Settings.Default.Nlsy79ConnectionStringBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, SubjectTag, SurveySource, SurveyYear, SurveyDate, AgeSelfReportYears, " +
                "AgeCalculateYears FROM Process.tblSurveyTime";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LinksDataSet.tblSurveyTimeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LinksDataSet.tblSurveyTimeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LinksDataSet.tblSurveyTimeDataTable dataTable = new LinksDataSet.tblSurveyTimeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet.tblSurveyTimeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblSurveyTime");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, int Original_SubjectTag, byte Original_SurveySource, short Original_SurveyYear, global::System.Nullable<global::System.DateTime> Original_SurveyDate, global::System.Nullable<double> Original_AgeSelfReportYears, global::System.Nullable<double> Original_AgeCalculateYears) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_SubjectTag));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((byte)(Original_SurveySource));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((short)(Original_SurveyYear));
            if ((Original_SurveyDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_SurveyDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_AgeSelfReportYears.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_AgeSelfReportYears.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_AgeCalculateYears.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((double)(Original_AgeCalculateYears.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int SubjectTag, byte SurveySource, short SurveyYear, global::System.Nullable<global::System.DateTime> SurveyDate, global::System.Nullable<double> AgeSelfReportYears, global::System.Nullable<double> AgeCalculateYears) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(SubjectTag));
            this.Adapter.InsertCommand.Parameters[1].Value = ((byte)(SurveySource));
            this.Adapter.InsertCommand.Parameters[2].Value = ((short)(SurveyYear));
            if ((SurveyDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(SurveyDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((AgeSelfReportYears.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(AgeSelfReportYears.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((AgeCalculateYears.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(AgeCalculateYears.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int SubjectTag, byte SurveySource, short SurveyYear, global::System.Nullable<global::System.DateTime> SurveyDate, global::System.Nullable<double> AgeSelfReportYears, global::System.Nullable<double> AgeCalculateYears, int Original_ID, int Original_SubjectTag, byte Original_SurveySource, short Original_SurveyYear, global::System.Nullable<global::System.DateTime> Original_SurveyDate, global::System.Nullable<double> Original_AgeSelfReportYears, global::System.Nullable<double> Original_AgeCalculateYears, int ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(SubjectTag));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((byte)(SurveySource));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(SurveyYear));
            if ((SurveyDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(SurveyDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((AgeSelfReportYears.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(AgeSelfReportYears.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((AgeCalculateYears.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(AgeCalculateYears.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_SubjectTag));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((byte)(Original_SurveySource));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((short)(Original_SurveyYear));
            if ((Original_SurveyDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_SurveyDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_AgeSelfReportYears.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(Original_AgeSelfReportYears.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_AgeCalculateYears.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(Original_AgeCalculateYears.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int SubjectTag, byte SurveySource, short SurveyYear, global::System.Nullable<global::System.DateTime> SurveyDate, global::System.Nullable<double> AgeSelfReportYears, global::System.Nullable<double> AgeCalculateYears, int Original_ID, int Original_SubjectTag, byte Original_SurveySource, short Original_SurveyYear, global::System.Nullable<global::System.DateTime> Original_SurveyDate, global::System.Nullable<double> Original_AgeSelfReportYears, global::System.Nullable<double> Original_AgeCalculateYears) {
            return this.Update(SubjectTag, SurveySource, SurveyYear, SurveyDate, AgeSelfReportYears, AgeCalculateYears, Original_ID, Original_SubjectTag, Original_SurveySource, Original_SurveyYear, Original_SurveyDate, Original_AgeSelfReportYears, Original_AgeCalculateYears, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblBabyDaddyTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tblBabyDaddyTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblBabyDaddy";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("SubjectTag", "SubjectTag");
            tableMapping.ColumnMappings.Add("ChildLoopIndex", "ChildLoopIndex");
            tableMapping.ColumnMappings.Add("SurveyYear", "SurveyYear");
            tableMapping.ColumnMappings.Add("BiodadInHH", "BiodadInHH");
            tableMapping.ColumnMappings.Add("BiodadAlive", "BiodadAlive");
            tableMapping.ColumnMappings.Add("BiodadEverLiveInHH", "BiodadEverLiveInHH");
            tableMapping.ColumnMappings.Add("BiodadLeftHHDate", "BiodadLeftHHDate");
            tableMapping.ColumnMappings.Add("BiodadDeathDate", "BiodadDeathDate");
            tableMapping.ColumnMappings.Add("BiodadDistanceFromHH", "BiodadDistanceFromHH");
            tableMapping.ColumnMappings.Add("BiodadAsthma", "BiodadAsthma");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Process].[tblBabyDaddy] WHERE (([ID] = @Original_ID) AND ([SubjectTag] = @Original_SubjectTag) AND ([ChildLoopIndex] = @Original_ChildLoopIndex) AND ([SurveyYear] = @Original_SurveyYear) AND ([BiodadInHH] = @Original_BiodadInHH) AND ([BiodadAlive] = @Original_BiodadAlive) AND ([BiodadEverLiveInHH] = @Original_BiodadEverLiveInHH) AND ((@IsNull_BiodadLeftHHDate = 1 AND [BiodadLeftHHDate] IS NULL) OR ([BiodadLeftHHDate] = @Original_BiodadLeftHHDate)) AND ((@IsNull_BiodadDeathDate = 1 AND [BiodadDeathDate] IS NULL) OR ([BiodadDeathDate] = @Original_BiodadDeathDate)) AND ((@IsNull_BiodadDistanceFromHH = 1 AND [BiodadDistanceFromHH] IS NULL) OR ([BiodadDistanceFromHH] = @Original_BiodadDistanceFromHH)) AND ([BiodadAsthma] = @Original_BiodadAsthma))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChildLoopIndex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChildLoopIndex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadInHH", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadInHH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadAlive", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadAlive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadEverLiveInHH", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadEverLiveInHH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiodadLeftHHDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadLeftHHDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadLeftHHDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadLeftHHDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiodadDeathDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDeathDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadDeathDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDeathDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiodadDistanceFromHH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDistanceFromHH", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadDistanceFromHH", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDistanceFromHH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadAsthma", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadAsthma", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Process].[tblBabyDaddy] ([SubjectTag], [ChildLoopIndex], [SurveyYear], [BiodadInHH], [BiodadAlive], [BiodadEverLiveInHH], [BiodadLeftHHDate], [BiodadDeathDate], [BiodadDistanceFromHH], [BiodadAsthma]) VALUES (@SubjectTag, @ChildLoopIndex, @SurveyYear, @BiodadInHH, @BiodadAlive, @BiodadEverLiveInHH, @BiodadLeftHHDate, @BiodadDeathDate, @BiodadDistanceFromHH, @BiodadAsthma);
SELECT ID, SubjectTag, ChildLoopIndex, SurveyYear, BiodadInHH, BiodadAlive, BiodadEverLiveInHH, BiodadLeftHHDate, BiodadDeathDate, BiodadDistanceFromHH, BiodadAsthma FROM Process.tblBabyDaddy WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChildLoopIndex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChildLoopIndex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadInHH", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadInHH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadAlive", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadAlive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadEverLiveInHH", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadEverLiveInHH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadLeftHHDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadLeftHHDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadDeathDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDeathDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadDistanceFromHH", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDistanceFromHH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadAsthma", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadAsthma", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Process].[tblBabyDaddy] SET [SubjectTag] = @SubjectTag, [ChildLoopIndex] = @ChildLoopIndex, [SurveyYear] = @SurveyYear, [BiodadInHH] = @BiodadInHH, [BiodadAlive] = @BiodadAlive, [BiodadEverLiveInHH] = @BiodadEverLiveInHH, [BiodadLeftHHDate] = @BiodadLeftHHDate, [BiodadDeathDate] = @BiodadDeathDate, [BiodadDistanceFromHH] = @BiodadDistanceFromHH, [BiodadAsthma] = @BiodadAsthma WHERE (([ID] = @Original_ID) AND ([SubjectTag] = @Original_SubjectTag) AND ([ChildLoopIndex] = @Original_ChildLoopIndex) AND ([SurveyYear] = @Original_SurveyYear) AND ([BiodadInHH] = @Original_BiodadInHH) AND ([BiodadAlive] = @Original_BiodadAlive) AND ([BiodadEverLiveInHH] = @Original_BiodadEverLiveInHH) AND ((@IsNull_BiodadLeftHHDate = 1 AND [BiodadLeftHHDate] IS NULL) OR ([BiodadLeftHHDate] = @Original_BiodadLeftHHDate)) AND ((@IsNull_BiodadDeathDate = 1 AND [BiodadDeathDate] IS NULL) OR ([BiodadDeathDate] = @Original_BiodadDeathDate)) AND ((@IsNull_BiodadDistanceFromHH = 1 AND [BiodadDistanceFromHH] IS NULL) OR ([BiodadDistanceFromHH] = @Original_BiodadDistanceFromHH)) AND ([BiodadAsthma] = @Original_BiodadAsthma));
SELECT ID, SubjectTag, ChildLoopIndex, SurveyYear, BiodadInHH, BiodadAlive, BiodadEverLiveInHH, BiodadLeftHHDate, BiodadDeathDate, BiodadDistanceFromHH, BiodadAsthma FROM Process.tblBabyDaddy WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChildLoopIndex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChildLoopIndex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadInHH", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadInHH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadAlive", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadAlive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadEverLiveInHH", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadEverLiveInHH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadLeftHHDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadLeftHHDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadDeathDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDeathDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadDistanceFromHH", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDistanceFromHH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadAsthma", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadAsthma", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ChildLoopIndex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChildLoopIndex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadInHH", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadInHH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadAlive", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadAlive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadEverLiveInHH", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadEverLiveInHH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiodadLeftHHDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadLeftHHDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadLeftHHDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadLeftHHDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiodadDeathDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDeathDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadDeathDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDeathDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiodadDistanceFromHH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDistanceFromHH", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadDistanceFromHH", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDistanceFromHH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadAsthma", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadAsthma", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Nls.Base79.Properties.Settings.Default.Nlsy79ConnectionStringBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, SubjectTag, ChildLoopIndex, SurveyYear, BiodadInHH, BiodadAlive, Bioda" +
                "dEverLiveInHH, BiodadLeftHHDate, BiodadDeathDate, BiodadDistanceFromHH, BiodadAs" +
                "thma FROM Process.tblBabyDaddy";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LinksDataSet.tblBabyDaddyDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LinksDataSet.tblBabyDaddyDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LinksDataSet.tblBabyDaddyDataTable dataTable = new LinksDataSet.tblBabyDaddyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet.tblBabyDaddyDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblBabyDaddy");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_ID, int Original_SubjectTag, byte Original_ChildLoopIndex, short Original_SurveyYear, short Original_BiodadInHH, short Original_BiodadAlive, short Original_BiodadEverLiveInHH, global::System.Nullable<global::System.DateTime> Original_BiodadLeftHHDate, global::System.Nullable<global::System.DateTime> Original_BiodadDeathDate, global::System.Nullable<short> Original_BiodadDistanceFromHH, short Original_BiodadAsthma) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_SubjectTag));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((byte)(Original_ChildLoopIndex));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((short)(Original_SurveyYear));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((short)(Original_BiodadInHH));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((short)(Original_BiodadAlive));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((short)(Original_BiodadEverLiveInHH));
            if ((Original_BiodadLeftHHDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_BiodadLeftHHDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_BiodadDeathDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_BiodadDeathDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_BiodadDistanceFromHH.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((short)(Original_BiodadDistanceFromHH.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((short)(Original_BiodadAsthma));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int SubjectTag, byte ChildLoopIndex, short SurveyYear, short BiodadInHH, short BiodadAlive, short BiodadEverLiveInHH, global::System.Nullable<global::System.DateTime> BiodadLeftHHDate, global::System.Nullable<global::System.DateTime> BiodadDeathDate, global::System.Nullable<short> BiodadDistanceFromHH, short BiodadAsthma) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(SubjectTag));
            this.Adapter.InsertCommand.Parameters[1].Value = ((byte)(ChildLoopIndex));
            this.Adapter.InsertCommand.Parameters[2].Value = ((short)(SurveyYear));
            this.Adapter.InsertCommand.Parameters[3].Value = ((short)(BiodadInHH));
            this.Adapter.InsertCommand.Parameters[4].Value = ((short)(BiodadAlive));
            this.Adapter.InsertCommand.Parameters[5].Value = ((short)(BiodadEverLiveInHH));
            if ((BiodadLeftHHDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(BiodadLeftHHDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((BiodadDeathDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(BiodadDeathDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((BiodadDistanceFromHH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((short)(BiodadDistanceFromHH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((short)(BiodadAsthma));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int SubjectTag, 
                    byte ChildLoopIndex, 
                    short SurveyYear, 
                    short BiodadInHH, 
                    short BiodadAlive, 
                    short BiodadEverLiveInHH, 
                    global::System.Nullable<global::System.DateTime> BiodadLeftHHDate, 
                    global::System.Nullable<global::System.DateTime> BiodadDeathDate, 
                    global::System.Nullable<short> BiodadDistanceFromHH, 
                    short BiodadAsthma, 
                    long Original_ID, 
                    int Original_SubjectTag, 
                    byte Original_ChildLoopIndex, 
                    short Original_SurveyYear, 
                    short Original_BiodadInHH, 
                    short Original_BiodadAlive, 
                    short Original_BiodadEverLiveInHH, 
                    global::System.Nullable<global::System.DateTime> Original_BiodadLeftHHDate, 
                    global::System.Nullable<global::System.DateTime> Original_BiodadDeathDate, 
                    global::System.Nullable<short> Original_BiodadDistanceFromHH, 
                    short Original_BiodadAsthma, 
                    long ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(SubjectTag));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((byte)(ChildLoopIndex));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(SurveyYear));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(BiodadInHH));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((short)(BiodadAlive));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((short)(BiodadEverLiveInHH));
            if ((BiodadLeftHHDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(BiodadLeftHHDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((BiodadDeathDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(BiodadDeathDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((BiodadDistanceFromHH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((short)(BiodadDistanceFromHH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((short)(BiodadAsthma));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_SubjectTag));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((byte)(Original_ChildLoopIndex));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((short)(Original_SurveyYear));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((short)(Original_BiodadInHH));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((short)(Original_BiodadAlive));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((short)(Original_BiodadEverLiveInHH));
            if ((Original_BiodadLeftHHDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_BiodadLeftHHDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_BiodadDeathDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_BiodadDeathDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_BiodadDistanceFromHH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((short)(Original_BiodadDistanceFromHH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((short)(Original_BiodadAsthma));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((long)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int SubjectTag, 
                    byte ChildLoopIndex, 
                    short SurveyYear, 
                    short BiodadInHH, 
                    short BiodadAlive, 
                    short BiodadEverLiveInHH, 
                    global::System.Nullable<global::System.DateTime> BiodadLeftHHDate, 
                    global::System.Nullable<global::System.DateTime> BiodadDeathDate, 
                    global::System.Nullable<short> BiodadDistanceFromHH, 
                    short BiodadAsthma, 
                    long Original_ID, 
                    int Original_SubjectTag, 
                    byte Original_ChildLoopIndex, 
                    short Original_SurveyYear, 
                    short Original_BiodadInHH, 
                    short Original_BiodadAlive, 
                    short Original_BiodadEverLiveInHH, 
                    global::System.Nullable<global::System.DateTime> Original_BiodadLeftHHDate, 
                    global::System.Nullable<global::System.DateTime> Original_BiodadDeathDate, 
                    global::System.Nullable<short> Original_BiodadDistanceFromHH, 
                    short Original_BiodadAsthma) {
            return this.Update(SubjectTag, ChildLoopIndex, SurveyYear, BiodadInHH, BiodadAlive, BiodadEverLiveInHH, BiodadLeftHHDate, BiodadDeathDate, BiodadDistanceFromHH, BiodadAsthma, Original_ID, Original_SubjectTag, Original_ChildLoopIndex, Original_SurveyYear, Original_BiodadInHH, Original_BiodadAlive, Original_BiodadEverLiveInHH, Original_BiodadLeftHHDate, Original_BiodadDeathDate, Original_BiodadDistanceFromHH, Original_BiodadAsthma, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class vewSurveyTimeMostRecentTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public vewSurveyTimeMostRecentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "vewSurveyTimeMostRecent";
            tableMapping.ColumnMappings.Add("SubjectTag", "SubjectTag");
            tableMapping.ColumnMappings.Add("SurveyYearMostRecent", "SurveyYearMostRecent");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Nls.Base79.Properties.Settings.Default.Nlsy79ConnectionStringBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SubjectTag, SurveyYearMostRecent FROM Process.vewSurveyTimeMostRecent";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LinksDataSet.vewSurveyTimeMostRecentDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LinksDataSet.vewSurveyTimeMostRecentDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LinksDataSet.vewSurveyTimeMostRecentDataTable dataTable = new LinksDataSet.vewSurveyTimeMostRecentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblFatherOfGen2TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tblFatherOfGen2TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblFatherOfGen2";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("SubjectTag", "SubjectTag");
            tableMapping.ColumnMappings.Add("SurveyYear", "SurveyYear");
            tableMapping.ColumnMappings.Add("BiodadInHH", "BiodadInHH");
            tableMapping.ColumnMappings.Add("BiodadAlive", "BiodadAlive");
            tableMapping.ColumnMappings.Add("BiodadDistanceFromHH", "BiodadDistanceFromHH");
            tableMapping.ColumnMappings.Add("BiodadAsthma", "BiodadAsthma");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Process].[tblFatherOfGen2] WHERE (([ID] = @Original_ID) AND ([SubjectTag] = @Original_SubjectTag) AND ([SurveyYear] = @Original_SurveyYear) AND ([BiodadInHH] = @Original_BiodadInHH) AND ([BiodadAlive] = @Original_BiodadAlive) AND ((@IsNull_BiodadDistanceFromHH = 1 AND [BiodadDistanceFromHH] IS NULL) OR ([BiodadDistanceFromHH] = @Original_BiodadDistanceFromHH)) AND ([BiodadAsthma] = @Original_BiodadAsthma))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadInHH", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadInHH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadAlive", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadAlive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiodadDistanceFromHH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDistanceFromHH", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadDistanceFromHH", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDistanceFromHH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadAsthma", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadAsthma", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Process].[tblFatherOfGen2] ([SubjectTag], [SurveyYear], [BiodadInHH], [BiodadAlive], [BiodadDistanceFromHH], [BiodadAsthma]) VALUES (@SubjectTag, @SurveyYear, @BiodadInHH, @BiodadAlive, @BiodadDistanceFromHH, @BiodadAsthma);
SELECT ID, SubjectTag, SurveyYear, BiodadInHH, BiodadAlive, BiodadDistanceFromHH, BiodadAsthma FROM Process.tblFatherOfGen2 WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadInHH", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadInHH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadAlive", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadAlive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadDistanceFromHH", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDistanceFromHH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadAsthma", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadAsthma", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Process].[tblFatherOfGen2] SET [SubjectTag] = @SubjectTag, [SurveyYear] = @SurveyYear, [BiodadInHH] = @BiodadInHH, [BiodadAlive] = @BiodadAlive, [BiodadDistanceFromHH] = @BiodadDistanceFromHH, [BiodadAsthma] = @BiodadAsthma WHERE (([ID] = @Original_ID) AND ([SubjectTag] = @Original_SubjectTag) AND ([SurveyYear] = @Original_SurveyYear) AND ([BiodadInHH] = @Original_BiodadInHH) AND ([BiodadAlive] = @Original_BiodadAlive) AND ((@IsNull_BiodadDistanceFromHH = 1 AND [BiodadDistanceFromHH] IS NULL) OR ([BiodadDistanceFromHH] = @Original_BiodadDistanceFromHH)) AND ([BiodadAsthma] = @Original_BiodadAsthma));
SELECT ID, SubjectTag, SurveyYear, BiodadInHH, BiodadAlive, BiodadDistanceFromHH, BiodadAsthma FROM Process.tblFatherOfGen2 WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadInHH", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadInHH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadAlive", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadAlive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadDistanceFromHH", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDistanceFromHH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadAsthma", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadAsthma", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadInHH", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadInHH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadAlive", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadAlive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiodadDistanceFromHH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDistanceFromHH", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadDistanceFromHH", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDistanceFromHH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadAsthma", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadAsthma", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Nls.Base79.Properties.Settings.Default.Nlsy79ConnectionStringBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, SubjectTag, SurveyYear, BiodadInHH, BiodadAlive, BiodadDistanceFromHH," +
                " BiodadAsthma FROM Process.tblFatherOfGen2";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LinksDataSet.tblFatherOfGen2DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LinksDataSet.tblFatherOfGen2DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LinksDataSet.tblFatherOfGen2DataTable dataTable = new LinksDataSet.tblFatherOfGen2DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet.tblFatherOfGen2DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblFatherOfGen2");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_ID, int Original_SubjectTag, short Original_SurveyYear, short Original_BiodadInHH, short Original_BiodadAlive, global::System.Nullable<short> Original_BiodadDistanceFromHH, short Original_BiodadAsthma) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_SubjectTag));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((short)(Original_SurveyYear));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((short)(Original_BiodadInHH));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((short)(Original_BiodadAlive));
            if ((Original_BiodadDistanceFromHH.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((short)(Original_BiodadDistanceFromHH.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((short)(Original_BiodadAsthma));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int SubjectTag, short SurveyYear, short BiodadInHH, short BiodadAlive, global::System.Nullable<short> BiodadDistanceFromHH, short BiodadAsthma) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(SubjectTag));
            this.Adapter.InsertCommand.Parameters[1].Value = ((short)(SurveyYear));
            this.Adapter.InsertCommand.Parameters[2].Value = ((short)(BiodadInHH));
            this.Adapter.InsertCommand.Parameters[3].Value = ((short)(BiodadAlive));
            if ((BiodadDistanceFromHH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((short)(BiodadDistanceFromHH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((short)(BiodadAsthma));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int SubjectTag, short SurveyYear, short BiodadInHH, short BiodadAlive, global::System.Nullable<short> BiodadDistanceFromHH, short BiodadAsthma, long Original_ID, int Original_SubjectTag, short Original_SurveyYear, short Original_BiodadInHH, short Original_BiodadAlive, global::System.Nullable<short> Original_BiodadDistanceFromHH, short Original_BiodadAsthma, long ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(SubjectTag));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(SurveyYear));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(BiodadInHH));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(BiodadAlive));
            if ((BiodadDistanceFromHH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((short)(BiodadDistanceFromHH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((short)(BiodadAsthma));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_SubjectTag));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((short)(Original_SurveyYear));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((short)(Original_BiodadInHH));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((short)(Original_BiodadAlive));
            if ((Original_BiodadDistanceFromHH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((short)(Original_BiodadDistanceFromHH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((short)(Original_BiodadAsthma));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((long)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int SubjectTag, short SurveyYear, short BiodadInHH, short BiodadAlive, global::System.Nullable<short> BiodadDistanceFromHH, short BiodadAsthma, long Original_ID, int Original_SubjectTag, short Original_SurveyYear, short Original_BiodadInHH, short Original_BiodadAlive, global::System.Nullable<short> Original_BiodadDistanceFromHH, short Original_BiodadAsthma) {
            return this.Update(SubjectTag, SurveyYear, BiodadInHH, BiodadAlive, BiodadDistanceFromHH, BiodadAsthma, Original_ID, Original_SubjectTag, Original_SurveyYear, Original_BiodadInHH, Original_BiodadAlive, Original_BiodadDistanceFromHH, Original_BiodadAsthma, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblRosterGen1TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tblRosterGen1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblRosterGen1";
            tableMapping.ColumnMappings.Add("RelatedID", "RelatedID");
            tableMapping.ColumnMappings.Add("RosterAssignmentID", "RosterAssignmentID");
            tableMapping.ColumnMappings.Add("ResponseLower", "ResponseLower");
            tableMapping.ColumnMappings.Add("ResponseUpper", "ResponseUpper");
            tableMapping.ColumnMappings.Add("Resolved", "Resolved");
            tableMapping.ColumnMappings.Add("R", "R");
            tableMapping.ColumnMappings.Add("RBoundLower", "RBoundLower");
            tableMapping.ColumnMappings.Add("RBoundUpper", "RBoundUpper");
            tableMapping.ColumnMappings.Add("SameGeneration", "SameGeneration");
            tableMapping.ColumnMappings.Add("ShareBiodad", "ShareBiodad");
            tableMapping.ColumnMappings.Add("ShareBiomom", "ShareBiomom");
            tableMapping.ColumnMappings.Add("ShareBiograndparent", "ShareBiograndparent");
            tableMapping.ColumnMappings.Add("Inconsistent", "Inconsistent");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Process].[tblRosterGen1] WHERE (([RelatedID] = @Original_RelatedID) AND ([RosterAssignmentID] = @Original_RosterAssignmentID) AND ([ResponseLower] = @Original_ResponseLower) AND ([ResponseUpper] = @Original_ResponseUpper) AND ([Resolved] = @Original_Resolved) AND ((@IsNull_R = 1 AND [R] IS NULL) OR ([R] = @Original_R)) AND ([RBoundLower] = @Original_RBoundLower) AND ([RBoundUpper] = @Original_RBoundUpper) AND ([SameGeneration] = @Original_SameGeneration) AND ([ShareBiodad] = @Original_ShareBiodad) AND ([ShareBiomom] = @Original_ShareBiomom) AND ([ShareBiograndparent] = @Original_ShareBiograndparent) AND ([Inconsistent] = @Original_Inconsistent))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RelatedID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RelatedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RosterAssignmentID", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RosterAssignmentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ResponseLower", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseLower", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ResponseUpper", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseUpper", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Resolved", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Resolved", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_R", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_R", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RBoundLower", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RBoundLower", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RBoundUpper", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RBoundUpper", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SameGeneration", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SameGeneration", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBiodad", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiodad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBiomom", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiomom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBiograndparent", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiograndparent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inconsistent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inconsistent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Process].[tblRosterGen1] ([RelatedID], [RosterAssignmentID], [ResponseLower], [ResponseUpper], [Resolved], [R], [RBoundLower], [RBoundUpper], [SameGeneration], [ShareBiodad], [ShareBiomom], [ShareBiograndparent], [Inconsistent]) VALUES (@RelatedID, @RosterAssignmentID, @ResponseLower, @ResponseUpper, @Resolved, @R, @RBoundLower, @RBoundUpper, @SameGeneration, @ShareBiodad, @ShareBiomom, @ShareBiograndparent, @Inconsistent);
SELECT RelatedID, RosterAssignmentID, ResponseLower, ResponseUpper, Resolved, R, RBoundLower, RBoundUpper, SameGeneration, ShareBiodad, ShareBiomom, ShareBiograndparent, Inconsistent FROM Process.tblRosterGen1 WHERE (RelatedID = @RelatedID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RelatedID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RelatedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RosterAssignmentID", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RosterAssignmentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResponseLower", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseLower", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResponseUpper", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseUpper", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Resolved", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Resolved", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@R", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RBoundLower", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RBoundLower", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RBoundUpper", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RBoundUpper", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SameGeneration", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SameGeneration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBiodad", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiodad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBiomom", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiomom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBiograndparent", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiograndparent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inconsistent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inconsistent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Process].[tblRosterGen1] SET [RelatedID] = @RelatedID, [RosterAssignmentID] = @RosterAssignmentID, [ResponseLower] = @ResponseLower, [ResponseUpper] = @ResponseUpper, [Resolved] = @Resolved, [R] = @R, [RBoundLower] = @RBoundLower, [RBoundUpper] = @RBoundUpper, [SameGeneration] = @SameGeneration, [ShareBiodad] = @ShareBiodad, [ShareBiomom] = @ShareBiomom, [ShareBiograndparent] = @ShareBiograndparent, [Inconsistent] = @Inconsistent WHERE (([RelatedID] = @Original_RelatedID) AND ([RosterAssignmentID] = @Original_RosterAssignmentID) AND ([ResponseLower] = @Original_ResponseLower) AND ([ResponseUpper] = @Original_ResponseUpper) AND ([Resolved] = @Original_Resolved) AND ((@IsNull_R = 1 AND [R] IS NULL) OR ([R] = @Original_R)) AND ([RBoundLower] = @Original_RBoundLower) AND ([RBoundUpper] = @Original_RBoundUpper) AND ([SameGeneration] = @Original_SameGeneration) AND ([ShareBiodad] = @Original_ShareBiodad) AND ([ShareBiomom] = @Original_ShareBiomom) AND ([ShareBiograndparent] = @Original_ShareBiograndparent) AND ([Inconsistent] = @Original_Inconsistent));
SELECT RelatedID, RosterAssignmentID, ResponseLower, ResponseUpper, Resolved, R, RBoundLower, RBoundUpper, SameGeneration, ShareBiodad, ShareBiomom, ShareBiograndparent, Inconsistent FROM Process.tblRosterGen1 WHERE (RelatedID = @RelatedID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RelatedID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RelatedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RosterAssignmentID", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RosterAssignmentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResponseLower", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseLower", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResponseUpper", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseUpper", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Resolved", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Resolved", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@R", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RBoundLower", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RBoundLower", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RBoundUpper", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RBoundUpper", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SameGeneration", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SameGeneration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBiodad", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiodad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBiomom", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiomom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBiograndparent", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiograndparent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inconsistent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inconsistent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RelatedID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RelatedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RosterAssignmentID", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RosterAssignmentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ResponseLower", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseLower", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ResponseUpper", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseUpper", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Resolved", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Resolved", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_R", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_R", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RBoundLower", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RBoundLower", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RBoundUpper", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RBoundUpper", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SameGeneration", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SameGeneration", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBiodad", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiodad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBiomom", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiomom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBiograndparent", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiograndparent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inconsistent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inconsistent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Nls.Base79.Properties.Settings.Default.Nlsy79ConnectionStringBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT RelatedID, RosterAssignmentID, ResponseLower, ResponseUpper, Resolved, R, " +
                "RBoundLower, RBoundUpper, SameGeneration, ShareBiodad, ShareBiomom, ShareBiogran" +
                "dparent, Inconsistent FROM Process.tblRosterGen1";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LinksDataSet.tblRosterGen1DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LinksDataSet.tblRosterGen1DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LinksDataSet.tblRosterGen1DataTable dataTable = new LinksDataSet.tblRosterGen1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet.tblRosterGen1DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblRosterGen1");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_RelatedID, byte Original_RosterAssignmentID, short Original_ResponseLower, short Original_ResponseUpper, bool Original_Resolved, global::System.Nullable<double> Original_R, double Original_RBoundLower, double Original_RBoundUpper, byte Original_SameGeneration, byte Original_ShareBiodad, byte Original_ShareBiomom, byte Original_ShareBiograndparent, bool Original_Inconsistent) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_RelatedID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((byte)(Original_RosterAssignmentID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((short)(Original_ResponseLower));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((short)(Original_ResponseUpper));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_Resolved));
            if ((Original_R.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_R.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_RBoundLower));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_RBoundUpper));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((byte)(Original_SameGeneration));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((byte)(Original_ShareBiodad));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((byte)(Original_ShareBiomom));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((byte)(Original_ShareBiograndparent));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((bool)(Original_Inconsistent));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int RelatedID, byte RosterAssignmentID, short ResponseLower, short ResponseUpper, bool Resolved, global::System.Nullable<double> R, double RBoundLower, double RBoundUpper, byte SameGeneration, byte ShareBiodad, byte ShareBiomom, byte ShareBiograndparent, bool Inconsistent) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(RelatedID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((byte)(RosterAssignmentID));
            this.Adapter.InsertCommand.Parameters[2].Value = ((short)(ResponseLower));
            this.Adapter.InsertCommand.Parameters[3].Value = ((short)(ResponseUpper));
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(Resolved));
            if ((R.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(R.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((double)(RBoundLower));
            this.Adapter.InsertCommand.Parameters[7].Value = ((double)(RBoundUpper));
            this.Adapter.InsertCommand.Parameters[8].Value = ((byte)(SameGeneration));
            this.Adapter.InsertCommand.Parameters[9].Value = ((byte)(ShareBiodad));
            this.Adapter.InsertCommand.Parameters[10].Value = ((byte)(ShareBiomom));
            this.Adapter.InsertCommand.Parameters[11].Value = ((byte)(ShareBiograndparent));
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(Inconsistent));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int RelatedID, 
                    byte RosterAssignmentID, 
                    short ResponseLower, 
                    short ResponseUpper, 
                    bool Resolved, 
                    global::System.Nullable<double> R, 
                    double RBoundLower, 
                    double RBoundUpper, 
                    byte SameGeneration, 
                    byte ShareBiodad, 
                    byte ShareBiomom, 
                    byte ShareBiograndparent, 
                    bool Inconsistent, 
                    int Original_RelatedID, 
                    byte Original_RosterAssignmentID, 
                    short Original_ResponseLower, 
                    short Original_ResponseUpper, 
                    bool Original_Resolved, 
                    global::System.Nullable<double> Original_R, 
                    double Original_RBoundLower, 
                    double Original_RBoundUpper, 
                    byte Original_SameGeneration, 
                    byte Original_ShareBiodad, 
                    byte Original_ShareBiomom, 
                    byte Original_ShareBiograndparent, 
                    bool Original_Inconsistent) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(RelatedID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((byte)(RosterAssignmentID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(ResponseLower));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(ResponseUpper));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(Resolved));
            if ((R.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(R.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(RBoundLower));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(RBoundUpper));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((byte)(SameGeneration));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((byte)(ShareBiodad));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((byte)(ShareBiomom));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((byte)(ShareBiograndparent));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(Inconsistent));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_RelatedID));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((byte)(Original_RosterAssignmentID));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((short)(Original_ResponseLower));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((short)(Original_ResponseUpper));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(Original_Resolved));
            if ((Original_R.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(Original_R.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(Original_RBoundLower));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(Original_RBoundUpper));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((byte)(Original_SameGeneration));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((byte)(Original_ShareBiodad));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((byte)(Original_ShareBiomom));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((byte)(Original_ShareBiograndparent));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(Original_Inconsistent));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    byte RosterAssignmentID, 
                    short ResponseLower, 
                    short ResponseUpper, 
                    bool Resolved, 
                    global::System.Nullable<double> R, 
                    double RBoundLower, 
                    double RBoundUpper, 
                    byte SameGeneration, 
                    byte ShareBiodad, 
                    byte ShareBiomom, 
                    byte ShareBiograndparent, 
                    bool Inconsistent, 
                    int Original_RelatedID, 
                    byte Original_RosterAssignmentID, 
                    short Original_ResponseLower, 
                    short Original_ResponseUpper, 
                    bool Original_Resolved, 
                    global::System.Nullable<double> Original_R, 
                    double Original_RBoundLower, 
                    double Original_RBoundUpper, 
                    byte Original_SameGeneration, 
                    byte Original_ShareBiodad, 
                    byte Original_ShareBiomom, 
                    byte Original_ShareBiograndparent, 
                    bool Original_Inconsistent) {
            return this.Update(Original_RelatedID, RosterAssignmentID, ResponseLower, ResponseUpper, Resolved, R, RBoundLower, RBoundUpper, SameGeneration, ShareBiodad, ShareBiomom, ShareBiograndparent, Inconsistent, Original_RelatedID, Original_RosterAssignmentID, Original_ResponseLower, Original_ResponseUpper, Original_Resolved, Original_R, Original_RBoundLower, Original_RBoundUpper, Original_SameGeneration, Original_ShareBiodad, Original_ShareBiomom, Original_ShareBiograndparent, Original_Inconsistent);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblResponseTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tblResponseTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblResponse";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("SubjectTag", "SubjectTag");
            tableMapping.ColumnMappings.Add("ExtendedID", "ExtendedID");
            tableMapping.ColumnMappings.Add("Generation", "Generation");
            tableMapping.ColumnMappings.Add("SurveySource", "SurveySource");
            tableMapping.ColumnMappings.Add("SurveyYear", "SurveyYear");
            tableMapping.ColumnMappings.Add("Item", "Item");
            tableMapping.ColumnMappings.Add("Value", "Value");
            tableMapping.ColumnMappings.Add("LoopIndex", "LoopIndex");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Process].[tblResponse] WHERE (([ID] = @Original_ID) AND ([SubjectTag] = @Original_SubjectTag) AND ([ExtendedID] = @Original_ExtendedID) AND ([Generation] = @Original_Generation) AND ([SurveySource] = @Original_SurveySource) AND ([SurveyYear] = @Original_SurveyYear) AND ([Item] = @Original_Item) AND ([Value] = @Original_Value) AND ([LoopIndex] = @Original_LoopIndex))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Generation", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Generation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveySource", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveySource", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Item", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Value", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Value", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LoopIndex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoopIndex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Process].[tblResponse] ([SubjectTag], [ExtendedID], [Generation], [SurveySource], [SurveyYear], [Item], [Value], [LoopIndex]) VALUES (@SubjectTag, @ExtendedID, @Generation, @SurveySource, @SurveyYear, @Item, @Value, @LoopIndex);
SELECT ID, SubjectTag, ExtendedID, Generation, SurveySource, SurveyYear, Item, Value, LoopIndex FROM Process.tblResponse WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Generation", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Generation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveySource", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveySource", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Value", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Value", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoopIndex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoopIndex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Process].[tblResponse] SET [SubjectTag] = @SubjectTag, [ExtendedID] = @ExtendedID, [Generation] = @Generation, [SurveySource] = @SurveySource, [SurveyYear] = @SurveyYear, [Item] = @Item, [Value] = @Value, [LoopIndex] = @LoopIndex WHERE (([ID] = @Original_ID) AND ([SubjectTag] = @Original_SubjectTag) AND ([ExtendedID] = @Original_ExtendedID) AND ([Generation] = @Original_Generation) AND ([SurveySource] = @Original_SurveySource) AND ([SurveyYear] = @Original_SurveyYear) AND ([Item] = @Original_Item) AND ([Value] = @Original_Value) AND ([LoopIndex] = @Original_LoopIndex));
SELECT ID, SubjectTag, ExtendedID, Generation, SurveySource, SurveyYear, Item, Value, LoopIndex FROM Process.tblResponse WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Generation", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Generation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveySource", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveySource", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Value", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Value", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoopIndex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoopIndex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Generation", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Generation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveySource", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveySource", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Item", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Value", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Value", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LoopIndex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoopIndex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Nls.Base79.Properties.Settings.Default.Nlsy79ConnectionStringBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, SubjectTag, ExtendedID, Generation, SurveySource, SurveyYear, Item, Va" +
                "lue, LoopIndex FROM Process.tblResponse";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LinksDataSet.tblResponseDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LinksDataSet.tblResponseDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LinksDataSet.tblResponseDataTable dataTable = new LinksDataSet.tblResponseDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet.tblResponseDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblResponse");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, int Original_SubjectTag, short Original_ExtendedID, byte Original_Generation, byte Original_SurveySource, short Original_SurveyYear, short Original_Item, int Original_Value, byte Original_LoopIndex) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_SubjectTag));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((short)(Original_ExtendedID));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((byte)(Original_Generation));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((byte)(Original_SurveySource));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((short)(Original_SurveyYear));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((short)(Original_Item));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_Value));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((byte)(Original_LoopIndex));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int SubjectTag, short ExtendedID, byte Generation, byte SurveySource, short SurveyYear, short Item, int Value, byte LoopIndex) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(SubjectTag));
            this.Adapter.InsertCommand.Parameters[1].Value = ((short)(ExtendedID));
            this.Adapter.InsertCommand.Parameters[2].Value = ((byte)(Generation));
            this.Adapter.InsertCommand.Parameters[3].Value = ((byte)(SurveySource));
            this.Adapter.InsertCommand.Parameters[4].Value = ((short)(SurveyYear));
            this.Adapter.InsertCommand.Parameters[5].Value = ((short)(Item));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(Value));
            this.Adapter.InsertCommand.Parameters[7].Value = ((byte)(LoopIndex));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int SubjectTag, 
                    short ExtendedID, 
                    byte Generation, 
                    byte SurveySource, 
                    short SurveyYear, 
                    short Item, 
                    int Value, 
                    byte LoopIndex, 
                    int Original_ID, 
                    int Original_SubjectTag, 
                    short Original_ExtendedID, 
                    byte Original_Generation, 
                    byte Original_SurveySource, 
                    short Original_SurveyYear, 
                    short Original_Item, 
                    int Original_Value, 
                    byte Original_LoopIndex, 
                    int ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(SubjectTag));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(ExtendedID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((byte)(Generation));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((byte)(SurveySource));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((short)(SurveyYear));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((short)(Item));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Value));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((byte)(LoopIndex));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_SubjectTag));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((short)(Original_ExtendedID));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((byte)(Original_Generation));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((byte)(Original_SurveySource));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((short)(Original_SurveyYear));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((short)(Original_Item));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_Value));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((byte)(Original_LoopIndex));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int SubjectTag, 
                    short ExtendedID, 
                    byte Generation, 
                    byte SurveySource, 
                    short SurveyYear, 
                    short Item, 
                    int Value, 
                    byte LoopIndex, 
                    int Original_ID, 
                    int Original_SubjectTag, 
                    short Original_ExtendedID, 
                    byte Original_Generation, 
                    byte Original_SurveySource, 
                    short Original_SurveyYear, 
                    short Original_Item, 
                    int Original_Value, 
                    byte Original_LoopIndex) {
            return this.Update(SubjectTag, ExtendedID, Generation, SurveySource, SurveyYear, Item, Value, LoopIndex, Original_ID, Original_SubjectTag, Original_ExtendedID, Original_Generation, Original_SurveySource, Original_SurveyYear, Original_Item, Original_Value, Original_LoopIndex, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblMarkerGen1TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tblMarkerGen1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblMarkerGen1";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("ExtendedID", "ExtendedID");
            tableMapping.ColumnMappings.Add("RelatedID", "RelatedID");
            tableMapping.ColumnMappings.Add("MarkerType", "MarkerType");
            tableMapping.ColumnMappings.Add("SurveyYear", "SurveyYear");
            tableMapping.ColumnMappings.Add("MzEvidence", "MzEvidence");
            tableMapping.ColumnMappings.Add("SameGeneration", "SameGeneration");
            tableMapping.ColumnMappings.Add("ShareBiomomEvidence", "ShareBiomomEvidence");
            tableMapping.ColumnMappings.Add("ShareBiodadEvidence", "ShareBiodadEvidence");
            tableMapping.ColumnMappings.Add("ShareBioGrandparentEvidence", "ShareBioGrandparentEvidence");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Process].[tblMarkerGen1] WHERE (([ID] = @Original_ID) AND ([ExtendedID] = @Original_ExtendedID) AND ([RelatedID] = @Original_RelatedID) AND ([MarkerType] = @Original_MarkerType) AND ([SurveyYear] = @Original_SurveyYear) AND ([MzEvidence] = @Original_MzEvidence) AND ([SameGeneration] = @Original_SameGeneration) AND ([ShareBiomomEvidence] = @Original_ShareBiomomEvidence) AND ([ShareBiodadEvidence] = @Original_ShareBiodadEvidence) AND ([ShareBioGrandparentEvidence] = @Original_ShareBioGrandparentEvidence))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RelatedID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RelatedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MarkerType", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarkerType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MzEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MzEvidence", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SameGeneration", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SameGeneration", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBiomomEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiomomEvidence", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBiodadEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiodadEvidence", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBioGrandparentEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBioGrandparentEvidence", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Process].[tblMarkerGen1] ([ExtendedID], [RelatedID], [MarkerType], [SurveyYear], [MzEvidence], [SameGeneration], [ShareBiomomEvidence], [ShareBiodadEvidence], [ShareBioGrandparentEvidence]) VALUES (@ExtendedID, @RelatedID, @MarkerType, @SurveyYear, @MzEvidence, @SameGeneration, @ShareBiomomEvidence, @ShareBiodadEvidence, @ShareBioGrandparentEvidence);
SELECT ID, ExtendedID, RelatedID, MarkerType, SurveyYear, MzEvidence, SameGeneration, ShareBiomomEvidence, ShareBiodadEvidence, ShareBioGrandparentEvidence FROM Process.tblMarkerGen1 WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RelatedID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RelatedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarkerType", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarkerType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MzEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MzEvidence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SameGeneration", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SameGeneration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBiomomEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiomomEvidence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBiodadEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiodadEvidence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBioGrandparentEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBioGrandparentEvidence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Process].[tblMarkerGen1] SET [ExtendedID] = @ExtendedID, [RelatedID] = @RelatedID, [MarkerType] = @MarkerType, [SurveyYear] = @SurveyYear, [MzEvidence] = @MzEvidence, [SameGeneration] = @SameGeneration, [ShareBiomomEvidence] = @ShareBiomomEvidence, [ShareBiodadEvidence] = @ShareBiodadEvidence, [ShareBioGrandparentEvidence] = @ShareBioGrandparentEvidence WHERE (([ID] = @Original_ID) AND ([ExtendedID] = @Original_ExtendedID) AND ([RelatedID] = @Original_RelatedID) AND ([MarkerType] = @Original_MarkerType) AND ([SurveyYear] = @Original_SurveyYear) AND ([MzEvidence] = @Original_MzEvidence) AND ([SameGeneration] = @Original_SameGeneration) AND ([ShareBiomomEvidence] = @Original_ShareBiomomEvidence) AND ([ShareBiodadEvidence] = @Original_ShareBiodadEvidence) AND ([ShareBioGrandparentEvidence] = @Original_ShareBioGrandparentEvidence));
SELECT ID, ExtendedID, RelatedID, MarkerType, SurveyYear, MzEvidence, SameGeneration, ShareBiomomEvidence, ShareBiodadEvidence, ShareBioGrandparentEvidence FROM Process.tblMarkerGen1 WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RelatedID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RelatedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarkerType", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarkerType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MzEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MzEvidence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SameGeneration", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SameGeneration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBiomomEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiomomEvidence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBiodadEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiodadEvidence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBioGrandparentEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBioGrandparentEvidence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RelatedID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RelatedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MarkerType", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarkerType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MzEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MzEvidence", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SameGeneration", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SameGeneration", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBiomomEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiomomEvidence", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBiodadEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiodadEvidence", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBioGrandparentEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBioGrandparentEvidence", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Nls.Base79.Properties.Settings.Default.Nlsy79ConnectionStringBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, ExtendedID, RelatedID, MarkerType, SurveyYear, MzEvidence, SameGenerat" +
                "ion, ShareBiomomEvidence, ShareBiodadEvidence, ShareBioGrandparentEvidence FROM " +
                "Process.tblMarkerGen1";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LinksDataSet.tblMarkerGen1DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LinksDataSet.tblMarkerGen1DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LinksDataSet.tblMarkerGen1DataTable dataTable = new LinksDataSet.tblMarkerGen1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet.tblMarkerGen1DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblMarkerGen1");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_ID, short Original_ExtendedID, int Original_RelatedID, byte Original_MarkerType, short Original_SurveyYear, byte Original_MzEvidence, byte Original_SameGeneration, byte Original_ShareBiomomEvidence, byte Original_ShareBiodadEvidence, byte Original_ShareBioGrandparentEvidence) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((short)(Original_ExtendedID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_RelatedID));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((byte)(Original_MarkerType));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((short)(Original_SurveyYear));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((byte)(Original_MzEvidence));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((byte)(Original_SameGeneration));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((byte)(Original_ShareBiomomEvidence));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((byte)(Original_ShareBiodadEvidence));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((byte)(Original_ShareBioGrandparentEvidence));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(short ExtendedID, int RelatedID, byte MarkerType, short SurveyYear, byte MzEvidence, byte SameGeneration, byte ShareBiomomEvidence, byte ShareBiodadEvidence, byte ShareBioGrandparentEvidence) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(ExtendedID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(RelatedID));
            this.Adapter.InsertCommand.Parameters[2].Value = ((byte)(MarkerType));
            this.Adapter.InsertCommand.Parameters[3].Value = ((short)(SurveyYear));
            this.Adapter.InsertCommand.Parameters[4].Value = ((byte)(MzEvidence));
            this.Adapter.InsertCommand.Parameters[5].Value = ((byte)(SameGeneration));
            this.Adapter.InsertCommand.Parameters[6].Value = ((byte)(ShareBiomomEvidence));
            this.Adapter.InsertCommand.Parameters[7].Value = ((byte)(ShareBiodadEvidence));
            this.Adapter.InsertCommand.Parameters[8].Value = ((byte)(ShareBioGrandparentEvidence));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    short ExtendedID, 
                    int RelatedID, 
                    byte MarkerType, 
                    short SurveyYear, 
                    byte MzEvidence, 
                    byte SameGeneration, 
                    byte ShareBiomomEvidence, 
                    byte ShareBiodadEvidence, 
                    byte ShareBioGrandparentEvidence, 
                    long Original_ID, 
                    short Original_ExtendedID, 
                    int Original_RelatedID, 
                    byte Original_MarkerType, 
                    short Original_SurveyYear, 
                    byte Original_MzEvidence, 
                    byte Original_SameGeneration, 
                    byte Original_ShareBiomomEvidence, 
                    byte Original_ShareBiodadEvidence, 
                    byte Original_ShareBioGrandparentEvidence, 
                    long ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(ExtendedID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(RelatedID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((byte)(MarkerType));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(SurveyYear));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((byte)(MzEvidence));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((byte)(SameGeneration));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((byte)(ShareBiomomEvidence));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((byte)(ShareBiodadEvidence));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((byte)(ShareBioGrandparentEvidence));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((short)(Original_ExtendedID));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_RelatedID));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((byte)(Original_MarkerType));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((short)(Original_SurveyYear));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((byte)(Original_MzEvidence));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((byte)(Original_SameGeneration));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((byte)(Original_ShareBiomomEvidence));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((byte)(Original_ShareBiodadEvidence));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((byte)(Original_ShareBioGrandparentEvidence));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((long)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    short ExtendedID, 
                    int RelatedID, 
                    byte MarkerType, 
                    short SurveyYear, 
                    byte MzEvidence, 
                    byte SameGeneration, 
                    byte ShareBiomomEvidence, 
                    byte ShareBiodadEvidence, 
                    byte ShareBioGrandparentEvidence, 
                    long Original_ID, 
                    short Original_ExtendedID, 
                    int Original_RelatedID, 
                    byte Original_MarkerType, 
                    short Original_SurveyYear, 
                    byte Original_MzEvidence, 
                    byte Original_SameGeneration, 
                    byte Original_ShareBiomomEvidence, 
                    byte Original_ShareBiodadEvidence, 
                    byte Original_ShareBioGrandparentEvidence) {
            return this.Update(ExtendedID, RelatedID, MarkerType, SurveyYear, MzEvidence, SameGeneration, ShareBiomomEvidence, ShareBiodadEvidence, ShareBioGrandparentEvidence, Original_ID, Original_ExtendedID, Original_RelatedID, Original_MarkerType, Original_SurveyYear, Original_MzEvidence, Original_SameGeneration, Original_ShareBiomomEvidence, Original_ShareBiodadEvidence, Original_ShareBioGrandparentEvidence, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblMarkerGen2TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tblMarkerGen2TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblMarkerGen2";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("ExtendedID", "ExtendedID");
            tableMapping.ColumnMappings.Add("RelatedID", "RelatedID");
            tableMapping.ColumnMappings.Add("MarkerType", "MarkerType");
            tableMapping.ColumnMappings.Add("SurveyYear", "SurveyYear");
            tableMapping.ColumnMappings.Add("MzEvidence", "MzEvidence");
            tableMapping.ColumnMappings.Add("ShareBiodadEvidence", "ShareBiodadEvidence");
            tableMapping.ColumnMappings.Add("FromMother", "FromMother");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Process].[tblMarkerGen2] WHERE (([ID] = @Original_ID) AND ([ExtendedID] = @Original_ExtendedID) AND ([RelatedID] = @Original_RelatedID) AND ([MarkerType] = @Original_MarkerType) AND ((@IsNull_SurveyYear = 1 AND [SurveyYear] IS NULL) OR ([SurveyYear] = @Original_SurveyYear)) AND ([MzEvidence] = @Original_MzEvidence) AND ([ShareBiodadEvidence] = @Original_ShareBiodadEvidence) AND ([FromMother] = @Original_FromMother))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RelatedID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RelatedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MarkerType", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarkerType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SurveyYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MzEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MzEvidence", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBiodadEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiodadEvidence", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FromMother", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FromMother", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Process].[tblMarkerGen2] ([ExtendedID], [RelatedID], [MarkerType], [SurveyYear], [MzEvidence], [ShareBiodadEvidence], [FromMother]) VALUES (@ExtendedID, @RelatedID, @MarkerType, @SurveyYear, @MzEvidence, @ShareBiodadEvidence, @FromMother);
SELECT ID, ExtendedID, RelatedID, MarkerType, SurveyYear, MzEvidence, ShareBiodadEvidence, FromMother FROM Process.tblMarkerGen2 WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RelatedID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RelatedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarkerType", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarkerType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MzEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MzEvidence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBiodadEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiodadEvidence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromMother", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FromMother", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Process].[tblMarkerGen2] SET [ExtendedID] = @ExtendedID, [RelatedID] = @RelatedID, [MarkerType] = @MarkerType, [SurveyYear] = @SurveyYear, [MzEvidence] = @MzEvidence, [ShareBiodadEvidence] = @ShareBiodadEvidence, [FromMother] = @FromMother WHERE (([ID] = @Original_ID) AND ([ExtendedID] = @Original_ExtendedID) AND ([RelatedID] = @Original_RelatedID) AND ([MarkerType] = @Original_MarkerType) AND ((@IsNull_SurveyYear = 1 AND [SurveyYear] IS NULL) OR ([SurveyYear] = @Original_SurveyYear)) AND ([MzEvidence] = @Original_MzEvidence) AND ([ShareBiodadEvidence] = @Original_ShareBiodadEvidence) AND ([FromMother] = @Original_FromMother));
SELECT ID, ExtendedID, RelatedID, MarkerType, SurveyYear, MzEvidence, ShareBiodadEvidence, FromMother FROM Process.tblMarkerGen2 WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RelatedID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RelatedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MarkerType", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarkerType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MzEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MzEvidence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBiodadEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiodadEvidence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromMother", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FromMother", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RelatedID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RelatedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MarkerType", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MarkerType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SurveyYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MzEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MzEvidence", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBiodadEvidence", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiodadEvidence", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FromMother", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FromMother", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Nls.Base79.Properties.Settings.Default.Nlsy79ConnectionStringBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, ExtendedID, RelatedID, MarkerType, SurveyYear, MzEvidence, ShareBiodad" +
                "Evidence, FromMother FROM Process.tblMarkerGen2";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LinksDataSet.tblMarkerGen2DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LinksDataSet.tblMarkerGen2DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LinksDataSet.tblMarkerGen2DataTable dataTable = new LinksDataSet.tblMarkerGen2DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet.tblMarkerGen2DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblMarkerGen2");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_ID, short Original_ExtendedID, int Original_RelatedID, byte Original_MarkerType, global::System.Nullable<short> Original_SurveyYear, byte Original_MzEvidence, byte Original_ShareBiodadEvidence, bool Original_FromMother) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((short)(Original_ExtendedID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_RelatedID));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((byte)(Original_MarkerType));
            if ((Original_SurveyYear.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((short)(Original_SurveyYear.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((byte)(Original_MzEvidence));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((byte)(Original_ShareBiodadEvidence));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((bool)(Original_FromMother));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(short ExtendedID, int RelatedID, byte MarkerType, global::System.Nullable<short> SurveyYear, byte MzEvidence, byte ShareBiodadEvidence, bool FromMother) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(ExtendedID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(RelatedID));
            this.Adapter.InsertCommand.Parameters[2].Value = ((byte)(MarkerType));
            if ((SurveyYear.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((short)(SurveyYear.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((byte)(MzEvidence));
            this.Adapter.InsertCommand.Parameters[5].Value = ((byte)(ShareBiodadEvidence));
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(FromMother));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    short ExtendedID, 
                    int RelatedID, 
                    byte MarkerType, 
                    global::System.Nullable<short> SurveyYear, 
                    byte MzEvidence, 
                    byte ShareBiodadEvidence, 
                    bool FromMother, 
                    long Original_ID, 
                    short Original_ExtendedID, 
                    int Original_RelatedID, 
                    byte Original_MarkerType, 
                    global::System.Nullable<short> Original_SurveyYear, 
                    byte Original_MzEvidence, 
                    byte Original_ShareBiodadEvidence, 
                    bool Original_FromMother, 
                    long ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(ExtendedID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(RelatedID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((byte)(MarkerType));
            if ((SurveyYear.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(SurveyYear.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((byte)(MzEvidence));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((byte)(ShareBiodadEvidence));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(FromMother));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((short)(Original_ExtendedID));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_RelatedID));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((byte)(Original_MarkerType));
            if ((Original_SurveyYear.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((short)(Original_SurveyYear.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((byte)(Original_MzEvidence));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((byte)(Original_ShareBiodadEvidence));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(Original_FromMother));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((long)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(short ExtendedID, int RelatedID, byte MarkerType, global::System.Nullable<short> SurveyYear, byte MzEvidence, byte ShareBiodadEvidence, bool FromMother, long Original_ID, short Original_ExtendedID, int Original_RelatedID, byte Original_MarkerType, global::System.Nullable<short> Original_SurveyYear, byte Original_MzEvidence, byte Original_ShareBiodadEvidence, bool Original_FromMother) {
            return this.Update(ExtendedID, RelatedID, MarkerType, SurveyYear, MzEvidence, ShareBiodadEvidence, FromMother, Original_ID, Original_ExtendedID, Original_RelatedID, Original_MarkerType, Original_SurveyYear, Original_MzEvidence, Original_ShareBiodadEvidence, Original_FromMother, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblParentsOfGen1RetroTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tblParentsOfGen1RetroTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblParentsOfGen1Retro";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("SubjectTag", "SubjectTag");
            tableMapping.ColumnMappings.Add("ExtendedID", "ExtendedID");
            tableMapping.ColumnMappings.Add("Bioparent", "Bioparent");
            tableMapping.ColumnMappings.Add("InHH", "InHH");
            tableMapping.ColumnMappings.Add("Age", "Age");
            tableMapping.ColumnMappings.Add("Year", "Year");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Process].[tblParentsOfGen1Retro] WHERE (([ID] = @Original_ID) AND ([SubjectTag] = @Original_SubjectTag) AND ([ExtendedID] = @Original_ExtendedID) AND ([Bioparent] = @Original_Bioparent) AND ((@IsNull_InHH = 1 AND [InHH] IS NULL) OR ([InHH] = @Original_InHH)) AND ([Age] = @Original_Age) AND ([Year] = @Original_Year))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bioparent", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bioparent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InHH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InHH", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InHH", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InHH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Age", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Year", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Year", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Process].[tblParentsOfGen1Retro] ([SubjectTag], [ExtendedID], [Bioparent], [InHH], [Age], [Year]) VALUES (@SubjectTag, @ExtendedID, @Bioparent, @InHH, @Age, @Year);
SELECT ID, SubjectTag, ExtendedID, Bioparent, InHH, Age, Year FROM Process.tblParentsOfGen1Retro WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bioparent", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bioparent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InHH", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InHH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Age", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Year", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Year", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Process].[tblParentsOfGen1Retro] SET [SubjectTag] = @SubjectTag, [ExtendedID] = @ExtendedID, [Bioparent] = @Bioparent, [InHH] = @InHH, [Age] = @Age, [Year] = @Year WHERE (([ID] = @Original_ID) AND ([SubjectTag] = @Original_SubjectTag) AND ([ExtendedID] = @Original_ExtendedID) AND ([Bioparent] = @Original_Bioparent) AND ((@IsNull_InHH = 1 AND [InHH] IS NULL) OR ([InHH] = @Original_InHH)) AND ([Age] = @Original_Age) AND ([Year] = @Original_Year));
SELECT ID, SubjectTag, ExtendedID, Bioparent, InHH, Age, Year FROM Process.tblParentsOfGen1Retro WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bioparent", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bioparent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InHH", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InHH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Age", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Year", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Year", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bioparent", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bioparent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InHH", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InHH", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InHH", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InHH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Age", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Age", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Year", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Year", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Nls.Base79.Properties.Settings.Default.Nlsy79ConnectionStringBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, SubjectTag, ExtendedID, Bioparent, InHH, Age, Year FROM Process.tblPar" +
                "entsOfGen1Retro";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LinksDataSet.tblParentsOfGen1RetroDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LinksDataSet.tblParentsOfGen1RetroDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LinksDataSet.tblParentsOfGen1RetroDataTable dataTable = new LinksDataSet.tblParentsOfGen1RetroDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet.tblParentsOfGen1RetroDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblParentsOfGen1Retro");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_ID, int Original_SubjectTag, short Original_ExtendedID, short Original_Bioparent, global::System.Nullable<bool> Original_InHH, byte Original_Age, short Original_Year) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_SubjectTag));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((short)(Original_ExtendedID));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((short)(Original_Bioparent));
            if ((Original_InHH.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_InHH.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((byte)(Original_Age));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((short)(Original_Year));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int SubjectTag, short ExtendedID, short Bioparent, global::System.Nullable<bool> InHH, byte Age, short Year) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(SubjectTag));
            this.Adapter.InsertCommand.Parameters[1].Value = ((short)(ExtendedID));
            this.Adapter.InsertCommand.Parameters[2].Value = ((short)(Bioparent));
            if ((InHH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(InHH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((byte)(Age));
            this.Adapter.InsertCommand.Parameters[5].Value = ((short)(Year));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int SubjectTag, short ExtendedID, short Bioparent, global::System.Nullable<bool> InHH, byte Age, short Year, long Original_ID, int Original_SubjectTag, short Original_ExtendedID, short Original_Bioparent, global::System.Nullable<bool> Original_InHH, byte Original_Age, short Original_Year, long ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(SubjectTag));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(ExtendedID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(Bioparent));
            if ((InHH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(InHH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((byte)(Age));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((short)(Year));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_SubjectTag));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((short)(Original_ExtendedID));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((short)(Original_Bioparent));
            if ((Original_InHH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(Original_InHH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((byte)(Original_Age));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((short)(Original_Year));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((long)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int SubjectTag, short ExtendedID, short Bioparent, global::System.Nullable<bool> InHH, byte Age, short Year, long Original_ID, int Original_SubjectTag, short Original_ExtendedID, short Original_Bioparent, global::System.Nullable<bool> Original_InHH, byte Original_Age, short Original_Year) {
            return this.Update(SubjectTag, ExtendedID, Bioparent, InHH, Age, Year, Original_ID, Original_SubjectTag, Original_ExtendedID, Original_Bioparent, Original_InHH, Original_Age, Original_Year, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblParentsOfGen1CurrentTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tblParentsOfGen1CurrentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblParentsOfGen1Current";
            tableMapping.ColumnMappings.Add("SubjectTag", "SubjectTag");
            tableMapping.ColumnMappings.Add("BiodadBirthYearReported", "BiodadBirthYearReported");
            tableMapping.ColumnMappings.Add("BiodadBirthYearEstimated", "BiodadBirthYearEstimated");
            tableMapping.ColumnMappings.Add("BiodadYearLastAsked", "BiodadYearLastAsked");
            tableMapping.ColumnMappings.Add("BiodadAlive", "BiodadAlive");
            tableMapping.ColumnMappings.Add("BiodadDeathCause", "BiodadDeathCause");
            tableMapping.ColumnMappings.Add("BiodadDeathAge", "BiodadDeathAge");
            tableMapping.ColumnMappings.Add("BiodadUSBorn", "BiodadUSBorn");
            tableMapping.ColumnMappings.Add("BiodadHighestGrade", "BiodadHighestGrade");
            tableMapping.ColumnMappings.Add("BiograndfatherUSBorn", "BiograndfatherUSBorn");
            tableMapping.ColumnMappings.Add("BiomomBirthYearReported", "BiomomBirthYearReported");
            tableMapping.ColumnMappings.Add("BiomomBirthYearEstimated", "BiomomBirthYearEstimated");
            tableMapping.ColumnMappings.Add("BiomomYearLastAsked", "BiomomYearLastAsked");
            tableMapping.ColumnMappings.Add("BiomomAlive", "BiomomAlive");
            tableMapping.ColumnMappings.Add("BiomomDeathCause", "BiomomDeathCause");
            tableMapping.ColumnMappings.Add("BiomomDeathAge", "BiomomDeathAge");
            tableMapping.ColumnMappings.Add("BiomomUSBorn", "BiomomUSBorn");
            tableMapping.ColumnMappings.Add("BiomomHighestGrade", "BiomomHighestGrade");
            tableMapping.ColumnMappings.Add("AlwaysLivedWithBothBioparents", "AlwaysLivedWithBothBioparents");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Process].[tblParentsOfGen1Current] WHERE (([SubjectTag] = @Original_" +
                "SubjectTag) AND ((@IsNull_BiodadBirthYearReported = 1 AND [BiodadBirthYearReport" +
                "ed] IS NULL) OR ([BiodadBirthYearReported] = @Original_BiodadBirthYearReported))" +
                " AND ((@IsNull_BiodadBirthYearEstimated = 1 AND [BiodadBirthYearEstimated] IS NU" +
                "LL) OR ([BiodadBirthYearEstimated] = @Original_BiodadBirthYearEstimated)) AND ((" +
                "@IsNull_BiodadYearLastAsked = 1 AND [BiodadYearLastAsked] IS NULL) OR ([BiodadYe" +
                "arLastAsked] = @Original_BiodadYearLastAsked)) AND ([BiodadAlive] = @Original_Bi" +
                "odadAlive) AND ([BiodadDeathCause] = @Original_BiodadDeathCause) AND ((@IsNull_B" +
                "iodadDeathAge = 1 AND [BiodadDeathAge] IS NULL) OR ([BiodadDeathAge] = @Original" +
                "_BiodadDeathAge)) AND ([BiodadUSBorn] = @Original_BiodadUSBorn) AND ((@IsNull_Bi" +
                "odadHighestGrade = 1 AND [BiodadHighestGrade] IS NULL) OR ([BiodadHighestGrade] " +
                "= @Original_BiodadHighestGrade)) AND ([BiograndfatherUSBorn] = @Original_Biogran" +
                "dfatherUSBorn) AND ((@IsNull_BiomomBirthYearReported = 1 AND [BiomomBirthYearRep" +
                "orted] IS NULL) OR ([BiomomBirthYearReported] = @Original_BiomomBirthYearReporte" +
                "d)) AND ((@IsNull_BiomomBirthYearEstimated = 1 AND [BiomomBirthYearEstimated] IS" +
                " NULL) OR ([BiomomBirthYearEstimated] = @Original_BiomomBirthYearEstimated)) AND" +
                " ((@IsNull_BiomomYearLastAsked = 1 AND [BiomomYearLastAsked] IS NULL) OR ([Biomo" +
                "mYearLastAsked] = @Original_BiomomYearLastAsked)) AND ([BiomomAlive] = @Original" +
                "_BiomomAlive) AND ([BiomomDeathCause] = @Original_BiomomDeathCause) AND ((@IsNul" +
                "l_BiomomDeathAge = 1 AND [BiomomDeathAge] IS NULL) OR ([BiomomDeathAge] = @Origi" +
                "nal_BiomomDeathAge)) AND ([BiomomUSBorn] = @Original_BiomomUSBorn) AND ((@IsNull" +
                "_BiomomHighestGrade = 1 AND [BiomomHighestGrade] IS NULL) OR ([BiomomHighestGrad" +
                "e] = @Original_BiomomHighestGrade)) AND ([AlwaysLivedWithBothBioparents] = @Orig" +
                "inal_AlwaysLivedWithBothBioparents))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiodadBirthYearReported", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadBirthYearReported", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadBirthYearReported", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadBirthYearReported", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiodadBirthYearEstimated", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadBirthYearEstimated", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadBirthYearEstimated", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadBirthYearEstimated", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiodadYearLastAsked", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadYearLastAsked", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadYearLastAsked", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadYearLastAsked", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadAlive", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadAlive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadDeathCause", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDeathCause", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiodadDeathAge", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDeathAge", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadDeathAge", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDeathAge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadUSBorn", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadUSBorn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiodadHighestGrade", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadHighestGrade", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadHighestGrade", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadHighestGrade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiograndfatherUSBorn", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiograndfatherUSBorn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiomomBirthYearReported", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomBirthYearReported", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiomomBirthYearReported", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomBirthYearReported", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiomomBirthYearEstimated", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomBirthYearEstimated", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiomomBirthYearEstimated", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomBirthYearEstimated", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiomomYearLastAsked", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomYearLastAsked", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiomomYearLastAsked", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomYearLastAsked", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiomomAlive", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomAlive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiomomDeathCause", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomDeathCause", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiomomDeathAge", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomDeathAge", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiomomDeathAge", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomDeathAge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiomomUSBorn", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomUSBorn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiomomHighestGrade", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomHighestGrade", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiomomHighestGrade", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomHighestGrade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AlwaysLivedWithBothBioparents", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlwaysLivedWithBothBioparents", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Process].[tblParentsOfGen1Current] ([SubjectTag], [BiodadBirthYearReported], [BiodadBirthYearEstimated], [BiodadYearLastAsked], [BiodadAlive], [BiodadDeathCause], [BiodadDeathAge], [BiodadUSBorn], [BiodadHighestGrade], [BiograndfatherUSBorn], [BiomomBirthYearReported], [BiomomBirthYearEstimated], [BiomomYearLastAsked], [BiomomAlive], [BiomomDeathCause], [BiomomDeathAge], [BiomomUSBorn], [BiomomHighestGrade], [AlwaysLivedWithBothBioparents]) VALUES (@SubjectTag, @BiodadBirthYearReported, @BiodadBirthYearEstimated, @BiodadYearLastAsked, @BiodadAlive, @BiodadDeathCause, @BiodadDeathAge, @BiodadUSBorn, @BiodadHighestGrade, @BiograndfatherUSBorn, @BiomomBirthYearReported, @BiomomBirthYearEstimated, @BiomomYearLastAsked, @BiomomAlive, @BiomomDeathCause, @BiomomDeathAge, @BiomomUSBorn, @BiomomHighestGrade, @AlwaysLivedWithBothBioparents);
SELECT SubjectTag, BiodadBirthYearReported, BiodadBirthYearEstimated, BiodadYearLastAsked, BiodadAlive, BiodadDeathCause, BiodadDeathAge, BiodadUSBorn, BiodadHighestGrade, BiograndfatherUSBorn, BiomomBirthYearReported, BiomomBirthYearEstimated, BiomomYearLastAsked, BiomomAlive, BiomomDeathCause, BiomomDeathAge, BiomomUSBorn, BiomomHighestGrade, AlwaysLivedWithBothBioparents FROM Process.tblParentsOfGen1Current WHERE (SubjectTag = @SubjectTag)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadBirthYearReported", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadBirthYearReported", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadBirthYearEstimated", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadBirthYearEstimated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadYearLastAsked", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadYearLastAsked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadAlive", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadAlive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadDeathCause", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDeathCause", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadDeathAge", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDeathAge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadUSBorn", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadUSBorn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadHighestGrade", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadHighestGrade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiograndfatherUSBorn", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiograndfatherUSBorn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiomomBirthYearReported", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomBirthYearReported", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiomomBirthYearEstimated", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomBirthYearEstimated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiomomYearLastAsked", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomYearLastAsked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiomomAlive", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomAlive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiomomDeathCause", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomDeathCause", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiomomDeathAge", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomDeathAge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiomomUSBorn", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomUSBorn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiomomHighestGrade", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomHighestGrade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AlwaysLivedWithBothBioparents", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlwaysLivedWithBothBioparents", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Process].[tblParentsOfGen1Current] SET [SubjectTag] = @SubjectTag, [Bioda" +
                "dBirthYearReported] = @BiodadBirthYearReported, [BiodadBirthYearEstimated] = @Bi" +
                "odadBirthYearEstimated, [BiodadYearLastAsked] = @BiodadYearLastAsked, [BiodadAli" +
                "ve] = @BiodadAlive, [BiodadDeathCause] = @BiodadDeathCause, [BiodadDeathAge] = @" +
                "BiodadDeathAge, [BiodadUSBorn] = @BiodadUSBorn, [BiodadHighestGrade] = @BiodadHi" +
                "ghestGrade, [BiograndfatherUSBorn] = @BiograndfatherUSBorn, [BiomomBirthYearRepo" +
                "rted] = @BiomomBirthYearReported, [BiomomBirthYearEstimated] = @BiomomBirthYearE" +
                "stimated, [BiomomYearLastAsked] = @BiomomYearLastAsked, [BiomomAlive] = @BiomomA" +
                "live, [BiomomDeathCause] = @BiomomDeathCause, [BiomomDeathAge] = @BiomomDeathAge" +
                ", [BiomomUSBorn] = @BiomomUSBorn, [BiomomHighestGrade] = @BiomomHighestGrade, [A" +
                "lwaysLivedWithBothBioparents] = @AlwaysLivedWithBothBioparents WHERE (([SubjectT" +
                "ag] = @Original_SubjectTag) AND ((@IsNull_BiodadBirthYearReported = 1 AND [Bioda" +
                "dBirthYearReported] IS NULL) OR ([BiodadBirthYearReported] = @Original_BiodadBir" +
                "thYearReported)) AND ((@IsNull_BiodadBirthYearEstimated = 1 AND [BiodadBirthYear" +
                "Estimated] IS NULL) OR ([BiodadBirthYearEstimated] = @Original_BiodadBirthYearEs" +
                "timated)) AND ((@IsNull_BiodadYearLastAsked = 1 AND [BiodadYearLastAsked] IS NUL" +
                "L) OR ([BiodadYearLastAsked] = @Original_BiodadYearLastAsked)) AND ([BiodadAlive" +
                "] = @Original_BiodadAlive) AND ([BiodadDeathCause] = @Original_BiodadDeathCause)" +
                " AND ((@IsNull_BiodadDeathAge = 1 AND [BiodadDeathAge] IS NULL) OR ([BiodadDeath" +
                "Age] = @Original_BiodadDeathAge)) AND ([BiodadUSBorn] = @Original_BiodadUSBorn) " +
                "AND ((@IsNull_BiodadHighestGrade = 1 AND [BiodadHighestGrade] IS NULL) OR ([Biod" +
                "adHighestGrade] = @Original_BiodadHighestGrade)) AND ([BiograndfatherUSBorn] = @" +
                "Original_BiograndfatherUSBorn) AND ((@IsNull_BiomomBirthYearReported = 1 AND [Bi" +
                "omomBirthYearReported] IS NULL) OR ([BiomomBirthYearReported] = @Original_Biomom" +
                "BirthYearReported)) AND ((@IsNull_BiomomBirthYearEstimated = 1 AND [BiomomBirthY" +
                "earEstimated] IS NULL) OR ([BiomomBirthYearEstimated] = @Original_BiomomBirthYea" +
                "rEstimated)) AND ((@IsNull_BiomomYearLastAsked = 1 AND [BiomomYearLastAsked] IS " +
                "NULL) OR ([BiomomYearLastAsked] = @Original_BiomomYearLastAsked)) AND ([BiomomAl" +
                "ive] = @Original_BiomomAlive) AND ([BiomomDeathCause] = @Original_BiomomDeathCau" +
                "se) AND ((@IsNull_BiomomDeathAge = 1 AND [BiomomDeathAge] IS NULL) OR ([BiomomDe" +
                "athAge] = @Original_BiomomDeathAge)) AND ([BiomomUSBorn] = @Original_BiomomUSBor" +
                "n) AND ((@IsNull_BiomomHighestGrade = 1 AND [BiomomHighestGrade] IS NULL) OR ([B" +
                "iomomHighestGrade] = @Original_BiomomHighestGrade)) AND ([AlwaysLivedWithBothBio" +
                "parents] = @Original_AlwaysLivedWithBothBioparents));\r\nSELECT SubjectTag, Biodad" +
                "BirthYearReported, BiodadBirthYearEstimated, BiodadYearLastAsked, BiodadAlive, B" +
                "iodadDeathCause, BiodadDeathAge, BiodadUSBorn, BiodadHighestGrade, Biograndfathe" +
                "rUSBorn, BiomomBirthYearReported, BiomomBirthYearEstimated, BiomomYearLastAsked," +
                " BiomomAlive, BiomomDeathCause, BiomomDeathAge, BiomomUSBorn, BiomomHighestGrade" +
                ", AlwaysLivedWithBothBioparents FROM Process.tblParentsOfGen1Current WHERE (Subj" +
                "ectTag = @SubjectTag)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadBirthYearReported", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadBirthYearReported", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadBirthYearEstimated", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadBirthYearEstimated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadYearLastAsked", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadYearLastAsked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadAlive", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadAlive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadDeathCause", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDeathCause", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadDeathAge", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDeathAge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadUSBorn", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadUSBorn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadHighestGrade", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadHighestGrade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiograndfatherUSBorn", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiograndfatherUSBorn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiomomBirthYearReported", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomBirthYearReported", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiomomBirthYearEstimated", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomBirthYearEstimated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiomomYearLastAsked", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomYearLastAsked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiomomAlive", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomAlive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiomomDeathCause", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomDeathCause", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiomomDeathAge", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomDeathAge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiomomUSBorn", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomUSBorn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiomomHighestGrade", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomHighestGrade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AlwaysLivedWithBothBioparents", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlwaysLivedWithBothBioparents", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiodadBirthYearReported", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadBirthYearReported", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadBirthYearReported", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadBirthYearReported", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiodadBirthYearEstimated", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadBirthYearEstimated", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadBirthYearEstimated", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadBirthYearEstimated", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiodadYearLastAsked", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadYearLastAsked", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadYearLastAsked", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadYearLastAsked", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadAlive", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadAlive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadDeathCause", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDeathCause", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiodadDeathAge", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDeathAge", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadDeathAge", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDeathAge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadUSBorn", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadUSBorn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiodadHighestGrade", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadHighestGrade", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadHighestGrade", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadHighestGrade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiograndfatherUSBorn", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiograndfatherUSBorn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiomomBirthYearReported", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomBirthYearReported", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiomomBirthYearReported", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomBirthYearReported", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiomomBirthYearEstimated", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomBirthYearEstimated", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiomomBirthYearEstimated", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomBirthYearEstimated", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiomomYearLastAsked", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomYearLastAsked", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiomomYearLastAsked", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomYearLastAsked", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiomomAlive", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomAlive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiomomDeathCause", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomDeathCause", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiomomDeathAge", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomDeathAge", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiomomDeathAge", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomDeathAge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiomomUSBorn", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomUSBorn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiomomHighestGrade", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomHighestGrade", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiomomHighestGrade", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiomomHighestGrade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AlwaysLivedWithBothBioparents", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlwaysLivedWithBothBioparents", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Nls.Base79.Properties.Settings.Default.Nlsy79ConnectionStringBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT SubjectTag, BiodadBirthYearReported, BiodadBirthYearEstimated, BiodadYearLastAsked, BiodadAlive, BiodadDeathCause, BiodadDeathAge, BiodadUSBorn, BiodadHighestGrade, BiograndfatherUSBorn, BiomomBirthYearReported, BiomomBirthYearEstimated, BiomomYearLastAsked, BiomomAlive, BiomomDeathCause, BiomomDeathAge, BiomomUSBorn, BiomomHighestGrade, AlwaysLivedWithBothBioparents FROM Process.tblParentsOfGen1Current";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LinksDataSet.tblParentsOfGen1CurrentDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LinksDataSet.tblParentsOfGen1CurrentDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LinksDataSet.tblParentsOfGen1CurrentDataTable dataTable = new LinksDataSet.tblParentsOfGen1CurrentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet.tblParentsOfGen1CurrentDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblParentsOfGen1Current");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_SubjectTag, 
                    global::System.Nullable<short> Original_BiodadBirthYearReported, 
                    global::System.Nullable<short> Original_BiodadBirthYearEstimated, 
                    global::System.Nullable<short> Original_BiodadYearLastAsked, 
                    short Original_BiodadAlive, 
                    short Original_BiodadDeathCause, 
                    global::System.Nullable<byte> Original_BiodadDeathAge, 
                    short Original_BiodadUSBorn, 
                    global::System.Nullable<byte> Original_BiodadHighestGrade, 
                    short Original_BiograndfatherUSBorn, 
                    global::System.Nullable<short> Original_BiomomBirthYearReported, 
                    global::System.Nullable<short> Original_BiomomBirthYearEstimated, 
                    global::System.Nullable<short> Original_BiomomYearLastAsked, 
                    short Original_BiomomAlive, 
                    short Original_BiomomDeathCause, 
                    global::System.Nullable<byte> Original_BiomomDeathAge, 
                    short Original_BiomomUSBorn, 
                    global::System.Nullable<byte> Original_BiomomHighestGrade, 
                    short Original_AlwaysLivedWithBothBioparents) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_SubjectTag));
            if ((Original_BiodadBirthYearReported.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((short)(Original_BiodadBirthYearReported.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_BiodadBirthYearEstimated.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((short)(Original_BiodadBirthYearEstimated.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_BiodadYearLastAsked.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((short)(Original_BiodadYearLastAsked.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((short)(Original_BiodadAlive));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((short)(Original_BiodadDeathCause));
            if ((Original_BiodadDeathAge.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((byte)(Original_BiodadDeathAge.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((short)(Original_BiodadUSBorn));
            if ((Original_BiodadHighestGrade.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((byte)(Original_BiodadHighestGrade.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[14].Value = ((short)(Original_BiograndfatherUSBorn));
            if ((Original_BiomomBirthYearReported.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((short)(Original_BiomomBirthYearReported.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_BiomomBirthYearEstimated.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((short)(Original_BiomomBirthYearEstimated.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_BiomomYearLastAsked.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((short)(Original_BiomomYearLastAsked.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[21].Value = ((short)(Original_BiomomAlive));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((short)(Original_BiomomDeathCause));
            if ((Original_BiomomDeathAge.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((byte)(Original_BiomomDeathAge.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[25].Value = ((short)(Original_BiomomUSBorn));
            if ((Original_BiomomHighestGrade.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((byte)(Original_BiomomHighestGrade.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[28].Value = ((short)(Original_AlwaysLivedWithBothBioparents));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int SubjectTag, 
                    global::System.Nullable<short> BiodadBirthYearReported, 
                    global::System.Nullable<short> BiodadBirthYearEstimated, 
                    global::System.Nullable<short> BiodadYearLastAsked, 
                    short BiodadAlive, 
                    short BiodadDeathCause, 
                    global::System.Nullable<byte> BiodadDeathAge, 
                    short BiodadUSBorn, 
                    global::System.Nullable<byte> BiodadHighestGrade, 
                    short BiograndfatherUSBorn, 
                    global::System.Nullable<short> BiomomBirthYearReported, 
                    global::System.Nullable<short> BiomomBirthYearEstimated, 
                    global::System.Nullable<short> BiomomYearLastAsked, 
                    short BiomomAlive, 
                    short BiomomDeathCause, 
                    global::System.Nullable<byte> BiomomDeathAge, 
                    short BiomomUSBorn, 
                    global::System.Nullable<byte> BiomomHighestGrade, 
                    short AlwaysLivedWithBothBioparents) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(SubjectTag));
            if ((BiodadBirthYearReported.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((short)(BiodadBirthYearReported.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((BiodadBirthYearEstimated.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((short)(BiodadBirthYearEstimated.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((BiodadYearLastAsked.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((short)(BiodadYearLastAsked.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((short)(BiodadAlive));
            this.Adapter.InsertCommand.Parameters[5].Value = ((short)(BiodadDeathCause));
            if ((BiodadDeathAge.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((byte)(BiodadDeathAge.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((short)(BiodadUSBorn));
            if ((BiodadHighestGrade.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((byte)(BiodadHighestGrade.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((short)(BiograndfatherUSBorn));
            if ((BiomomBirthYearReported.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((short)(BiomomBirthYearReported.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((BiomomBirthYearEstimated.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((short)(BiomomBirthYearEstimated.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((BiomomYearLastAsked.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((short)(BiomomYearLastAsked.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((short)(BiomomAlive));
            this.Adapter.InsertCommand.Parameters[14].Value = ((short)(BiomomDeathCause));
            if ((BiomomDeathAge.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((byte)(BiomomDeathAge.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[16].Value = ((short)(BiomomUSBorn));
            if ((BiomomHighestGrade.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((byte)(BiomomHighestGrade.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[18].Value = ((short)(AlwaysLivedWithBothBioparents));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int SubjectTag, 
                    global::System.Nullable<short> BiodadBirthYearReported, 
                    global::System.Nullable<short> BiodadBirthYearEstimated, 
                    global::System.Nullable<short> BiodadYearLastAsked, 
                    short BiodadAlive, 
                    short BiodadDeathCause, 
                    global::System.Nullable<byte> BiodadDeathAge, 
                    short BiodadUSBorn, 
                    global::System.Nullable<byte> BiodadHighestGrade, 
                    short BiograndfatherUSBorn, 
                    global::System.Nullable<short> BiomomBirthYearReported, 
                    global::System.Nullable<short> BiomomBirthYearEstimated, 
                    global::System.Nullable<short> BiomomYearLastAsked, 
                    short BiomomAlive, 
                    short BiomomDeathCause, 
                    global::System.Nullable<byte> BiomomDeathAge, 
                    short BiomomUSBorn, 
                    global::System.Nullable<byte> BiomomHighestGrade, 
                    short AlwaysLivedWithBothBioparents, 
                    int Original_SubjectTag, 
                    global::System.Nullable<short> Original_BiodadBirthYearReported, 
                    global::System.Nullable<short> Original_BiodadBirthYearEstimated, 
                    global::System.Nullable<short> Original_BiodadYearLastAsked, 
                    short Original_BiodadAlive, 
                    short Original_BiodadDeathCause, 
                    global::System.Nullable<byte> Original_BiodadDeathAge, 
                    short Original_BiodadUSBorn, 
                    global::System.Nullable<byte> Original_BiodadHighestGrade, 
                    short Original_BiograndfatherUSBorn, 
                    global::System.Nullable<short> Original_BiomomBirthYearReported, 
                    global::System.Nullable<short> Original_BiomomBirthYearEstimated, 
                    global::System.Nullable<short> Original_BiomomYearLastAsked, 
                    short Original_BiomomAlive, 
                    short Original_BiomomDeathCause, 
                    global::System.Nullable<byte> Original_BiomomDeathAge, 
                    short Original_BiomomUSBorn, 
                    global::System.Nullable<byte> Original_BiomomHighestGrade, 
                    short Original_AlwaysLivedWithBothBioparents) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(SubjectTag));
            if ((BiodadBirthYearReported.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(BiodadBirthYearReported.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((BiodadBirthYearEstimated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(BiodadBirthYearEstimated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((BiodadYearLastAsked.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(BiodadYearLastAsked.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((short)(BiodadAlive));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((short)(BiodadDeathCause));
            if ((BiodadDeathAge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((byte)(BiodadDeathAge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((short)(BiodadUSBorn));
            if ((BiodadHighestGrade.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((byte)(BiodadHighestGrade.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((short)(BiograndfatherUSBorn));
            if ((BiomomBirthYearReported.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((short)(BiomomBirthYearReported.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((BiomomBirthYearEstimated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((short)(BiomomBirthYearEstimated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((BiomomYearLastAsked.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((short)(BiomomYearLastAsked.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((short)(BiomomAlive));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((short)(BiomomDeathCause));
            if ((BiomomDeathAge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((byte)(BiomomDeathAge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((short)(BiomomUSBorn));
            if ((BiomomHighestGrade.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((byte)(BiomomHighestGrade.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((short)(AlwaysLivedWithBothBioparents));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_SubjectTag));
            if ((Original_BiodadBirthYearReported.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((short)(Original_BiodadBirthYearReported.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_BiodadBirthYearEstimated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((short)(Original_BiodadBirthYearEstimated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_BiodadYearLastAsked.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((short)(Original_BiodadYearLastAsked.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((short)(Original_BiodadAlive));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((short)(Original_BiodadDeathCause));
            if ((Original_BiodadDeathAge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((byte)(Original_BiodadDeathAge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[30].Value = ((short)(Original_BiodadUSBorn));
            if ((Original_BiodadHighestGrade.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((byte)(Original_BiodadHighestGrade.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((short)(Original_BiograndfatherUSBorn));
            if ((Original_BiomomBirthYearReported.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((short)(Original_BiomomBirthYearReported.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_BiomomBirthYearEstimated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((short)(Original_BiomomBirthYearEstimated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_BiomomYearLastAsked.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((short)(Original_BiomomYearLastAsked.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[40].Value = ((short)(Original_BiomomAlive));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((short)(Original_BiomomDeathCause));
            if ((Original_BiomomDeathAge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((byte)(Original_BiomomDeathAge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[44].Value = ((short)(Original_BiomomUSBorn));
            if ((Original_BiomomHighestGrade.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((byte)(Original_BiomomHighestGrade.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[47].Value = ((short)(Original_AlwaysLivedWithBothBioparents));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<short> BiodadBirthYearReported, 
                    global::System.Nullable<short> BiodadBirthYearEstimated, 
                    global::System.Nullable<short> BiodadYearLastAsked, 
                    short BiodadAlive, 
                    short BiodadDeathCause, 
                    global::System.Nullable<byte> BiodadDeathAge, 
                    short BiodadUSBorn, 
                    global::System.Nullable<byte> BiodadHighestGrade, 
                    short BiograndfatherUSBorn, 
                    global::System.Nullable<short> BiomomBirthYearReported, 
                    global::System.Nullable<short> BiomomBirthYearEstimated, 
                    global::System.Nullable<short> BiomomYearLastAsked, 
                    short BiomomAlive, 
                    short BiomomDeathCause, 
                    global::System.Nullable<byte> BiomomDeathAge, 
                    short BiomomUSBorn, 
                    global::System.Nullable<byte> BiomomHighestGrade, 
                    short AlwaysLivedWithBothBioparents, 
                    int Original_SubjectTag, 
                    global::System.Nullable<short> Original_BiodadBirthYearReported, 
                    global::System.Nullable<short> Original_BiodadBirthYearEstimated, 
                    global::System.Nullable<short> Original_BiodadYearLastAsked, 
                    short Original_BiodadAlive, 
                    short Original_BiodadDeathCause, 
                    global::System.Nullable<byte> Original_BiodadDeathAge, 
                    short Original_BiodadUSBorn, 
                    global::System.Nullable<byte> Original_BiodadHighestGrade, 
                    short Original_BiograndfatherUSBorn, 
                    global::System.Nullable<short> Original_BiomomBirthYearReported, 
                    global::System.Nullable<short> Original_BiomomBirthYearEstimated, 
                    global::System.Nullable<short> Original_BiomomYearLastAsked, 
                    short Original_BiomomAlive, 
                    short Original_BiomomDeathCause, 
                    global::System.Nullable<byte> Original_BiomomDeathAge, 
                    short Original_BiomomUSBorn, 
                    global::System.Nullable<byte> Original_BiomomHighestGrade, 
                    short Original_AlwaysLivedWithBothBioparents) {
            return this.Update(Original_SubjectTag, BiodadBirthYearReported, BiodadBirthYearEstimated, BiodadYearLastAsked, BiodadAlive, BiodadDeathCause, BiodadDeathAge, BiodadUSBorn, BiodadHighestGrade, BiograndfatherUSBorn, BiomomBirthYearReported, BiomomBirthYearEstimated, BiomomYearLastAsked, BiomomAlive, BiomomDeathCause, BiomomDeathAge, BiomomUSBorn, BiomomHighestGrade, AlwaysLivedWithBothBioparents, Original_SubjectTag, Original_BiodadBirthYearReported, Original_BiodadBirthYearEstimated, Original_BiodadYearLastAsked, Original_BiodadAlive, Original_BiodadDeathCause, Original_BiodadDeathAge, Original_BiodadUSBorn, Original_BiodadHighestGrade, Original_BiograndfatherUSBorn, Original_BiomomBirthYearReported, Original_BiomomBirthYearEstimated, Original_BiomomYearLastAsked, Original_BiomomAlive, Original_BiomomDeathCause, Original_BiomomDeathAge, Original_BiomomUSBorn, Original_BiomomHighestGrade, Original_AlwaysLivedWithBothBioparents);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblOutcomeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tblOutcomeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblOutcome";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("SubjectTag", "SubjectTag");
            tableMapping.ColumnMappings.Add("Item", "Item");
            tableMapping.ColumnMappings.Add("SurveyYear", "SurveyYear");
            tableMapping.ColumnMappings.Add("Value", "Value");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Process].[tblOutcome] WHERE (([ID] = @Original_ID) AND ([SubjectTag]" +
                " = @Original_SubjectTag) AND ([Item] = @Original_Item) AND ([SurveyYear] = @Orig" +
                "inal_SurveyYear) AND ([Value] = @Original_Value))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Item", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Value", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Value", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Process].[tblOutcome] ([SubjectTag], [Item], [SurveyYear], [Value]) " +
                "VALUES (@SubjectTag, @Item, @SurveyYear, @Value);\r\nSELECT ID, SubjectTag, Item, " +
                "SurveyYear, Value FROM Process.tblOutcome WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Value", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Value", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Process].[tblOutcome] SET [SubjectTag] = @SubjectTag, [Item] = @Item, [SurveyYear] = @SurveyYear, [Value] = @Value WHERE (([ID] = @Original_ID) AND ([SubjectTag] = @Original_SubjectTag) AND ([Item] = @Original_Item) AND ([SurveyYear] = @Original_SurveyYear) AND ([Value] = @Original_Value));
SELECT ID, SubjectTag, Item, SurveyYear, Value FROM Process.tblOutcome WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Value", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Value", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Item", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Value", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Value", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Nls.Base79.Properties.Settings.Default.Nlsy79ConnectionStringBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, SubjectTag, Item, SurveyYear, Value FROM Process.tblOutcome";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LinksDataSet.tblOutcomeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LinksDataSet.tblOutcomeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LinksDataSet.tblOutcomeDataTable dataTable = new LinksDataSet.tblOutcomeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet.tblOutcomeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblOutcome");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, int Original_SubjectTag, short Original_Item, short Original_SurveyYear, int Original_Value) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_SubjectTag));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((short)(Original_Item));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((short)(Original_SurveyYear));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Value));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int SubjectTag, short Item, short SurveyYear, int Value) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(SubjectTag));
            this.Adapter.InsertCommand.Parameters[1].Value = ((short)(Item));
            this.Adapter.InsertCommand.Parameters[2].Value = ((short)(SurveyYear));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Value));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int SubjectTag, short Item, short SurveyYear, int Value, int Original_ID, int Original_SubjectTag, short Original_Item, short Original_SurveyYear, int Original_Value, int ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(SubjectTag));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(Item));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(SurveyYear));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Value));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_SubjectTag));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((short)(Original_Item));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((short)(Original_SurveyYear));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Value));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int SubjectTag, short Item, short SurveyYear, int Value, int Original_ID, int Original_SubjectTag, short Original_Item, short Original_SurveyYear, int Original_Value) {
            return this.Update(SubjectTag, Item, SurveyYear, Value, Original_ID, Original_SubjectTag, Original_Item, Original_SurveyYear, Original_Value, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblSubjectTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tblSubjectTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblSubject";
            tableMapping.ColumnMappings.Add("SubjectTag", "SubjectTag");
            tableMapping.ColumnMappings.Add("ExtendedID", "ExtendedID");
            tableMapping.ColumnMappings.Add("SubjectID", "SubjectID");
            tableMapping.ColumnMappings.Add("Generation", "Generation");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Process].[tblSubject] WHERE (([SubjectTag] = @Original_SubjectTag) A" +
                "ND ([ExtendedID] = @Original_ExtendedID) AND ([SubjectID] = @Original_SubjectID)" +
                " AND ([Generation] = @Original_Generation) AND ([Gender] = @Original_Gender))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Generation", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Generation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gender", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Process].[tblSubject] ([SubjectTag], [ExtendedID], [SubjectID], [Generation], [Gender]) VALUES (@SubjectTag, @ExtendedID, @SubjectID, @Generation, @Gender);
SELECT SubjectTag, ExtendedID, SubjectID, Generation, Gender FROM Process.tblSubject WHERE (SubjectTag = @SubjectTag)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Generation", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Generation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gender", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Process].[tblSubject] SET [SubjectTag] = @SubjectTag, [ExtendedID] = @ExtendedID, [SubjectID] = @SubjectID, [Generation] = @Generation, [Gender] = @Gender WHERE (([SubjectTag] = @Original_SubjectTag) AND ([ExtendedID] = @Original_ExtendedID) AND ([SubjectID] = @Original_SubjectID) AND ([Generation] = @Original_Generation) AND ([Gender] = @Original_Gender));
SELECT SubjectTag, ExtendedID, SubjectID, Generation, Gender FROM Process.tblSubject WHERE (SubjectTag = @SubjectTag)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Generation", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Generation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gender", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Generation", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Generation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gender", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Nls.Base79.Properties.Settings.Default.Nlsy79ConnectionStringBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SubjectTag, ExtendedID, SubjectID, Generation, Gender FROM Process.tblSubj" +
                "ect";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LinksDataSet.tblSubjectDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LinksDataSet.tblSubjectDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LinksDataSet.tblSubjectDataTable dataTable = new LinksDataSet.tblSubjectDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet.tblSubjectDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblSubject");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_SubjectTag, short Original_ExtendedID, int Original_SubjectID, byte Original_Generation, byte Original_Gender) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_SubjectTag));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((short)(Original_ExtendedID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_SubjectID));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((byte)(Original_Generation));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((byte)(Original_Gender));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int SubjectTag, short ExtendedID, int SubjectID, byte Generation, byte Gender) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(SubjectTag));
            this.Adapter.InsertCommand.Parameters[1].Value = ((short)(ExtendedID));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(SubjectID));
            this.Adapter.InsertCommand.Parameters[3].Value = ((byte)(Generation));
            this.Adapter.InsertCommand.Parameters[4].Value = ((byte)(Gender));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int SubjectTag, short ExtendedID, int SubjectID, byte Generation, byte Gender, int Original_SubjectTag, short Original_ExtendedID, int Original_SubjectID, byte Original_Generation, byte Original_Gender) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(SubjectTag));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(ExtendedID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(SubjectID));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((byte)(Generation));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((byte)(Gender));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_SubjectTag));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((short)(Original_ExtendedID));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_SubjectID));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((byte)(Original_Generation));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((byte)(Original_Gender));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(short ExtendedID, int SubjectID, byte Generation, byte Gender, int Original_SubjectTag, short Original_ExtendedID, int Original_SubjectID, byte Original_Generation, byte Original_Gender) {
            return this.Update(Original_SubjectTag, ExtendedID, SubjectID, Generation, Gender, Original_SubjectTag, Original_ExtendedID, Original_SubjectID, Original_Generation, Original_Gender);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblRelatedStructureTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tblRelatedStructureTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblRelatedStructure";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("ExtendedID", "ExtendedID");
            tableMapping.ColumnMappings.Add("SubjectTag_S1", "SubjectTag_S1");
            tableMapping.ColumnMappings.Add("SubjectTag_S2", "SubjectTag_S2");
            tableMapping.ColumnMappings.Add("RelationshipPath", "RelationshipPath");
            tableMapping.ColumnMappings.Add("EverSharedHouse", "EverSharedHouse");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Process].[tblRelatedStructure] WHERE (([ID] = @Original_ID) AND ([ExtendedID] = @Original_ExtendedID) AND ([SubjectTag_S1] = @Original_SubjectTag_S1) AND ([SubjectTag_S2] = @Original_SubjectTag_S2) AND ([RelationshipPath] = @Original_RelationshipPath) AND ([EverSharedHouse] = @Original_EverSharedHouse))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag_S1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag_S2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RelationshipPath", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RelationshipPath", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EverSharedHouse", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EverSharedHouse", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Process].[tblRelatedStructure] ([ExtendedID], [SubjectTag_S1], [SubjectTag_S2], [RelationshipPath], [EverSharedHouse]) VALUES (@ExtendedID, @SubjectTag_S1, @SubjectTag_S2, @RelationshipPath, @EverSharedHouse);
SELECT ID, ExtendedID, SubjectTag_S1, SubjectTag_S2, RelationshipPath, EverSharedHouse FROM Process.tblRelatedStructure WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag_S1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag_S2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RelationshipPath", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RelationshipPath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EverSharedHouse", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EverSharedHouse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Process].[tblRelatedStructure] SET [ExtendedID] = @ExtendedID, [SubjectTag_S1] = @SubjectTag_S1, [SubjectTag_S2] = @SubjectTag_S2, [RelationshipPath] = @RelationshipPath, [EverSharedHouse] = @EverSharedHouse WHERE (([ID] = @Original_ID) AND ([ExtendedID] = @Original_ExtendedID) AND ([SubjectTag_S1] = @Original_SubjectTag_S1) AND ([SubjectTag_S2] = @Original_SubjectTag_S2) AND ([RelationshipPath] = @Original_RelationshipPath) AND ([EverSharedHouse] = @Original_EverSharedHouse));
SELECT ID, ExtendedID, SubjectTag_S1, SubjectTag_S2, RelationshipPath, EverSharedHouse FROM Process.tblRelatedStructure WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag_S1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag_S2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RelationshipPath", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RelationshipPath", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EverSharedHouse", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EverSharedHouse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExtendedID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag_S1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag_S2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RelationshipPath", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RelationshipPath", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EverSharedHouse", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EverSharedHouse", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Nls.Base79.Properties.Settings.Default.Nlsy79ConnectionStringBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, ExtendedID, SubjectTag_S1, SubjectTag_S2, RelationshipPath, EverShared" +
                "House FROM Process.tblRelatedStructure";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LinksDataSet.tblRelatedStructureDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LinksDataSet.tblRelatedStructureDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LinksDataSet.tblRelatedStructureDataTable dataTable = new LinksDataSet.tblRelatedStructureDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet.tblRelatedStructureDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblRelatedStructure");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, short Original_ExtendedID, int Original_SubjectTag_S1, int Original_SubjectTag_S2, byte Original_RelationshipPath, bool Original_EverSharedHouse) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((short)(Original_ExtendedID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_SubjectTag_S1));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_SubjectTag_S2));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((byte)(Original_RelationshipPath));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_EverSharedHouse));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(short ExtendedID, int SubjectTag_S1, int SubjectTag_S2, byte RelationshipPath, bool EverSharedHouse) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(ExtendedID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(SubjectTag_S1));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(SubjectTag_S2));
            this.Adapter.InsertCommand.Parameters[3].Value = ((byte)(RelationshipPath));
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(EverSharedHouse));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(short ExtendedID, int SubjectTag_S1, int SubjectTag_S2, byte RelationshipPath, bool EverSharedHouse, int Original_ID, short Original_ExtendedID, int Original_SubjectTag_S1, int Original_SubjectTag_S2, byte Original_RelationshipPath, bool Original_EverSharedHouse, int ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(ExtendedID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(SubjectTag_S1));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(SubjectTag_S2));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((byte)(RelationshipPath));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(EverSharedHouse));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((short)(Original_ExtendedID));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_SubjectTag_S1));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_SubjectTag_S2));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((byte)(Original_RelationshipPath));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_EverSharedHouse));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(short ExtendedID, int SubjectTag_S1, int SubjectTag_S2, byte RelationshipPath, bool EverSharedHouse, int Original_ID, short Original_ExtendedID, int Original_SubjectTag_S1, int Original_SubjectTag_S2, byte Original_RelationshipPath, bool Original_EverSharedHouse) {
            return this.Update(ExtendedID, SubjectTag_S1, SubjectTag_S2, RelationshipPath, EverSharedHouse, Original_ID, Original_ExtendedID, Original_SubjectTag_S1, Original_SubjectTag_S2, Original_RelationshipPath, Original_EverSharedHouse, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblRelatedValuesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tblRelatedValuesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblRelatedValues";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("MultipleBirthIfSameSex", "MultipleBirthIfSameSex");
            tableMapping.ColumnMappings.Add("IsMz", "IsMz");
            tableMapping.ColumnMappings.Add("LastSurvey_S1", "LastSurvey_S1");
            tableMapping.ColumnMappings.Add("LastSurvey_S2", "LastSurvey_S2");
            tableMapping.ColumnMappings.Add("ImplicitShareBiomomPass1", "ImplicitShareBiomomPass1");
            tableMapping.ColumnMappings.Add("ImplicitShareBiodadPass1", "ImplicitShareBiodadPass1");
            tableMapping.ColumnMappings.Add("ExplicitShareBiomomPass1", "ExplicitShareBiomomPass1");
            tableMapping.ColumnMappings.Add("ExplicitShareBiodadPass1", "ExplicitShareBiodadPass1");
            tableMapping.ColumnMappings.Add("ShareBiomomPass1", "ShareBiomomPass1");
            tableMapping.ColumnMappings.Add("ShareBiodadPass1", "ShareBiodadPass1");
            tableMapping.ColumnMappings.Add("RImplicitPass1", "RImplicitPass1");
            tableMapping.ColumnMappings.Add("RImplicit", "RImplicit");
            tableMapping.ColumnMappings.Add("RImplicitSubject", "RImplicitSubject");
            tableMapping.ColumnMappings.Add("RImplicitMother", "RImplicitMother");
            tableMapping.ColumnMappings.Add("RImplicit2004", "RImplicit2004");
            tableMapping.ColumnMappings.Add("RExplicitOlderSibVersion", "RExplicitOlderSibVersion");
            tableMapping.ColumnMappings.Add("RExplicitYoungerSibVersion", "RExplicitYoungerSibVersion");
            tableMapping.ColumnMappings.Add("RExplicitPass1", "RExplicitPass1");
            tableMapping.ColumnMappings.Add("RExplicit", "RExplicit");
            tableMapping.ColumnMappings.Add("RPass1", "RPass1");
            tableMapping.ColumnMappings.Add("R", "R");
            tableMapping.ColumnMappings.Add("RFull", "RFull");
            tableMapping.ColumnMappings.Add("RPeek", "RPeek");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Process].[tblRelatedValues] WHERE (([ID] = @Original_ID) AND ([Multi" +
                "pleBirthIfSameSex] = @Original_MultipleBirthIfSameSex) AND ([IsMz] = @Original_I" +
                "sMz) AND ((@IsNull_LastSurvey_S1 = 1 AND [LastSurvey_S1] IS NULL) OR ([LastSurve" +
                "y_S1] = @Original_LastSurvey_S1)) AND ((@IsNull_LastSurvey_S2 = 1 AND [LastSurve" +
                "y_S2] IS NULL) OR ([LastSurvey_S2] = @Original_LastSurvey_S2)) AND ((@IsNull_Imp" +
                "licitShareBiomomPass1 = 1 AND [ImplicitShareBiomomPass1] IS NULL) OR ([ImplicitS" +
                "hareBiomomPass1] = @Original_ImplicitShareBiomomPass1)) AND ((@IsNull_ImplicitSh" +
                "areBiodadPass1 = 1 AND [ImplicitShareBiodadPass1] IS NULL) OR ([ImplicitShareBio" +
                "dadPass1] = @Original_ImplicitShareBiodadPass1)) AND ((@IsNull_ExplicitShareBiom" +
                "omPass1 = 1 AND [ExplicitShareBiomomPass1] IS NULL) OR ([ExplicitShareBiomomPass" +
                "1] = @Original_ExplicitShareBiomomPass1)) AND ((@IsNull_ExplicitShareBiodadPass1" +
                " = 1 AND [ExplicitShareBiodadPass1] IS NULL) OR ([ExplicitShareBiodadPass1] = @O" +
                "riginal_ExplicitShareBiodadPass1)) AND ((@IsNull_ShareBiomomPass1 = 1 AND [Share" +
                "BiomomPass1] IS NULL) OR ([ShareBiomomPass1] = @Original_ShareBiomomPass1)) AND " +
                "((@IsNull_ShareBiodadPass1 = 1 AND [ShareBiodadPass1] IS NULL) OR ([ShareBiodadP" +
                "ass1] = @Original_ShareBiodadPass1)) AND ((@IsNull_RImplicitPass1 = 1 AND [RImpl" +
                "icitPass1] IS NULL) OR ([RImplicitPass1] = @Original_RImplicitPass1)) AND ((@IsN" +
                "ull_RImplicit = 1 AND [RImplicit] IS NULL) OR ([RImplicit] = @Original_RImplicit" +
                ")) AND ((@IsNull_RImplicitSubject = 1 AND [RImplicitSubject] IS NULL) OR ([RImpl" +
                "icitSubject] = @Original_RImplicitSubject)) AND ((@IsNull_RImplicitMother = 1 AN" +
                "D [RImplicitMother] IS NULL) OR ([RImplicitMother] = @Original_RImplicitMother))" +
                " AND ((@IsNull_RImplicit2004 = 1 AND [RImplicit2004] IS NULL) OR ([RImplicit2004" +
                "] = @Original_RImplicit2004)) AND ((@IsNull_RExplicitOlderSibVersion = 1 AND [RE" +
                "xplicitOlderSibVersion] IS NULL) OR ([RExplicitOlderSibVersion] = @Original_RExp" +
                "licitOlderSibVersion)) AND ((@IsNull_RExplicitYoungerSibVersion = 1 AND [RExplic" +
                "itYoungerSibVersion] IS NULL) OR ([RExplicitYoungerSibVersion] = @Original_RExpl" +
                "icitYoungerSibVersion)) AND ((@IsNull_RExplicitPass1 = 1 AND [RExplicitPass1] IS" +
                " NULL) OR ([RExplicitPass1] = @Original_RExplicitPass1)) AND ((@IsNull_RExplicit" +
                " = 1 AND [RExplicit] IS NULL) OR ([RExplicit] = @Original_RExplicit)) AND ((@IsN" +
                "ull_RPass1 = 1 AND [RPass1] IS NULL) OR ([RPass1] = @Original_RPass1)) AND ((@Is" +
                "Null_R = 1 AND [R] IS NULL) OR ([R] = @Original_R)) AND ((@IsNull_RFull = 1 AND " +
                "[RFull] IS NULL) OR ([RFull] = @Original_RFull)) AND ((@IsNull_RPeek = 1 AND [RP" +
                "eek] IS NULL) OR ([RPeek] = @Original_RPeek)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MultipleBirthIfSameSex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MultipleBirthIfSameSex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsMz", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMz", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastSurvey_S1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastSurvey_S1", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastSurvey_S2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastSurvey_S2", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImplicitShareBiomomPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImplicitShareBiomomPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImplicitShareBiomomPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImplicitShareBiomomPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImplicitShareBiodadPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImplicitShareBiodadPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImplicitShareBiodadPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImplicitShareBiodadPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExplicitShareBiomomPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExplicitShareBiomomPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExplicitShareBiomomPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExplicitShareBiomomPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExplicitShareBiodadPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExplicitShareBiodadPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExplicitShareBiodadPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExplicitShareBiodadPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShareBiomomPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiomomPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBiomomPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiomomPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShareBiodadPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiodadPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBiodadPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiodadPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RImplicitPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RImplicitPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RImplicit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RImplicit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RImplicitSubject", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitSubject", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RImplicitSubject", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitSubject", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RImplicitMother", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitMother", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RImplicitMother", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitMother", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RImplicit2004", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit2004", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RImplicit2004", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit2004", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RExplicitOlderSibVersion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitOlderSibVersion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RExplicitOlderSibVersion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitOlderSibVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RExplicitYoungerSibVersion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitYoungerSibVersion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RExplicitYoungerSibVersion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitYoungerSibVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RExplicitPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RExplicitPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RExplicit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RExplicit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_R", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_R", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RFull", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RFull", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RFull", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RFull", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RPeek", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPeek", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RPeek", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPeek", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Process].[tblRelatedValues] ([ID], [MultipleBirthIfSameSex], [IsMz], [LastSurvey_S1], [LastSurvey_S2], [ImplicitShareBiomomPass1], [ImplicitShareBiodadPass1], [ExplicitShareBiomomPass1], [ExplicitShareBiodadPass1], [ShareBiomomPass1], [ShareBiodadPass1], [RImplicitPass1], [RImplicit], [RImplicitSubject], [RImplicitMother], [RImplicit2004], [RExplicitOlderSibVersion], [RExplicitYoungerSibVersion], [RExplicitPass1], [RExplicit], [RPass1], [R], [RFull], [RPeek]) VALUES (@ID, @MultipleBirthIfSameSex, @IsMz, @LastSurvey_S1, @LastSurvey_S2, @ImplicitShareBiomomPass1, @ImplicitShareBiodadPass1, @ExplicitShareBiomomPass1, @ExplicitShareBiodadPass1, @ShareBiomomPass1, @ShareBiodadPass1, @RImplicitPass1, @RImplicit, @RImplicitSubject, @RImplicitMother, @RImplicit2004, @RExplicitOlderSibVersion, @RExplicitYoungerSibVersion, @RExplicitPass1, @RExplicit, @RPass1, @R, @RFull, @RPeek);
SELECT ID, MultipleBirthIfSameSex, IsMz, LastSurvey_S1, LastSurvey_S2, ImplicitShareBiomomPass1, ImplicitShareBiodadPass1, ExplicitShareBiomomPass1, ExplicitShareBiodadPass1, ShareBiomomPass1, ShareBiodadPass1, RImplicitPass1, RImplicit, RImplicitSubject, RImplicitMother, RImplicit2004, RExplicitOlderSibVersion, RExplicitYoungerSibVersion, RExplicitPass1, RExplicit, RPass1, R, RFull, RPeek FROM Process.tblRelatedValues WHERE (ID = @ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MultipleBirthIfSameSex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MultipleBirthIfSameSex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsMz", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMz", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastSurvey_S1", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastSurvey_S2", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImplicitShareBiomomPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImplicitShareBiomomPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImplicitShareBiodadPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImplicitShareBiodadPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExplicitShareBiomomPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExplicitShareBiomomPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExplicitShareBiodadPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExplicitShareBiodadPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBiomomPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiomomPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBiodadPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiodadPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RImplicitPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RImplicit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RImplicitSubject", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitSubject", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RImplicitMother", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitMother", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RImplicit2004", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit2004", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RExplicitOlderSibVersion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitOlderSibVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RExplicitYoungerSibVersion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitYoungerSibVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RExplicitPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RExplicit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@R", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RFull", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RFull", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RPeek", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPeek", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Process].[tblRelatedValues] SET [ID] = @ID, [MultipleBirthIfSameSex] = @M" +
                "ultipleBirthIfSameSex, [IsMz] = @IsMz, [LastSurvey_S1] = @LastSurvey_S1, [LastSu" +
                "rvey_S2] = @LastSurvey_S2, [ImplicitShareBiomomPass1] = @ImplicitShareBiomomPass" +
                "1, [ImplicitShareBiodadPass1] = @ImplicitShareBiodadPass1, [ExplicitShareBiomomP" +
                "ass1] = @ExplicitShareBiomomPass1, [ExplicitShareBiodadPass1] = @ExplicitShareBi" +
                "odadPass1, [ShareBiomomPass1] = @ShareBiomomPass1, [ShareBiodadPass1] = @ShareBi" +
                "odadPass1, [RImplicitPass1] = @RImplicitPass1, [RImplicit] = @RImplicit, [RImpli" +
                "citSubject] = @RImplicitSubject, [RImplicitMother] = @RImplicitMother, [RImplici" +
                "t2004] = @RImplicit2004, [RExplicitOlderSibVersion] = @RExplicitOlderSibVersion," +
                " [RExplicitYoungerSibVersion] = @RExplicitYoungerSibVersion, [RExplicitPass1] = " +
                "@RExplicitPass1, [RExplicit] = @RExplicit, [RPass1] = @RPass1, [R] = @R, [RFull]" +
                " = @RFull, [RPeek] = @RPeek WHERE (([ID] = @Original_ID) AND ([MultipleBirthIfSa" +
                "meSex] = @Original_MultipleBirthIfSameSex) AND ([IsMz] = @Original_IsMz) AND ((@" +
                "IsNull_LastSurvey_S1 = 1 AND [LastSurvey_S1] IS NULL) OR ([LastSurvey_S1] = @Ori" +
                "ginal_LastSurvey_S1)) AND ((@IsNull_LastSurvey_S2 = 1 AND [LastSurvey_S2] IS NUL" +
                "L) OR ([LastSurvey_S2] = @Original_LastSurvey_S2)) AND ((@IsNull_ImplicitShareBi" +
                "omomPass1 = 1 AND [ImplicitShareBiomomPass1] IS NULL) OR ([ImplicitShareBiomomPa" +
                "ss1] = @Original_ImplicitShareBiomomPass1)) AND ((@IsNull_ImplicitShareBiodadPas" +
                "s1 = 1 AND [ImplicitShareBiodadPass1] IS NULL) OR ([ImplicitShareBiodadPass1] = " +
                "@Original_ImplicitShareBiodadPass1)) AND ((@IsNull_ExplicitShareBiomomPass1 = 1 " +
                "AND [ExplicitShareBiomomPass1] IS NULL) OR ([ExplicitShareBiomomPass1] = @Origin" +
                "al_ExplicitShareBiomomPass1)) AND ((@IsNull_ExplicitShareBiodadPass1 = 1 AND [Ex" +
                "plicitShareBiodadPass1] IS NULL) OR ([ExplicitShareBiodadPass1] = @Original_Expl" +
                "icitShareBiodadPass1)) AND ((@IsNull_ShareBiomomPass1 = 1 AND [ShareBiomomPass1]" +
                " IS NULL) OR ([ShareBiomomPass1] = @Original_ShareBiomomPass1)) AND ((@IsNull_Sh" +
                "areBiodadPass1 = 1 AND [ShareBiodadPass1] IS NULL) OR ([ShareBiodadPass1] = @Ori" +
                "ginal_ShareBiodadPass1)) AND ((@IsNull_RImplicitPass1 = 1 AND [RImplicitPass1] I" +
                "S NULL) OR ([RImplicitPass1] = @Original_RImplicitPass1)) AND ((@IsNull_RImplici" +
                "t = 1 AND [RImplicit] IS NULL) OR ([RImplicit] = @Original_RImplicit)) AND ((@Is" +
                "Null_RImplicitSubject = 1 AND [RImplicitSubject] IS NULL) OR ([RImplicitSubject]" +
                " = @Original_RImplicitSubject)) AND ((@IsNull_RImplicitMother = 1 AND [RImplicit" +
                "Mother] IS NULL) OR ([RImplicitMother] = @Original_RImplicitMother)) AND ((@IsNu" +
                "ll_RImplicit2004 = 1 AND [RImplicit2004] IS NULL) OR ([RImplicit2004] = @Origina" +
                "l_RImplicit2004)) AND ((@IsNull_RExplicitOlderSibVersion = 1 AND [RExplicitOlder" +
                "SibVersion] IS NULL) OR ([RExplicitOlderSibVersion] = @Original_RExplicitOlderSi" +
                "bVersion)) AND ((@IsNull_RExplicitYoungerSibVersion = 1 AND [RExplicitYoungerSib" +
                "Version] IS NULL) OR ([RExplicitYoungerSibVersion] = @Original_RExplicitYoungerS" +
                "ibVersion)) AND ((@IsNull_RExplicitPass1 = 1 AND [RExplicitPass1] IS NULL) OR ([" +
                "RExplicitPass1] = @Original_RExplicitPass1)) AND ((@IsNull_RExplicit = 1 AND [RE" +
                "xplicit] IS NULL) OR ([RExplicit] = @Original_RExplicit)) AND ((@IsNull_RPass1 =" +
                " 1 AND [RPass1] IS NULL) OR ([RPass1] = @Original_RPass1)) AND ((@IsNull_R = 1 A" +
                "ND [R] IS NULL) OR ([R] = @Original_R)) AND ((@IsNull_RFull = 1 AND [RFull] IS N" +
                "ULL) OR ([RFull] = @Original_RFull)) AND ((@IsNull_RPeek = 1 AND [RPeek] IS NULL" +
                ") OR ([RPeek] = @Original_RPeek)));\r\nSELECT ID, MultipleBirthIfSameSex, IsMz, La" +
                "stSurvey_S1, LastSurvey_S2, ImplicitShareBiomomPass1, ImplicitShareBiodadPass1, " +
                "ExplicitShareBiomomPass1, ExplicitShareBiodadPass1, ShareBiomomPass1, ShareBioda" +
                "dPass1, RImplicitPass1, RImplicit, RImplicitSubject, RImplicitMother, RImplicit2" +
                "004, RExplicitOlderSibVersion, RExplicitYoungerSibVersion, RExplicitPass1, RExpl" +
                "icit, RPass1, R, RFull, RPeek FROM Process.tblRelatedValues WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MultipleBirthIfSameSex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MultipleBirthIfSameSex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsMz", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMz", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastSurvey_S1", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastSurvey_S2", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImplicitShareBiomomPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImplicitShareBiomomPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImplicitShareBiodadPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImplicitShareBiodadPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExplicitShareBiomomPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExplicitShareBiomomPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExplicitShareBiodadPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExplicitShareBiodadPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBiomomPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiomomPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBiodadPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiodadPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RImplicitPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RImplicit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RImplicitSubject", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitSubject", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RImplicitMother", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitMother", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RImplicit2004", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit2004", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RExplicitOlderSibVersion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitOlderSibVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RExplicitYoungerSibVersion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitYoungerSibVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RExplicitPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RExplicit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@R", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RFull", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RFull", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RPeek", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPeek", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MultipleBirthIfSameSex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MultipleBirthIfSameSex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsMz", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMz", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastSurvey_S1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastSurvey_S1", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastSurvey_S2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastSurvey_S2", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImplicitShareBiomomPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImplicitShareBiomomPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImplicitShareBiomomPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImplicitShareBiomomPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ImplicitShareBiodadPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImplicitShareBiodadPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImplicitShareBiodadPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImplicitShareBiodadPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExplicitShareBiomomPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExplicitShareBiomomPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExplicitShareBiomomPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExplicitShareBiomomPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExplicitShareBiodadPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExplicitShareBiodadPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExplicitShareBiodadPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExplicitShareBiodadPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShareBiomomPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiomomPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBiomomPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiomomPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShareBiodadPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiodadPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBiodadPass1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiodadPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RImplicitPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RImplicitPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RImplicit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RImplicit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RImplicitSubject", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitSubject", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RImplicitSubject", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitSubject", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RImplicitMother", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitMother", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RImplicitMother", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitMother", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RImplicit2004", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit2004", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RImplicit2004", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit2004", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RExplicitOlderSibVersion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitOlderSibVersion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RExplicitOlderSibVersion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitOlderSibVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RExplicitYoungerSibVersion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitYoungerSibVersion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RExplicitYoungerSibVersion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitYoungerSibVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RExplicitPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RExplicitPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RExplicit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RExplicit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_R", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_R", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RFull", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RFull", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RFull", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RFull", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RPeek", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPeek", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RPeek", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPeek", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Nls.Base79.Properties.Settings.Default.Nlsy79ConnectionStringBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, MultipleBirthIfSameSex, IsMz, LastSurvey_S1, LastSurvey_S2, ImplicitShareBiomomPass1, ImplicitShareBiodadPass1, ExplicitShareBiomomPass1, ExplicitShareBiodadPass1, ShareBiomomPass1, ShareBiodadPass1, RImplicitPass1, RImplicit, RImplicitSubject, RImplicitMother, RImplicit2004, RExplicitOlderSibVersion, RExplicitYoungerSibVersion, RExplicitPass1, RExplicit, RPass1, R, RFull, RPeek FROM Process.tblRelatedValues";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LinksDataSet.tblRelatedValuesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LinksDataSet.tblRelatedValuesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LinksDataSet.tblRelatedValuesDataTable dataTable = new LinksDataSet.tblRelatedValuesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet.tblRelatedValuesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblRelatedValues");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ID, 
                    byte Original_MultipleBirthIfSameSex, 
                    byte Original_IsMz, 
                    global::System.Nullable<short> Original_LastSurvey_S1, 
                    global::System.Nullable<short> Original_LastSurvey_S2, 
                    global::System.Nullable<byte> Original_ImplicitShareBiomomPass1, 
                    global::System.Nullable<byte> Original_ImplicitShareBiodadPass1, 
                    global::System.Nullable<byte> Original_ExplicitShareBiomomPass1, 
                    global::System.Nullable<byte> Original_ExplicitShareBiodadPass1, 
                    global::System.Nullable<byte> Original_ShareBiomomPass1, 
                    global::System.Nullable<byte> Original_ShareBiodadPass1, 
                    global::System.Nullable<double> Original_RImplicitPass1, 
                    global::System.Nullable<double> Original_RImplicit, 
                    global::System.Nullable<double> Original_RImplicitSubject, 
                    global::System.Nullable<double> Original_RImplicitMother, 
                    global::System.Nullable<double> Original_RImplicit2004, 
                    global::System.Nullable<double> Original_RExplicitOlderSibVersion, 
                    global::System.Nullable<double> Original_RExplicitYoungerSibVersion, 
                    global::System.Nullable<double> Original_RExplicitPass1, 
                    global::System.Nullable<double> Original_RExplicit, 
                    global::System.Nullable<double> Original_RPass1, 
                    global::System.Nullable<double> Original_R, 
                    global::System.Nullable<double> Original_RFull, 
                    global::System.Nullable<double> Original_RPeek) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((byte)(Original_MultipleBirthIfSameSex));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((byte)(Original_IsMz));
            if ((Original_LastSurvey_S1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((short)(Original_LastSurvey_S1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_LastSurvey_S2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((short)(Original_LastSurvey_S2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_ImplicitShareBiomomPass1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((byte)(Original_ImplicitShareBiomomPass1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_ImplicitShareBiodadPass1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((byte)(Original_ImplicitShareBiodadPass1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_ExplicitShareBiomomPass1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((byte)(Original_ExplicitShareBiomomPass1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_ExplicitShareBiodadPass1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((byte)(Original_ExplicitShareBiodadPass1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_ShareBiomomPass1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((byte)(Original_ShareBiomomPass1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_ShareBiodadPass1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((byte)(Original_ShareBiodadPass1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_RImplicitPass1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((double)(Original_RImplicitPass1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_RImplicit.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((double)(Original_RImplicit.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_RImplicitSubject.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((double)(Original_RImplicitSubject.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_RImplicitMother.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((double)(Original_RImplicitMother.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_RImplicit2004.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((double)(Original_RImplicit2004.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_RExplicitOlderSibVersion.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((double)(Original_RExplicitOlderSibVersion.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_RExplicitYoungerSibVersion.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((double)(Original_RExplicitYoungerSibVersion.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_RExplicitPass1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((double)(Original_RExplicitPass1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_RExplicit.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((double)(Original_RExplicit.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_RPass1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((double)(Original_RPass1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_R.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((double)(Original_R.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_RFull.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((double)(Original_RFull.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_RPeek.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((double)(Original_RPeek.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int ID, 
                    byte MultipleBirthIfSameSex, 
                    byte IsMz, 
                    global::System.Nullable<short> LastSurvey_S1, 
                    global::System.Nullable<short> LastSurvey_S2, 
                    global::System.Nullable<byte> ImplicitShareBiomomPass1, 
                    global::System.Nullable<byte> ImplicitShareBiodadPass1, 
                    global::System.Nullable<byte> ExplicitShareBiomomPass1, 
                    global::System.Nullable<byte> ExplicitShareBiodadPass1, 
                    global::System.Nullable<byte> ShareBiomomPass1, 
                    global::System.Nullable<byte> ShareBiodadPass1, 
                    global::System.Nullable<double> RImplicitPass1, 
                    global::System.Nullable<double> RImplicit, 
                    global::System.Nullable<double> RImplicitSubject, 
                    global::System.Nullable<double> RImplicitMother, 
                    global::System.Nullable<double> RImplicit2004, 
                    global::System.Nullable<double> RExplicitOlderSibVersion, 
                    global::System.Nullable<double> RExplicitYoungerSibVersion, 
                    global::System.Nullable<double> RExplicitPass1, 
                    global::System.Nullable<double> RExplicit, 
                    global::System.Nullable<double> RPass1, 
                    global::System.Nullable<double> R, 
                    global::System.Nullable<double> RFull, 
                    global::System.Nullable<double> RPeek) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((byte)(MultipleBirthIfSameSex));
            this.Adapter.InsertCommand.Parameters[2].Value = ((byte)(IsMz));
            if ((LastSurvey_S1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((short)(LastSurvey_S1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((LastSurvey_S2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((short)(LastSurvey_S2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ImplicitShareBiomomPass1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((byte)(ImplicitShareBiomomPass1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ImplicitShareBiodadPass1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((byte)(ImplicitShareBiodadPass1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ExplicitShareBiomomPass1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((byte)(ExplicitShareBiomomPass1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ExplicitShareBiodadPass1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((byte)(ExplicitShareBiodadPass1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ShareBiomomPass1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((byte)(ShareBiomomPass1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((ShareBiodadPass1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((byte)(ShareBiodadPass1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((RImplicitPass1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(RImplicitPass1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((RImplicit.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(RImplicit.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((RImplicitSubject.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(RImplicitSubject.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((RImplicitMother.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(RImplicitMother.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((RImplicit2004.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(RImplicit2004.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((RExplicitOlderSibVersion.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((double)(RExplicitOlderSibVersion.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((RExplicitYoungerSibVersion.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((double)(RExplicitYoungerSibVersion.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((RExplicitPass1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((double)(RExplicitPass1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((RExplicit.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((double)(RExplicit.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((RPass1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((double)(RPass1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((R.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((double)(R.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((RFull.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((double)(RFull.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((RPeek.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((double)(RPeek.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID, 
                    byte MultipleBirthIfSameSex, 
                    byte IsMz, 
                    global::System.Nullable<short> LastSurvey_S1, 
                    global::System.Nullable<short> LastSurvey_S2, 
                    global::System.Nullable<byte> ImplicitShareBiomomPass1, 
                    global::System.Nullable<byte> ImplicitShareBiodadPass1, 
                    global::System.Nullable<byte> ExplicitShareBiomomPass1, 
                    global::System.Nullable<byte> ExplicitShareBiodadPass1, 
                    global::System.Nullable<byte> ShareBiomomPass1, 
                    global::System.Nullable<byte> ShareBiodadPass1, 
                    global::System.Nullable<double> RImplicitPass1, 
                    global::System.Nullable<double> RImplicit, 
                    global::System.Nullable<double> RImplicitSubject, 
                    global::System.Nullable<double> RImplicitMother, 
                    global::System.Nullable<double> RImplicit2004, 
                    global::System.Nullable<double> RExplicitOlderSibVersion, 
                    global::System.Nullable<double> RExplicitYoungerSibVersion, 
                    global::System.Nullable<double> RExplicitPass1, 
                    global::System.Nullable<double> RExplicit, 
                    global::System.Nullable<double> RPass1, 
                    global::System.Nullable<double> R, 
                    global::System.Nullable<double> RFull, 
                    global::System.Nullable<double> RPeek, 
                    int Original_ID, 
                    byte Original_MultipleBirthIfSameSex, 
                    byte Original_IsMz, 
                    global::System.Nullable<short> Original_LastSurvey_S1, 
                    global::System.Nullable<short> Original_LastSurvey_S2, 
                    global::System.Nullable<byte> Original_ImplicitShareBiomomPass1, 
                    global::System.Nullable<byte> Original_ImplicitShareBiodadPass1, 
                    global::System.Nullable<byte> Original_ExplicitShareBiomomPass1, 
                    global::System.Nullable<byte> Original_ExplicitShareBiodadPass1, 
                    global::System.Nullable<byte> Original_ShareBiomomPass1, 
                    global::System.Nullable<byte> Original_ShareBiodadPass1, 
                    global::System.Nullable<double> Original_RImplicitPass1, 
                    global::System.Nullable<double> Original_RImplicit, 
                    global::System.Nullable<double> Original_RImplicitSubject, 
                    global::System.Nullable<double> Original_RImplicitMother, 
                    global::System.Nullable<double> Original_RImplicit2004, 
                    global::System.Nullable<double> Original_RExplicitOlderSibVersion, 
                    global::System.Nullable<double> Original_RExplicitYoungerSibVersion, 
                    global::System.Nullable<double> Original_RExplicitPass1, 
                    global::System.Nullable<double> Original_RExplicit, 
                    global::System.Nullable<double> Original_RPass1, 
                    global::System.Nullable<double> Original_R, 
                    global::System.Nullable<double> Original_RFull, 
                    global::System.Nullable<double> Original_RPeek) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((byte)(MultipleBirthIfSameSex));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((byte)(IsMz));
            if ((LastSurvey_S1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(LastSurvey_S1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((LastSurvey_S2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((short)(LastSurvey_S2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ImplicitShareBiomomPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((byte)(ImplicitShareBiomomPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ImplicitShareBiodadPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((byte)(ImplicitShareBiodadPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ExplicitShareBiomomPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((byte)(ExplicitShareBiomomPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ExplicitShareBiodadPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((byte)(ExplicitShareBiodadPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ShareBiomomPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((byte)(ShareBiomomPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((ShareBiodadPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((byte)(ShareBiodadPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((RImplicitPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(RImplicitPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((RImplicit.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(RImplicit.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((RImplicitSubject.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(RImplicitSubject.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((RImplicitMother.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(RImplicitMother.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((RImplicit2004.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(RImplicit2004.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((RExplicitOlderSibVersion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(RExplicitOlderSibVersion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((RExplicitYoungerSibVersion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(RExplicitYoungerSibVersion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((RExplicitPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(RExplicitPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((RExplicit.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(RExplicit.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((RPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(RPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((R.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(R.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((RFull.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(RFull.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((RPeek.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(RPeek.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((byte)(Original_MultipleBirthIfSameSex));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((byte)(Original_IsMz));
            if ((Original_LastSurvey_S1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((short)(Original_LastSurvey_S1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_LastSurvey_S2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((short)(Original_LastSurvey_S2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_ImplicitShareBiomomPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((byte)(Original_ImplicitShareBiomomPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_ImplicitShareBiodadPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((byte)(Original_ImplicitShareBiodadPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_ExplicitShareBiomomPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((byte)(Original_ExplicitShareBiomomPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_ExplicitShareBiodadPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((byte)(Original_ExplicitShareBiodadPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_ShareBiomomPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((byte)(Original_ShareBiomomPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_ShareBiodadPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((byte)(Original_ShareBiodadPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_RImplicitPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((double)(Original_RImplicitPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_RImplicit.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((double)(Original_RImplicit.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_RImplicitSubject.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((double)(Original_RImplicitSubject.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_RImplicitMother.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((double)(Original_RImplicitMother.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_RImplicit2004.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((double)(Original_RImplicit2004.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_RExplicitOlderSibVersion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((double)(Original_RExplicitOlderSibVersion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_RExplicitYoungerSibVersion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((double)(Original_RExplicitYoungerSibVersion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_RExplicitPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((double)(Original_RExplicitPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_RExplicit.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((double)(Original_RExplicit.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_RPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((double)(Original_RPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_R.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((double)(Original_R.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_RFull.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((double)(Original_RFull.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_RPeek.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((double)(Original_RPeek.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    byte MultipleBirthIfSameSex, 
                    byte IsMz, 
                    global::System.Nullable<short> LastSurvey_S1, 
                    global::System.Nullable<short> LastSurvey_S2, 
                    global::System.Nullable<byte> ImplicitShareBiomomPass1, 
                    global::System.Nullable<byte> ImplicitShareBiodadPass1, 
                    global::System.Nullable<byte> ExplicitShareBiomomPass1, 
                    global::System.Nullable<byte> ExplicitShareBiodadPass1, 
                    global::System.Nullable<byte> ShareBiomomPass1, 
                    global::System.Nullable<byte> ShareBiodadPass1, 
                    global::System.Nullable<double> RImplicitPass1, 
                    global::System.Nullable<double> RImplicit, 
                    global::System.Nullable<double> RImplicitSubject, 
                    global::System.Nullable<double> RImplicitMother, 
                    global::System.Nullable<double> RImplicit2004, 
                    global::System.Nullable<double> RExplicitOlderSibVersion, 
                    global::System.Nullable<double> RExplicitYoungerSibVersion, 
                    global::System.Nullable<double> RExplicitPass1, 
                    global::System.Nullable<double> RExplicit, 
                    global::System.Nullable<double> RPass1, 
                    global::System.Nullable<double> R, 
                    global::System.Nullable<double> RFull, 
                    global::System.Nullable<double> RPeek, 
                    int Original_ID, 
                    byte Original_MultipleBirthIfSameSex, 
                    byte Original_IsMz, 
                    global::System.Nullable<short> Original_LastSurvey_S1, 
                    global::System.Nullable<short> Original_LastSurvey_S2, 
                    global::System.Nullable<byte> Original_ImplicitShareBiomomPass1, 
                    global::System.Nullable<byte> Original_ImplicitShareBiodadPass1, 
                    global::System.Nullable<byte> Original_ExplicitShareBiomomPass1, 
                    global::System.Nullable<byte> Original_ExplicitShareBiodadPass1, 
                    global::System.Nullable<byte> Original_ShareBiomomPass1, 
                    global::System.Nullable<byte> Original_ShareBiodadPass1, 
                    global::System.Nullable<double> Original_RImplicitPass1, 
                    global::System.Nullable<double> Original_RImplicit, 
                    global::System.Nullable<double> Original_RImplicitSubject, 
                    global::System.Nullable<double> Original_RImplicitMother, 
                    global::System.Nullable<double> Original_RImplicit2004, 
                    global::System.Nullable<double> Original_RExplicitOlderSibVersion, 
                    global::System.Nullable<double> Original_RExplicitYoungerSibVersion, 
                    global::System.Nullable<double> Original_RExplicitPass1, 
                    global::System.Nullable<double> Original_RExplicit, 
                    global::System.Nullable<double> Original_RPass1, 
                    global::System.Nullable<double> Original_R, 
                    global::System.Nullable<double> Original_RFull, 
                    global::System.Nullable<double> Original_RPeek) {
            return this.Update(Original_ID, MultipleBirthIfSameSex, IsMz, LastSurvey_S1, LastSurvey_S2, ImplicitShareBiomomPass1, ImplicitShareBiodadPass1, ExplicitShareBiomomPass1, ExplicitShareBiodadPass1, ShareBiomomPass1, ShareBiodadPass1, RImplicitPass1, RImplicit, RImplicitSubject, RImplicitMother, RImplicit2004, RExplicitOlderSibVersion, RExplicitYoungerSibVersion, RExplicitPass1, RExplicit, RPass1, R, RFull, RPeek, Original_ID, Original_MultipleBirthIfSameSex, Original_IsMz, Original_LastSurvey_S1, Original_LastSurvey_S2, Original_ImplicitShareBiomomPass1, Original_ImplicitShareBiodadPass1, Original_ExplicitShareBiomomPass1, Original_ExplicitShareBiodadPass1, Original_ShareBiomomPass1, Original_ShareBiodadPass1, Original_RImplicitPass1, Original_RImplicit, Original_RImplicitSubject, Original_RImplicitMother, Original_RImplicit2004, Original_RExplicitOlderSibVersion, Original_RExplicitYoungerSibVersion, Original_RExplicitPass1, Original_RExplicit, Original_RPass1, Original_R, Original_RFull, Original_RPeek);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblSubjectDetailsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tblSubjectDetailsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblSubjectDetails";
            tableMapping.ColumnMappings.Add("SubjectTag", "SubjectTag");
            tableMapping.ColumnMappings.Add("RaceCohort", "RaceCohort");
            tableMapping.ColumnMappings.Add("SiblingCountInNls", "SiblingCountInNls");
            tableMapping.ColumnMappings.Add("BirthOrderInNls", "BirthOrderInNls");
            tableMapping.ColumnMappings.Add("SimilarAgeCount", "SimilarAgeCount");
            tableMapping.ColumnMappings.Add("HasMzPossibly", "HasMzPossibly");
            tableMapping.ColumnMappings.Add("KidCountBio", "KidCountBio");
            tableMapping.ColumnMappings.Add("KidCountInNls", "KidCountInNls");
            tableMapping.ColumnMappings.Add("Mob", "Mob");
            tableMapping.ColumnMappings.Add("LastSurveyYearCompleted", "LastSurveyYearCompleted");
            tableMapping.ColumnMappings.Add("AgeAtLastSurvey", "AgeAtLastSurvey");
            tableMapping.ColumnMappings.Add("IsDead", "IsDead");
            tableMapping.ColumnMappings.Add("DeathDate", "DeathDate");
            tableMapping.ColumnMappings.Add("IsBiodadDead", "IsBiodadDead");
            tableMapping.ColumnMappings.Add("BiodadDeathDate", "BiodadDeathDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Process].[tblSubjectDetails] WHERE (([SubjectTag] = @Original_SubjectTag) AND ([RaceCohort] = @Original_RaceCohort) AND ([SiblingCountInNls] = @Original_SiblingCountInNls) AND ([BirthOrderInNls] = @Original_BirthOrderInNls) AND ([SimilarAgeCount] = @Original_SimilarAgeCount) AND ([HasMzPossibly] = @Original_HasMzPossibly) AND ((@IsNull_KidCountBio = 1 AND [KidCountBio] IS NULL) OR ([KidCountBio] = @Original_KidCountBio)) AND ((@IsNull_KidCountInNls = 1 AND [KidCountInNls] IS NULL) OR ([KidCountInNls] = @Original_KidCountInNls)) AND ((@IsNull_Mob = 1 AND [Mob] IS NULL) OR ([Mob] = @Original_Mob)) AND ((@IsNull_LastSurveyYearCompleted = 1 AND [LastSurveyYearCompleted] IS NULL) OR ([LastSurveyYearCompleted] = @Original_LastSurveyYearCompleted)) AND ((@IsNull_AgeAtLastSurvey = 1 AND [AgeAtLastSurvey] IS NULL) OR ([AgeAtLastSurvey] = @Original_AgeAtLastSurvey)) AND ([IsDead] = @Original_IsDead) AND ((@IsNull_DeathDate = 1 AND [DeathDate] IS NULL) OR ([DeathDate] = @Original_DeathDate)) AND ((@IsNull_IsBiodadDead = 1 AND [IsBiodadDead] IS NULL) OR ([IsBiodadDead] = @Original_IsBiodadDead)) AND ((@IsNull_BiodadDeathDate = 1 AND [BiodadDeathDate] IS NULL) OR ([BiodadDeathDate] = @Original_BiodadDeathDate)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RaceCohort", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RaceCohort", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SiblingCountInNls", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiblingCountInNls", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BirthOrderInNls", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BirthOrderInNls", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SimilarAgeCount", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SimilarAgeCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HasMzPossibly", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasMzPossibly", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KidCountBio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KidCountBio", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KidCountBio", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KidCountBio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KidCountInNls", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KidCountInNls", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KidCountInNls", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KidCountInNls", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mob", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mob", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mob", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mob", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastSurveyYearCompleted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurveyYearCompleted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastSurveyYearCompleted", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurveyYearCompleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AgeAtLastSurvey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeAtLastSurvey", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AgeAtLastSurvey", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeAtLastSurvey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsDead", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsDead", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeathDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeathDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeathDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeathDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsBiodadDead", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsBiodadDead", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsBiodadDead", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsBiodadDead", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiodadDeathDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDeathDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadDeathDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDeathDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Process].[tblSubjectDetails] ([SubjectTag], [RaceCohort], [SiblingCountInNls], [BirthOrderInNls], [SimilarAgeCount], [HasMzPossibly], [KidCountBio], [KidCountInNls], [Mob], [LastSurveyYearCompleted], [AgeAtLastSurvey], [IsDead], [DeathDate], [IsBiodadDead], [BiodadDeathDate]) VALUES (@SubjectTag, @RaceCohort, @SiblingCountInNls, @BirthOrderInNls, @SimilarAgeCount, @HasMzPossibly, @KidCountBio, @KidCountInNls, @Mob, @LastSurveyYearCompleted, @AgeAtLastSurvey, @IsDead, @DeathDate, @IsBiodadDead, @BiodadDeathDate);
SELECT SubjectTag, RaceCohort, SiblingCountInNls, BirthOrderInNls, SimilarAgeCount, HasMzPossibly, KidCountBio, KidCountInNls, Mob, LastSurveyYearCompleted, AgeAtLastSurvey, IsDead, DeathDate, IsBiodadDead, BiodadDeathDate FROM Process.tblSubjectDetails WHERE (SubjectTag = @SubjectTag)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RaceCohort", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RaceCohort", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SiblingCountInNls", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiblingCountInNls", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BirthOrderInNls", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BirthOrderInNls", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SimilarAgeCount", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SimilarAgeCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasMzPossibly", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasMzPossibly", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KidCountBio", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KidCountBio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KidCountInNls", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KidCountInNls", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mob", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mob", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastSurveyYearCompleted", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurveyYearCompleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeAtLastSurvey", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeAtLastSurvey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsDead", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsDead", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeathDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeathDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsBiodadDead", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsBiodadDead", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadDeathDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDeathDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Process].[tblSubjectDetails] SET [SubjectTag] = @SubjectTag, [RaceCohort]" +
                " = @RaceCohort, [SiblingCountInNls] = @SiblingCountInNls, [BirthOrderInNls] = @B" +
                "irthOrderInNls, [SimilarAgeCount] = @SimilarAgeCount, [HasMzPossibly] = @HasMzPo" +
                "ssibly, [KidCountBio] = @KidCountBio, [KidCountInNls] = @KidCountInNls, [Mob] = " +
                "@Mob, [LastSurveyYearCompleted] = @LastSurveyYearCompleted, [AgeAtLastSurvey] = " +
                "@AgeAtLastSurvey, [IsDead] = @IsDead, [DeathDate] = @DeathDate, [IsBiodadDead] =" +
                " @IsBiodadDead, [BiodadDeathDate] = @BiodadDeathDate WHERE (([SubjectTag] = @Ori" +
                "ginal_SubjectTag) AND ([RaceCohort] = @Original_RaceCohort) AND ([SiblingCountIn" +
                "Nls] = @Original_SiblingCountInNls) AND ([BirthOrderInNls] = @Original_BirthOrde" +
                "rInNls) AND ([SimilarAgeCount] = @Original_SimilarAgeCount) AND ([HasMzPossibly]" +
                " = @Original_HasMzPossibly) AND ((@IsNull_KidCountBio = 1 AND [KidCountBio] IS N" +
                "ULL) OR ([KidCountBio] = @Original_KidCountBio)) AND ((@IsNull_KidCountInNls = 1" +
                " AND [KidCountInNls] IS NULL) OR ([KidCountInNls] = @Original_KidCountInNls)) AN" +
                "D ((@IsNull_Mob = 1 AND [Mob] IS NULL) OR ([Mob] = @Original_Mob)) AND ((@IsNull" +
                "_LastSurveyYearCompleted = 1 AND [LastSurveyYearCompleted] IS NULL) OR ([LastSur" +
                "veyYearCompleted] = @Original_LastSurveyYearCompleted)) AND ((@IsNull_AgeAtLastS" +
                "urvey = 1 AND [AgeAtLastSurvey] IS NULL) OR ([AgeAtLastSurvey] = @Original_AgeAt" +
                "LastSurvey)) AND ([IsDead] = @Original_IsDead) AND ((@IsNull_DeathDate = 1 AND [" +
                "DeathDate] IS NULL) OR ([DeathDate] = @Original_DeathDate)) AND ((@IsNull_IsBiod" +
                "adDead = 1 AND [IsBiodadDead] IS NULL) OR ([IsBiodadDead] = @Original_IsBiodadDe" +
                "ad)) AND ((@IsNull_BiodadDeathDate = 1 AND [BiodadDeathDate] IS NULL) OR ([Bioda" +
                "dDeathDate] = @Original_BiodadDeathDate)));\r\nSELECT SubjectTag, RaceCohort, Sibl" +
                "ingCountInNls, BirthOrderInNls, SimilarAgeCount, HasMzPossibly, KidCountBio, Kid" +
                "CountInNls, Mob, LastSurveyYearCompleted, AgeAtLastSurvey, IsDead, DeathDate, Is" +
                "BiodadDead, BiodadDeathDate FROM Process.tblSubjectDetails WHERE (SubjectTag = @" +
                "SubjectTag)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RaceCohort", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RaceCohort", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SiblingCountInNls", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiblingCountInNls", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BirthOrderInNls", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BirthOrderInNls", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SimilarAgeCount", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SimilarAgeCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HasMzPossibly", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasMzPossibly", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KidCountBio", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KidCountBio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KidCountInNls", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KidCountInNls", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Mob", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mob", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastSurveyYearCompleted", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurveyYearCompleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AgeAtLastSurvey", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeAtLastSurvey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsDead", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsDead", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeathDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeathDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsBiodadDead", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsBiodadDead", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BiodadDeathDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDeathDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RaceCohort", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RaceCohort", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SiblingCountInNls", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiblingCountInNls", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BirthOrderInNls", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BirthOrderInNls", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SimilarAgeCount", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SimilarAgeCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HasMzPossibly", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HasMzPossibly", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KidCountBio", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KidCountBio", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KidCountBio", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KidCountBio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KidCountInNls", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KidCountInNls", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KidCountInNls", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KidCountInNls", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Mob", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mob", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Mob", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Mob", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastSurveyYearCompleted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurveyYearCompleted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastSurveyYearCompleted", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurveyYearCompleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AgeAtLastSurvey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeAtLastSurvey", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AgeAtLastSurvey", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AgeAtLastSurvey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsDead", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsDead", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeathDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeathDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeathDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeathDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsBiodadDead", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsBiodadDead", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsBiodadDead", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsBiodadDead", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BiodadDeathDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDeathDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BiodadDeathDate", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BiodadDeathDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Nls.Base79.Properties.Settings.Default.Nlsy79ConnectionStringBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SubjectTag, RaceCohort, SiblingCountInNls, BirthOrderInNls, SimilarAgeCoun" +
                "t, HasMzPossibly, KidCountBio, KidCountInNls, Mob, LastSurveyYearCompleted, AgeA" +
                "tLastSurvey, IsDead, DeathDate, IsBiodadDead, BiodadDeathDate FROM Process.tblSu" +
                "bjectDetails";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LinksDataSet.tblSubjectDetailsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LinksDataSet.tblSubjectDetailsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LinksDataSet.tblSubjectDetailsDataTable dataTable = new LinksDataSet.tblSubjectDetailsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet.tblSubjectDetailsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblSubjectDetails");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_SubjectTag, byte Original_RaceCohort, byte Original_SiblingCountInNls, byte Original_BirthOrderInNls, byte Original_SimilarAgeCount, bool Original_HasMzPossibly, global::System.Nullable<byte> Original_KidCountBio, global::System.Nullable<byte> Original_KidCountInNls, global::System.Nullable<global::System.DateTime> Original_Mob, global::System.Nullable<short> Original_LastSurveyYearCompleted, global::System.Nullable<double> Original_AgeAtLastSurvey, bool Original_IsDead, global::System.Nullable<global::System.DateTime> Original_DeathDate, global::System.Nullable<bool> Original_IsBiodadDead, global::System.Nullable<global::System.DateTime> Original_BiodadDeathDate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_SubjectTag));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((byte)(Original_RaceCohort));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((byte)(Original_SiblingCountInNls));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((byte)(Original_BirthOrderInNls));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((byte)(Original_SimilarAgeCount));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_HasMzPossibly));
            if ((Original_KidCountBio.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((byte)(Original_KidCountBio.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_KidCountInNls.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((byte)(Original_KidCountInNls.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_Mob.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_Mob.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_LastSurveyYearCompleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((short)(Original_LastSurveyYearCompleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_AgeAtLastSurvey.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((double)(Original_AgeAtLastSurvey.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[16].Value = ((bool)(Original_IsDead));
            if ((Original_DeathDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTime)(Original_DeathDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_IsBiodadDead.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((bool)(Original_IsBiodadDead.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_BiodadDeathDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((System.DateTime)(Original_BiodadDeathDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int SubjectTag, byte RaceCohort, byte SiblingCountInNls, byte BirthOrderInNls, byte SimilarAgeCount, bool HasMzPossibly, global::System.Nullable<byte> KidCountBio, global::System.Nullable<byte> KidCountInNls, global::System.Nullable<global::System.DateTime> Mob, global::System.Nullable<short> LastSurveyYearCompleted, global::System.Nullable<double> AgeAtLastSurvey, bool IsDead, global::System.Nullable<global::System.DateTime> DeathDate, global::System.Nullable<bool> IsBiodadDead, global::System.Nullable<global::System.DateTime> BiodadDeathDate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(SubjectTag));
            this.Adapter.InsertCommand.Parameters[1].Value = ((byte)(RaceCohort));
            this.Adapter.InsertCommand.Parameters[2].Value = ((byte)(SiblingCountInNls));
            this.Adapter.InsertCommand.Parameters[3].Value = ((byte)(BirthOrderInNls));
            this.Adapter.InsertCommand.Parameters[4].Value = ((byte)(SimilarAgeCount));
            this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(HasMzPossibly));
            if ((KidCountBio.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((byte)(KidCountBio.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((KidCountInNls.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((byte)(KidCountInNls.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Mob.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(Mob.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((LastSurveyYearCompleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((short)(LastSurveyYearCompleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((AgeAtLastSurvey.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(AgeAtLastSurvey.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(IsDead));
            if ((DeathDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(DeathDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((IsBiodadDead.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(IsBiodadDead.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((BiodadDeathDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(BiodadDeathDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int SubjectTag, 
                    byte RaceCohort, 
                    byte SiblingCountInNls, 
                    byte BirthOrderInNls, 
                    byte SimilarAgeCount, 
                    bool HasMzPossibly, 
                    global::System.Nullable<byte> KidCountBio, 
                    global::System.Nullable<byte> KidCountInNls, 
                    global::System.Nullable<global::System.DateTime> Mob, 
                    global::System.Nullable<short> LastSurveyYearCompleted, 
                    global::System.Nullable<double> AgeAtLastSurvey, 
                    bool IsDead, 
                    global::System.Nullable<global::System.DateTime> DeathDate, 
                    global::System.Nullable<bool> IsBiodadDead, 
                    global::System.Nullable<global::System.DateTime> BiodadDeathDate, 
                    int Original_SubjectTag, 
                    byte Original_RaceCohort, 
                    byte Original_SiblingCountInNls, 
                    byte Original_BirthOrderInNls, 
                    byte Original_SimilarAgeCount, 
                    bool Original_HasMzPossibly, 
                    global::System.Nullable<byte> Original_KidCountBio, 
                    global::System.Nullable<byte> Original_KidCountInNls, 
                    global::System.Nullable<global::System.DateTime> Original_Mob, 
                    global::System.Nullable<short> Original_LastSurveyYearCompleted, 
                    global::System.Nullable<double> Original_AgeAtLastSurvey, 
                    bool Original_IsDead, 
                    global::System.Nullable<global::System.DateTime> Original_DeathDate, 
                    global::System.Nullable<bool> Original_IsBiodadDead, 
                    global::System.Nullable<global::System.DateTime> Original_BiodadDeathDate) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(SubjectTag));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((byte)(RaceCohort));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((byte)(SiblingCountInNls));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((byte)(BirthOrderInNls));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((byte)(SimilarAgeCount));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(HasMzPossibly));
            if ((KidCountBio.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((byte)(KidCountBio.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((KidCountInNls.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((byte)(KidCountInNls.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Mob.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Mob.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((LastSurveyYearCompleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((short)(LastSurveyYearCompleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((AgeAtLastSurvey.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(AgeAtLastSurvey.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(IsDead));
            if ((DeathDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(DeathDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((IsBiodadDead.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(IsBiodadDead.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((BiodadDeathDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(BiodadDeathDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_SubjectTag));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((byte)(Original_RaceCohort));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((byte)(Original_SiblingCountInNls));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((byte)(Original_BirthOrderInNls));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((byte)(Original_SimilarAgeCount));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(Original_HasMzPossibly));
            if ((Original_KidCountBio.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((byte)(Original_KidCountBio.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_KidCountInNls.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((byte)(Original_KidCountInNls.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Mob.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Original_Mob.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_LastSurveyYearCompleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((short)(Original_LastSurveyYearCompleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_AgeAtLastSurvey.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((double)(Original_AgeAtLastSurvey.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(Original_IsDead));
            if ((Original_DeathDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(Original_DeathDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_IsBiodadDead.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(Original_IsBiodadDead.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_BiodadDeathDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(Original_BiodadDeathDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    byte RaceCohort, 
                    byte SiblingCountInNls, 
                    byte BirthOrderInNls, 
                    byte SimilarAgeCount, 
                    bool HasMzPossibly, 
                    global::System.Nullable<byte> KidCountBio, 
                    global::System.Nullable<byte> KidCountInNls, 
                    global::System.Nullable<global::System.DateTime> Mob, 
                    global::System.Nullable<short> LastSurveyYearCompleted, 
                    global::System.Nullable<double> AgeAtLastSurvey, 
                    bool IsDead, 
                    global::System.Nullable<global::System.DateTime> DeathDate, 
                    global::System.Nullable<bool> IsBiodadDead, 
                    global::System.Nullable<global::System.DateTime> BiodadDeathDate, 
                    int Original_SubjectTag, 
                    byte Original_RaceCohort, 
                    byte Original_SiblingCountInNls, 
                    byte Original_BirthOrderInNls, 
                    byte Original_SimilarAgeCount, 
                    bool Original_HasMzPossibly, 
                    global::System.Nullable<byte> Original_KidCountBio, 
                    global::System.Nullable<byte> Original_KidCountInNls, 
                    global::System.Nullable<global::System.DateTime> Original_Mob, 
                    global::System.Nullable<short> Original_LastSurveyYearCompleted, 
                    global::System.Nullable<double> Original_AgeAtLastSurvey, 
                    bool Original_IsDead, 
                    global::System.Nullable<global::System.DateTime> Original_DeathDate, 
                    global::System.Nullable<bool> Original_IsBiodadDead, 
                    global::System.Nullable<global::System.DateTime> Original_BiodadDeathDate) {
            return this.Update(Original_SubjectTag, RaceCohort, SiblingCountInNls, BirthOrderInNls, SimilarAgeCount, HasMzPossibly, KidCountBio, KidCountInNls, Mob, LastSurveyYearCompleted, AgeAtLastSurvey, IsDead, DeathDate, IsBiodadDead, BiodadDeathDate, Original_SubjectTag, Original_RaceCohort, Original_SiblingCountInNls, Original_BirthOrderInNls, Original_SimilarAgeCount, Original_HasMzPossibly, Original_KidCountBio, Original_KidCountInNls, Original_Mob, Original_LastSurveyYearCompleted, Original_AgeAtLastSurvey, Original_IsDead, Original_DeathDate, Original_IsBiodadDead, Original_BiodadDeathDate);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblMzManualTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tblMzManualTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblMzManual";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("SubjectTag_S1", "SubjectTag_S1");
            tableMapping.ColumnMappings.Add("SubjectTag_S2", "SubjectTag_S2");
            tableMapping.ColumnMappings.Add("Generation", "Generation");
            tableMapping.ColumnMappings.Add("MultipleBirthIfSameSex", "MultipleBirthIfSameSex");
            tableMapping.ColumnMappings.Add("IsMz", "IsMz");
            tableMapping.ColumnMappings.Add("Undecided", "Undecided");
            tableMapping.ColumnMappings.Add("Related", "Related");
            tableMapping.ColumnMappings.Add("Notes", "Notes");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Metadata].[tblMzManual] WHERE (([ID] = @Original_ID) AND ([SubjectTag_S1] = @Original_SubjectTag_S1) AND ([SubjectTag_S2] = @Original_SubjectTag_S2) AND ([Generation] = @Original_Generation) AND ([MultipleBirthIfSameSex] = @Original_MultipleBirthIfSameSex) AND ([IsMz] = @Original_IsMz) AND ([Undecided] = @Original_Undecided) AND ((@IsNull_Related = 1 AND [Related] IS NULL) OR ([Related] = @Original_Related)) AND ((@IsNull_Notes = 1 AND [Notes] IS NULL) OR ([Notes] = @Original_Notes)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag_S1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag_S2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Generation", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Generation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MultipleBirthIfSameSex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MultipleBirthIfSameSex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsMz", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMz", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Undecided", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Undecided", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Related", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Related", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Related", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Related", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Notes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Notes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Metadata].[tblMzManual] ([ID], [SubjectTag_S1], [SubjectTag_S2], [Generation], [MultipleBirthIfSameSex], [IsMz], [Undecided], [Related], [Notes]) VALUES (@ID, @SubjectTag_S1, @SubjectTag_S2, @Generation, @MultipleBirthIfSameSex, @IsMz, @Undecided, @Related, @Notes);
SELECT ID, SubjectTag_S1, SubjectTag_S2, Generation, MultipleBirthIfSameSex, IsMz, Undecided, Related, Notes FROM Metadata.tblMzManual WHERE (ID = @ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag_S1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag_S2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Generation", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Generation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MultipleBirthIfSameSex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MultipleBirthIfSameSex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsMz", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMz", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Undecided", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Undecided", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Related", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Related", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Notes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Metadata].[tblMzManual] SET [ID] = @ID, [SubjectTag_S1] = @SubjectTag_S1, [SubjectTag_S2] = @SubjectTag_S2, [Generation] = @Generation, [MultipleBirthIfSameSex] = @MultipleBirthIfSameSex, [IsMz] = @IsMz, [Undecided] = @Undecided, [Related] = @Related, [Notes] = @Notes WHERE (([ID] = @Original_ID) AND ([SubjectTag_S1] = @Original_SubjectTag_S1) AND ([SubjectTag_S2] = @Original_SubjectTag_S2) AND ([Generation] = @Original_Generation) AND ([MultipleBirthIfSameSex] = @Original_MultipleBirthIfSameSex) AND ([IsMz] = @Original_IsMz) AND ([Undecided] = @Original_Undecided) AND ((@IsNull_Related = 1 AND [Related] IS NULL) OR ([Related] = @Original_Related)) AND ((@IsNull_Notes = 1 AND [Notes] IS NULL) OR ([Notes] = @Original_Notes)));
SELECT ID, SubjectTag_S1, SubjectTag_S2, Generation, MultipleBirthIfSameSex, IsMz, Undecided, Related, Notes FROM Metadata.tblMzManual WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag_S1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag_S2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Generation", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Generation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MultipleBirthIfSameSex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MultipleBirthIfSameSex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsMz", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMz", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Undecided", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Undecided", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Related", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Related", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Notes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag_S1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag_S2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Generation", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Generation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MultipleBirthIfSameSex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MultipleBirthIfSameSex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsMz", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMz", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Undecided", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Undecided", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Related", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Related", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Related", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Related", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Notes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Notes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Nls.Base79.Properties.Settings.Default.Nlsy79ConnectionStringBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, SubjectTag_S1, SubjectTag_S2, Generation, MultipleBirthIfSameSex, IsMz" +
                ", Undecided, Related, Notes FROM Metadata.tblMzManual";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LinksDataSet.tblMzManualDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LinksDataSet.tblMzManualDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LinksDataSet.tblMzManualDataTable dataTable = new LinksDataSet.tblMzManualDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet.tblMzManualDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblMzManual");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, int Original_SubjectTag_S1, int Original_SubjectTag_S2, byte Original_Generation, byte Original_MultipleBirthIfSameSex, byte Original_IsMz, bool Original_Undecided, global::System.Nullable<bool> Original_Related, string Original_Notes) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_SubjectTag_S1));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_SubjectTag_S2));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((byte)(Original_Generation));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((byte)(Original_MultipleBirthIfSameSex));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((byte)(Original_IsMz));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_Undecided));
            if ((Original_Related.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((bool)(Original_Related.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Notes == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Notes));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID, int SubjectTag_S1, int SubjectTag_S2, byte Generation, byte MultipleBirthIfSameSex, byte IsMz, bool Undecided, global::System.Nullable<bool> Related, string Notes) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(SubjectTag_S1));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(SubjectTag_S2));
            this.Adapter.InsertCommand.Parameters[3].Value = ((byte)(Generation));
            this.Adapter.InsertCommand.Parameters[4].Value = ((byte)(MultipleBirthIfSameSex));
            this.Adapter.InsertCommand.Parameters[5].Value = ((byte)(IsMz));
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(Undecided));
            if ((Related.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(Related.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Notes == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Notes));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ID, 
                    int SubjectTag_S1, 
                    int SubjectTag_S2, 
                    byte Generation, 
                    byte MultipleBirthIfSameSex, 
                    byte IsMz, 
                    bool Undecided, 
                    global::System.Nullable<bool> Related, 
                    string Notes, 
                    int Original_ID, 
                    int Original_SubjectTag_S1, 
                    int Original_SubjectTag_S2, 
                    byte Original_Generation, 
                    byte Original_MultipleBirthIfSameSex, 
                    byte Original_IsMz, 
                    bool Original_Undecided, 
                    global::System.Nullable<bool> Original_Related, 
                    string Original_Notes) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(SubjectTag_S1));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(SubjectTag_S2));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((byte)(Generation));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((byte)(MultipleBirthIfSameSex));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((byte)(IsMz));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(Undecided));
            if ((Related.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(Related.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Notes == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Notes));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_SubjectTag_S1));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_SubjectTag_S2));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((byte)(Original_Generation));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((byte)(Original_MultipleBirthIfSameSex));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((byte)(Original_IsMz));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(Original_Undecided));
            if ((Original_Related.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(Original_Related.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Notes == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Notes));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int SubjectTag_S1, 
                    int SubjectTag_S2, 
                    byte Generation, 
                    byte MultipleBirthIfSameSex, 
                    byte IsMz, 
                    bool Undecided, 
                    global::System.Nullable<bool> Related, 
                    string Notes, 
                    int Original_ID, 
                    int Original_SubjectTag_S1, 
                    int Original_SubjectTag_S2, 
                    byte Original_Generation, 
                    byte Original_MultipleBirthIfSameSex, 
                    byte Original_IsMz, 
                    bool Original_Undecided, 
                    global::System.Nullable<bool> Original_Related, 
                    string Original_Notes) {
            return this.Update(Original_ID, SubjectTag_S1, SubjectTag_S2, Generation, MultipleBirthIfSameSex, IsMz, Undecided, Related, Notes, Original_ID, Original_SubjectTag_S1, Original_SubjectTag_S2, Original_Generation, Original_MultipleBirthIfSameSex, Original_IsMz, Original_Undecided, Original_Related, Original_Notes);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblRosterGen1AssignmentTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tblRosterGen1AssignmentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblRosterGen1Assignment";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("ResponseLower", "ResponseLower");
            tableMapping.ColumnMappings.Add("ResponseUpper", "ResponseUpper");
            tableMapping.ColumnMappings.Add("Freq", "Freq");
            tableMapping.ColumnMappings.Add("Resolved", "Resolved");
            tableMapping.ColumnMappings.Add("R", "R");
            tableMapping.ColumnMappings.Add("RBoundLower", "RBoundLower");
            tableMapping.ColumnMappings.Add("RBoundUpper", "RBoundUpper");
            tableMapping.ColumnMappings.Add("SameGeneration", "SameGeneration");
            tableMapping.ColumnMappings.Add("ShareBiodad", "ShareBiodad");
            tableMapping.ColumnMappings.Add("ShareBiomom", "ShareBiomom");
            tableMapping.ColumnMappings.Add("ShareBiograndparent", "ShareBiograndparent");
            tableMapping.ColumnMappings.Add("Inconsistent", "Inconsistent");
            tableMapping.ColumnMappings.Add("Notes", "Notes");
            tableMapping.ColumnMappings.Add("ResponseLowerLabel", "ResponseLowerLabel");
            tableMapping.ColumnMappings.Add("ResponseUpperLabel", "ResponseUpperLabel");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Metadata].[tblRosterGen1Assignment] WHERE (([ID] = @Original_ID) AND ([ResponseLower] = @Original_ResponseLower) AND ([ResponseUpper] = @Original_ResponseUpper) AND ([Freq] = @Original_Freq) AND ([Resolved] = @Original_Resolved) AND ((@IsNull_R = 1 AND [R] IS NULL) OR ([R] = @Original_R)) AND ([RBoundLower] = @Original_RBoundLower) AND ([RBoundUpper] = @Original_RBoundUpper) AND ([SameGeneration] = @Original_SameGeneration) AND ([ShareBiodad] = @Original_ShareBiodad) AND ([ShareBiomom] = @Original_ShareBiomom) AND ([ShareBiograndparent] = @Original_ShareBiograndparent) AND ([Inconsistent] = @Original_Inconsistent) AND ((@IsNull_Notes = 1 AND [Notes] IS NULL) OR ([Notes] = @Original_Notes)) AND ((@IsNull_ResponseLowerLabel = 1 AND [ResponseLowerLabel] IS NULL) OR ([ResponseLowerLabel] = @Original_ResponseLowerLabel)) AND ((@IsNull_ResponseUpperLabel = 1 AND [ResponseUpperLabel] IS NULL) OR ([ResponseUpperLabel] = @Original_ResponseUpperLabel)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ResponseLower", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseLower", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ResponseUpper", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseUpper", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Freq", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Freq", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Resolved", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Resolved", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_R", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_R", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RBoundLower", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RBoundLower", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RBoundUpper", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RBoundUpper", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SameGeneration", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SameGeneration", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBiodad", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiodad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBiomom", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiomom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBiograndparent", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiograndparent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inconsistent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inconsistent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Notes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Notes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ResponseLowerLabel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseLowerLabel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ResponseLowerLabel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseLowerLabel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ResponseUpperLabel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseUpperLabel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ResponseUpperLabel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseUpperLabel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Metadata].[tblRosterGen1Assignment] ([ID], [ResponseLower], [ResponseUpper], [Freq], [Resolved], [R], [RBoundLower], [RBoundUpper], [SameGeneration], [ShareBiodad], [ShareBiomom], [ShareBiograndparent], [Inconsistent], [Notes], [ResponseLowerLabel], [ResponseUpperLabel]) VALUES (@ID, @ResponseLower, @ResponseUpper, @Freq, @Resolved, @R, @RBoundLower, @RBoundUpper, @SameGeneration, @ShareBiodad, @ShareBiomom, @ShareBiograndparent, @Inconsistent, @Notes, @ResponseLowerLabel, @ResponseUpperLabel);
SELECT ID, ResponseLower, ResponseUpper, Freq, Resolved, R, RBoundLower, RBoundUpper, SameGeneration, ShareBiodad, ShareBiomom, ShareBiograndparent, Inconsistent, Notes, ResponseLowerLabel, ResponseUpperLabel FROM Metadata.tblRosterGen1Assignment WHERE (ID = @ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResponseLower", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseLower", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResponseUpper", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseUpper", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Freq", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Freq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Resolved", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Resolved", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@R", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RBoundLower", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RBoundLower", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RBoundUpper", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RBoundUpper", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SameGeneration", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SameGeneration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBiodad", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiodad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBiomom", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiomom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBiograndparent", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiograndparent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inconsistent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inconsistent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Notes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResponseLowerLabel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseLowerLabel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResponseUpperLabel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseUpperLabel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Metadata].[tblRosterGen1Assignment] SET [ID] = @ID, [ResponseLower] = @Re" +
                "sponseLower, [ResponseUpper] = @ResponseUpper, [Freq] = @Freq, [Resolved] = @Res" +
                "olved, [R] = @R, [RBoundLower] = @RBoundLower, [RBoundUpper] = @RBoundUpper, [Sa" +
                "meGeneration] = @SameGeneration, [ShareBiodad] = @ShareBiodad, [ShareBiomom] = @" +
                "ShareBiomom, [ShareBiograndparent] = @ShareBiograndparent, [Inconsistent] = @Inc" +
                "onsistent, [Notes] = @Notes, [ResponseLowerLabel] = @ResponseLowerLabel, [Respon" +
                "seUpperLabel] = @ResponseUpperLabel WHERE (([ID] = @Original_ID) AND ([ResponseL" +
                "ower] = @Original_ResponseLower) AND ([ResponseUpper] = @Original_ResponseUpper)" +
                " AND ([Freq] = @Original_Freq) AND ([Resolved] = @Original_Resolved) AND ((@IsNu" +
                "ll_R = 1 AND [R] IS NULL) OR ([R] = @Original_R)) AND ([RBoundLower] = @Original" +
                "_RBoundLower) AND ([RBoundUpper] = @Original_RBoundUpper) AND ([SameGeneration] " +
                "= @Original_SameGeneration) AND ([ShareBiodad] = @Original_ShareBiodad) AND ([Sh" +
                "areBiomom] = @Original_ShareBiomom) AND ([ShareBiograndparent] = @Original_Share" +
                "Biograndparent) AND ([Inconsistent] = @Original_Inconsistent) AND ((@IsNull_Note" +
                "s = 1 AND [Notes] IS NULL) OR ([Notes] = @Original_Notes)) AND ((@IsNull_Respons" +
                "eLowerLabel = 1 AND [ResponseLowerLabel] IS NULL) OR ([ResponseLowerLabel] = @Or" +
                "iginal_ResponseLowerLabel)) AND ((@IsNull_ResponseUpperLabel = 1 AND [ResponseUp" +
                "perLabel] IS NULL) OR ([ResponseUpperLabel] = @Original_ResponseUpperLabel)));\r\n" +
                "SELECT ID, ResponseLower, ResponseUpper, Freq, Resolved, R, RBoundLower, RBoundU" +
                "pper, SameGeneration, ShareBiodad, ShareBiomom, ShareBiograndparent, Inconsisten" +
                "t, Notes, ResponseLowerLabel, ResponseUpperLabel FROM Metadata.tblRosterGen1Assi" +
                "gnment WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResponseLower", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseLower", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResponseUpper", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseUpper", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Freq", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Freq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Resolved", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Resolved", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@R", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RBoundLower", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RBoundLower", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RBoundUpper", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RBoundUpper", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SameGeneration", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SameGeneration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBiodad", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiodad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBiomom", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiomom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShareBiograndparent", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiograndparent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inconsistent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inconsistent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Notes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResponseLowerLabel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseLowerLabel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ResponseUpperLabel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseUpperLabel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ResponseLower", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseLower", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ResponseUpper", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseUpper", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Freq", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Freq", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Resolved", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Resolved", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_R", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_R", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RBoundLower", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RBoundLower", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RBoundUpper", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RBoundUpper", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SameGeneration", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SameGeneration", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBiodad", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiodad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBiomom", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiomom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShareBiograndparent", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShareBiograndparent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inconsistent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inconsistent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Notes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Notes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ResponseLowerLabel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseLowerLabel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ResponseLowerLabel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseLowerLabel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ResponseUpperLabel", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseUpperLabel", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ResponseUpperLabel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ResponseUpperLabel", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Nls.Base79.Properties.Settings.Default.Nlsy79ConnectionStringBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, ResponseLower, ResponseUpper, Freq, Resolved, R, RBoundLower, RBoundUp" +
                "per, SameGeneration, ShareBiodad, ShareBiomom, ShareBiograndparent, Inconsistent" +
                ", Notes, ResponseLowerLabel, ResponseUpperLabel FROM Metadata.tblRosterGen1Assig" +
                "nment";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LinksDataSet.tblRosterGen1AssignmentDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LinksDataSet.tblRosterGen1AssignmentDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LinksDataSet.tblRosterGen1AssignmentDataTable dataTable = new LinksDataSet.tblRosterGen1AssignmentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet.tblRosterGen1AssignmentDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblRosterGen1Assignment");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    byte Original_ID, 
                    short Original_ResponseLower, 
                    short Original_ResponseUpper, 
                    short Original_Freq, 
                    bool Original_Resolved, 
                    global::System.Nullable<double> Original_R, 
                    double Original_RBoundLower, 
                    double Original_RBoundUpper, 
                    byte Original_SameGeneration, 
                    byte Original_ShareBiodad, 
                    byte Original_ShareBiomom, 
                    byte Original_ShareBiograndparent, 
                    bool Original_Inconsistent, 
                    string Original_Notes, 
                    string Original_ResponseLowerLabel, 
                    string Original_ResponseUpperLabel) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((byte)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((short)(Original_ResponseLower));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((short)(Original_ResponseUpper));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((short)(Original_Freq));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_Resolved));
            if ((Original_R.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_R.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_RBoundLower));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_RBoundUpper));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((byte)(Original_SameGeneration));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((byte)(Original_ShareBiodad));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((byte)(Original_ShareBiomom));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((byte)(Original_ShareBiograndparent));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((bool)(Original_Inconsistent));
            if ((Original_Notes == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_Notes));
            }
            if ((Original_ResponseLowerLabel == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_ResponseLowerLabel));
            }
            if ((Original_ResponseUpperLabel == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_ResponseUpperLabel));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    byte ID, 
                    short ResponseLower, 
                    short ResponseUpper, 
                    short Freq, 
                    bool Resolved, 
                    global::System.Nullable<double> R, 
                    double RBoundLower, 
                    double RBoundUpper, 
                    byte SameGeneration, 
                    byte ShareBiodad, 
                    byte ShareBiomom, 
                    byte ShareBiograndparent, 
                    bool Inconsistent, 
                    string Notes, 
                    string ResponseLowerLabel, 
                    string ResponseUpperLabel) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((byte)(ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((short)(ResponseLower));
            this.Adapter.InsertCommand.Parameters[2].Value = ((short)(ResponseUpper));
            this.Adapter.InsertCommand.Parameters[3].Value = ((short)(Freq));
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(Resolved));
            if ((R.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(R.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((double)(RBoundLower));
            this.Adapter.InsertCommand.Parameters[7].Value = ((double)(RBoundUpper));
            this.Adapter.InsertCommand.Parameters[8].Value = ((byte)(SameGeneration));
            this.Adapter.InsertCommand.Parameters[9].Value = ((byte)(ShareBiodad));
            this.Adapter.InsertCommand.Parameters[10].Value = ((byte)(ShareBiomom));
            this.Adapter.InsertCommand.Parameters[11].Value = ((byte)(ShareBiograndparent));
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(Inconsistent));
            if ((Notes == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Notes));
            }
            if ((ResponseLowerLabel == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(ResponseLowerLabel));
            }
            if ((ResponseUpperLabel == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(ResponseUpperLabel));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    byte ID, 
                    short ResponseLower, 
                    short ResponseUpper, 
                    short Freq, 
                    bool Resolved, 
                    global::System.Nullable<double> R, 
                    double RBoundLower, 
                    double RBoundUpper, 
                    byte SameGeneration, 
                    byte ShareBiodad, 
                    byte ShareBiomom, 
                    byte ShareBiograndparent, 
                    bool Inconsistent, 
                    string Notes, 
                    string ResponseLowerLabel, 
                    string ResponseUpperLabel, 
                    byte Original_ID, 
                    short Original_ResponseLower, 
                    short Original_ResponseUpper, 
                    short Original_Freq, 
                    bool Original_Resolved, 
                    global::System.Nullable<double> Original_R, 
                    double Original_RBoundLower, 
                    double Original_RBoundUpper, 
                    byte Original_SameGeneration, 
                    byte Original_ShareBiodad, 
                    byte Original_ShareBiomom, 
                    byte Original_ShareBiograndparent, 
                    bool Original_Inconsistent, 
                    string Original_Notes, 
                    string Original_ResponseLowerLabel, 
                    string Original_ResponseUpperLabel) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((byte)(ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(ResponseLower));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(ResponseUpper));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(Freq));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(Resolved));
            if ((R.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(R.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(RBoundLower));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(RBoundUpper));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((byte)(SameGeneration));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((byte)(ShareBiodad));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((byte)(ShareBiomom));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((byte)(ShareBiograndparent));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(Inconsistent));
            if ((Notes == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Notes));
            }
            if ((ResponseLowerLabel == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(ResponseLowerLabel));
            }
            if ((ResponseUpperLabel == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(ResponseUpperLabel));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((byte)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((short)(Original_ResponseLower));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((short)(Original_ResponseUpper));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((short)(Original_Freq));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(Original_Resolved));
            if ((Original_R.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(Original_R.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(Original_RBoundLower));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(Original_RBoundUpper));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((byte)(Original_SameGeneration));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((byte)(Original_ShareBiodad));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((byte)(Original_ShareBiomom));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((byte)(Original_ShareBiograndparent));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(Original_Inconsistent));
            if ((Original_Notes == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_Notes));
            }
            if ((Original_ResponseLowerLabel == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_ResponseLowerLabel));
            }
            if ((Original_ResponseUpperLabel == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_ResponseUpperLabel));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    short ResponseLower, 
                    short ResponseUpper, 
                    short Freq, 
                    bool Resolved, 
                    global::System.Nullable<double> R, 
                    double RBoundLower, 
                    double RBoundUpper, 
                    byte SameGeneration, 
                    byte ShareBiodad, 
                    byte ShareBiomom, 
                    byte ShareBiograndparent, 
                    bool Inconsistent, 
                    string Notes, 
                    string ResponseLowerLabel, 
                    string ResponseUpperLabel, 
                    byte Original_ID, 
                    short Original_ResponseLower, 
                    short Original_ResponseUpper, 
                    short Original_Freq, 
                    bool Original_Resolved, 
                    global::System.Nullable<double> Original_R, 
                    double Original_RBoundLower, 
                    double Original_RBoundUpper, 
                    byte Original_SameGeneration, 
                    byte Original_ShareBiodad, 
                    byte Original_ShareBiomom, 
                    byte Original_ShareBiograndparent, 
                    bool Original_Inconsistent, 
                    string Original_Notes, 
                    string Original_ResponseLowerLabel, 
                    string Original_ResponseUpperLabel) {
            return this.Update(Original_ID, ResponseLower, ResponseUpper, Freq, Resolved, R, RBoundLower, RBoundUpper, SameGeneration, ShareBiodad, ShareBiomom, ShareBiograndparent, Inconsistent, Notes, ResponseLowerLabel, ResponseUpperLabel, Original_ID, Original_ResponseLower, Original_ResponseUpper, Original_Freq, Original_Resolved, Original_R, Original_RBoundLower, Original_RBoundUpper, Original_SameGeneration, Original_ShareBiodad, Original_ShareBiomom, Original_ShareBiograndparent, Original_Inconsistent, Original_Notes, Original_ResponseLowerLabel, Original_ResponseUpperLabel);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblVariableTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tblVariableTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblVariable";
            tableMapping.ColumnMappings.Add("VariableCode", "VariableCode");
            tableMapping.ColumnMappings.Add("Item", "Item");
            tableMapping.ColumnMappings.Add("Generation", "Generation");
            tableMapping.ColumnMappings.Add("ExtractSource", "ExtractSource");
            tableMapping.ColumnMappings.Add("SurveySource", "SurveySource");
            tableMapping.ColumnMappings.Add("SurveyYear", "SurveyYear");
            tableMapping.ColumnMappings.Add("LoopIndex", "LoopIndex");
            tableMapping.ColumnMappings.Add("Translate", "Translate");
            tableMapping.ColumnMappings.Add("Active", "Active");
            tableMapping.ColumnMappings.Add("Notes", "Notes");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Metadata].[tblVariable] WHERE (([VariableCode] = @Original_VariableCode) AND ([Item] = @Original_Item) AND ([Generation] = @Original_Generation) AND ([ExtractSource] = @Original_ExtractSource) AND ([SurveySource] = @Original_SurveySource) AND ([SurveyYear] = @Original_SurveyYear) AND ([LoopIndex] = @Original_LoopIndex) AND ([Translate] = @Original_Translate) AND ([Active] = @Original_Active) AND ((@IsNull_Notes = 1 AND [Notes] IS NULL) OR ([Notes] = @Original_Notes)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VariableCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VariableCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Item", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Generation", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Generation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExtractSource", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtractSource", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveySource", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveySource", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LoopIndex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoopIndex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Translate", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Translate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Notes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Notes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Metadata].[tblVariable] ([VariableCode], [Item], [Generation], [ExtractSource], [SurveySource], [SurveyYear], [LoopIndex], [Translate], [Active], [Notes]) VALUES (@VariableCode, @Item, @Generation, @ExtractSource, @SurveySource, @SurveyYear, @LoopIndex, @Translate, @Active, @Notes);
SELECT VariableCode, Item, Generation, ExtractSource, SurveySource, SurveyYear, LoopIndex, Translate, Active, Notes FROM Metadata.tblVariable WHERE (VariableCode = @VariableCode)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VariableCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VariableCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Generation", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Generation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtractSource", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtractSource", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveySource", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveySource", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoopIndex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoopIndex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Translate", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Translate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Notes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Metadata].[tblVariable] SET [VariableCode] = @VariableCode, [Item] = @Item, [Generation] = @Generation, [ExtractSource] = @ExtractSource, [SurveySource] = @SurveySource, [SurveyYear] = @SurveyYear, [LoopIndex] = @LoopIndex, [Translate] = @Translate, [Active] = @Active, [Notes] = @Notes WHERE (([VariableCode] = @Original_VariableCode) AND ([Item] = @Original_Item) AND ([Generation] = @Original_Generation) AND ([ExtractSource] = @Original_ExtractSource) AND ([SurveySource] = @Original_SurveySource) AND ([SurveyYear] = @Original_SurveyYear) AND ([LoopIndex] = @Original_LoopIndex) AND ([Translate] = @Original_Translate) AND ([Active] = @Original_Active) AND ((@IsNull_Notes = 1 AND [Notes] IS NULL) OR ([Notes] = @Original_Notes)));
SELECT VariableCode, Item, Generation, ExtractSource, SurveySource, SurveyYear, LoopIndex, Translate, Active, Notes FROM Metadata.tblVariable WHERE (VariableCode = @VariableCode)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VariableCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VariableCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Generation", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Generation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtractSource", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtractSource", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveySource", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveySource", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LoopIndex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoopIndex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Translate", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Translate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Notes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VariableCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VariableCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Item", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Generation", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Generation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExtractSource", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtractSource", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveySource", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveySource", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SurveyYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SurveyYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LoopIndex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LoopIndex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Translate", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Translate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Notes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Notes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Nls.Base79.Properties.Settings.Default.Nlsy79ConnectionStringBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT VariableCode, Item, Generation, ExtractSource, SurveySource, SurveyYear, L" +
                "oopIndex, Translate, Active, Notes FROM Metadata.tblVariable";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LinksDataSet.tblVariableDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LinksDataSet.tblVariableDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LinksDataSet.tblVariableDataTable dataTable = new LinksDataSet.tblVariableDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet.tblVariableDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblVariable");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_VariableCode, short Original_Item, byte Original_Generation, byte Original_ExtractSource, byte Original_SurveySource, short Original_SurveyYear, byte Original_LoopIndex, bool Original_Translate, bool Original_Active, string Original_Notes) {
            if ((Original_VariableCode == null)) {
                throw new global::System.ArgumentNullException("Original_VariableCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_VariableCode));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((short)(Original_Item));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((byte)(Original_Generation));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((byte)(Original_ExtractSource));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((byte)(Original_SurveySource));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((short)(Original_SurveyYear));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((byte)(Original_LoopIndex));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((bool)(Original_Translate));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((bool)(Original_Active));
            if ((Original_Notes == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Notes));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string VariableCode, short Item, byte Generation, byte ExtractSource, byte SurveySource, short SurveyYear, byte LoopIndex, bool Translate, bool Active, string Notes) {
            if ((VariableCode == null)) {
                throw new global::System.ArgumentNullException("VariableCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(VariableCode));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((short)(Item));
            this.Adapter.InsertCommand.Parameters[2].Value = ((byte)(Generation));
            this.Adapter.InsertCommand.Parameters[3].Value = ((byte)(ExtractSource));
            this.Adapter.InsertCommand.Parameters[4].Value = ((byte)(SurveySource));
            this.Adapter.InsertCommand.Parameters[5].Value = ((short)(SurveyYear));
            this.Adapter.InsertCommand.Parameters[6].Value = ((byte)(LoopIndex));
            this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(Translate));
            this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(Active));
            if ((Notes == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Notes));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string VariableCode, 
                    short Item, 
                    byte Generation, 
                    byte ExtractSource, 
                    byte SurveySource, 
                    short SurveyYear, 
                    byte LoopIndex, 
                    bool Translate, 
                    bool Active, 
                    string Notes, 
                    string Original_VariableCode, 
                    short Original_Item, 
                    byte Original_Generation, 
                    byte Original_ExtractSource, 
                    byte Original_SurveySource, 
                    short Original_SurveyYear, 
                    byte Original_LoopIndex, 
                    bool Original_Translate, 
                    bool Original_Active, 
                    string Original_Notes) {
            if ((VariableCode == null)) {
                throw new global::System.ArgumentNullException("VariableCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(VariableCode));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(Item));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((byte)(Generation));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((byte)(ExtractSource));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((byte)(SurveySource));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((short)(SurveyYear));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((byte)(LoopIndex));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(Translate));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(Active));
            if ((Notes == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Notes));
            }
            if ((Original_VariableCode == null)) {
                throw new global::System.ArgumentNullException("Original_VariableCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_VariableCode));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((short)(Original_Item));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((byte)(Original_Generation));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((byte)(Original_ExtractSource));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((byte)(Original_SurveySource));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((short)(Original_SurveyYear));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((byte)(Original_LoopIndex));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(Original_Translate));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(Original_Active));
            if ((Original_Notes == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Notes));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    short Item, 
                    byte Generation, 
                    byte ExtractSource, 
                    byte SurveySource, 
                    short SurveyYear, 
                    byte LoopIndex, 
                    bool Translate, 
                    bool Active, 
                    string Notes, 
                    string Original_VariableCode, 
                    short Original_Item, 
                    byte Original_Generation, 
                    byte Original_ExtractSource, 
                    byte Original_SurveySource, 
                    short Original_SurveyYear, 
                    byte Original_LoopIndex, 
                    bool Original_Translate, 
                    bool Original_Active, 
                    string Original_Notes) {
            return this.Update(Original_VariableCode, Item, Generation, ExtractSource, SurveySource, SurveyYear, LoopIndex, Translate, Active, Notes, Original_VariableCode, Original_Item, Original_Generation, Original_ExtractSource, Original_SurveySource, Original_SurveyYear, Original_LoopIndex, Original_Translate, Original_Active, Original_Notes);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblItemTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tblItemTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblItem";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Label", "Label");
            tableMapping.ColumnMappings.Add("MinValue", "MinValue");
            tableMapping.ColumnMappings.Add("MinNonnegative", "MinNonnegative");
            tableMapping.ColumnMappings.Add("MaxValue", "MaxValue");
            tableMapping.ColumnMappings.Add("Active", "Active");
            tableMapping.ColumnMappings.Add("Notes", "Notes");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Metadata].[tblItem] WHERE (([ID] = @Original_ID) AND ([Label] = @Original_Label) AND ([MinValue] = @Original_MinValue) AND ((@IsNull_MinNonnegative = 1 AND [MinNonnegative] IS NULL) OR ([MinNonnegative] = @Original_MinNonnegative)) AND ([MaxValue] = @Original_MaxValue) AND ([Active] = @Original_Active) AND ((@IsNull_Notes = 1 AND [Notes] IS NULL) OR ([Notes] = @Original_Notes)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Label", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Label", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MinValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MinNonnegative", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinNonnegative", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MinNonnegative", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinNonnegative", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaxValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Notes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Notes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Metadata].[tblItem] ([ID], [Label], [MinValue], [MinNonnegative], [MaxValue], [Active], [Notes]) VALUES (@ID, @Label, @MinValue, @MinNonnegative, @MaxValue, @Active, @Notes);
SELECT ID, Label, MinValue, MinNonnegative, MaxValue, Active, Notes FROM Metadata.tblItem WHERE (ID = @ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Label", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinNonnegative", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinNonnegative", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Notes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Metadata].[tblItem] SET [ID] = @ID, [Label] = @Label, [MinValue] = @MinValue, [MinNonnegative] = @MinNonnegative, [MaxValue] = @MaxValue, [Active] = @Active, [Notes] = @Notes WHERE (([ID] = @Original_ID) AND ([Label] = @Original_Label) AND ([MinValue] = @Original_MinValue) AND ((@IsNull_MinNonnegative = 1 AND [MinNonnegative] IS NULL) OR ([MinNonnegative] = @Original_MinNonnegative)) AND ([MaxValue] = @Original_MaxValue) AND ([Active] = @Original_Active) AND ((@IsNull_Notes = 1 AND [Notes] IS NULL) OR ([Notes] = @Original_Notes)));
SELECT ID, Label, MinValue, MinNonnegative, MaxValue, Active, Notes FROM Metadata.tblItem WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Label", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Label", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinNonnegative", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinNonnegative", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Notes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Label", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Label", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MinValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MinNonnegative", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinNonnegative", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MinNonnegative", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinNonnegative", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaxValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Notes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Notes", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Notes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Nls.Base79.Properties.Settings.Default.Nlsy79ConnectionStringBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, Label, MinValue, MinNonnegative, MaxValue, Active, Notes FROM Metadata" +
                ".tblItem";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LinksDataSet.tblItemDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LinksDataSet.tblItemDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LinksDataSet.tblItemDataTable dataTable = new LinksDataSet.tblItemDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet.tblItemDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblItem");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(short Original_ID, string Original_Label, int Original_MinValue, global::System.Nullable<int> Original_MinNonnegative, int Original_MaxValue, string Original_Active, string Original_Notes) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((short)(Original_ID));
            if ((Original_Label == null)) {
                throw new global::System.ArgumentNullException("Original_Label");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Label));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_MinValue));
            if ((Original_MinNonnegative.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_MinNonnegative.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_MaxValue));
            if ((Original_Active == null)) {
                throw new global::System.ArgumentNullException("Original_Active");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Active));
            }
            if ((Original_Notes == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Notes));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(short ID, string Label, int MinValue, global::System.Nullable<int> MinNonnegative, int MaxValue, string Active, string Notes) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(ID));
            if ((Label == null)) {
                throw new global::System.ArgumentNullException("Label");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Label));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(MinValue));
            if ((MinNonnegative.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(MinNonnegative.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(MaxValue));
            if ((Active == null)) {
                throw new global::System.ArgumentNullException("Active");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Active));
            }
            if ((Notes == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Notes));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(short ID, string Label, int MinValue, global::System.Nullable<int> MinNonnegative, int MaxValue, string Active, string Notes, short Original_ID, string Original_Label, int Original_MinValue, global::System.Nullable<int> Original_MinNonnegative, int Original_MaxValue, string Original_Active, string Original_Notes) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(ID));
            if ((Label == null)) {
                throw new global::System.ArgumentNullException("Label");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Label));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(MinValue));
            if ((MinNonnegative.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(MinNonnegative.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(MaxValue));
            if ((Active == null)) {
                throw new global::System.ArgumentNullException("Active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Active));
            }
            if ((Notes == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Notes));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((short)(Original_ID));
            if ((Original_Label == null)) {
                throw new global::System.ArgumentNullException("Original_Label");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Label));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_MinValue));
            if ((Original_MinNonnegative.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_MinNonnegative.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_MaxValue));
            if ((Original_Active == null)) {
                throw new global::System.ArgumentNullException("Original_Active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Active));
            }
            if ((Original_Notes == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Notes));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Label, int MinValue, global::System.Nullable<int> MinNonnegative, int MaxValue, string Active, string Notes, short Original_ID, string Original_Label, int Original_MinValue, global::System.Nullable<int> Original_MinNonnegative, int Original_MaxValue, string Original_Active, string Original_Notes) {
            return this.Update(Original_ID, Label, MinValue, MinNonnegative, MaxValue, Active, Notes, Original_ID, Original_Label, Original_MinValue, Original_MinNonnegative, Original_MaxValue, Original_Active, Original_Notes);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblRelatedValuesArchiveTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tblRelatedValuesArchiveTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblRelatedValuesArchive";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("AlgorithmVersion", "AlgorithmVersion");
            tableMapping.ColumnMappings.Add("SubjectTag_S1", "SubjectTag_S1");
            tableMapping.ColumnMappings.Add("SubjectTag_S2", "SubjectTag_S2");
            tableMapping.ColumnMappings.Add("MultipleBirthIfSameSex", "MultipleBirthIfSameSex");
            tableMapping.ColumnMappings.Add("IsMz", "IsMz");
            tableMapping.ColumnMappings.Add("SameGeneration", "SameGeneration");
            tableMapping.ColumnMappings.Add("RosterAssignmentID", "RosterAssignmentID");
            tableMapping.ColumnMappings.Add("RRoster", "RRoster");
            tableMapping.ColumnMappings.Add("LastSurvey_S1", "LastSurvey_S1");
            tableMapping.ColumnMappings.Add("LastSurvey_S2", "LastSurvey_S2");
            tableMapping.ColumnMappings.Add("RImplicitPass1", "RImplicitPass1");
            tableMapping.ColumnMappings.Add("RImplicit", "RImplicit");
            tableMapping.ColumnMappings.Add("RImplicitSubject", "RImplicitSubject");
            tableMapping.ColumnMappings.Add("RImplicitMother", "RImplicitMother");
            tableMapping.ColumnMappings.Add("RImplicit2004", "RImplicit2004");
            tableMapping.ColumnMappings.Add("RExplicitOldestSibVersion", "RExplicitOldestSibVersion");
            tableMapping.ColumnMappings.Add("RExplicitYoungestSibVersion", "RExplicitYoungestSibVersion");
            tableMapping.ColumnMappings.Add("RExplicitPass1", "RExplicitPass1");
            tableMapping.ColumnMappings.Add("RExplicit", "RExplicit");
            tableMapping.ColumnMappings.Add("RPass1", "RPass1");
            tableMapping.ColumnMappings.Add("R", "R");
            tableMapping.ColumnMappings.Add("RFull", "RFull");
            tableMapping.ColumnMappings.Add("RPeek", "RPeek");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Archive].[tblRelatedValuesArchive] WHERE (([ID] = @Original_ID) AND " +
                "([AlgorithmVersion] = @Original_AlgorithmVersion) AND ([SubjectTag_S1] = @Origin" +
                "al_SubjectTag_S1) AND ([SubjectTag_S2] = @Original_SubjectTag_S2) AND ([Multiple" +
                "BirthIfSameSex] = @Original_MultipleBirthIfSameSex) AND ([IsMz] = @Original_IsMz" +
                ") AND ((@IsNull_SameGeneration = 1 AND [SameGeneration] IS NULL) OR ([SameGenera" +
                "tion] = @Original_SameGeneration)) AND ((@IsNull_RosterAssignmentID = 1 AND [Ros" +
                "terAssignmentID] IS NULL) OR ([RosterAssignmentID] = @Original_RosterAssignmentI" +
                "D)) AND ((@IsNull_RRoster = 1 AND [RRoster] IS NULL) OR ([RRoster] = @Original_R" +
                "Roster)) AND ((@IsNull_LastSurvey_S1 = 1 AND [LastSurvey_S1] IS NULL) OR ([LastS" +
                "urvey_S1] = @Original_LastSurvey_S1)) AND ((@IsNull_LastSurvey_S2 = 1 AND [LastS" +
                "urvey_S2] IS NULL) OR ([LastSurvey_S2] = @Original_LastSurvey_S2)) AND ((@IsNull" +
                "_RImplicitPass1 = 1 AND [RImplicitPass1] IS NULL) OR ([RImplicitPass1] = @Origin" +
                "al_RImplicitPass1)) AND ((@IsNull_RImplicit = 1 AND [RImplicit] IS NULL) OR ([RI" +
                "mplicit] = @Original_RImplicit)) AND ((@IsNull_RImplicitSubject = 1 AND [RImplic" +
                "itSubject] IS NULL) OR ([RImplicitSubject] = @Original_RImplicitSubject)) AND ((" +
                "@IsNull_RImplicitMother = 1 AND [RImplicitMother] IS NULL) OR ([RImplicitMother]" +
                " = @Original_RImplicitMother)) AND ((@IsNull_RImplicit2004 = 1 AND [RImplicit200" +
                "4] IS NULL) OR ([RImplicit2004] = @Original_RImplicit2004)) AND ((@IsNull_RExpli" +
                "citOldestSibVersion = 1 AND [RExplicitOldestSibVersion] IS NULL) OR ([RExplicitO" +
                "ldestSibVersion] = @Original_RExplicitOldestSibVersion)) AND ((@IsNull_RExplicit" +
                "YoungestSibVersion = 1 AND [RExplicitYoungestSibVersion] IS NULL) OR ([RExplicit" +
                "YoungestSibVersion] = @Original_RExplicitYoungestSibVersion)) AND ((@IsNull_RExp" +
                "licitPass1 = 1 AND [RExplicitPass1] IS NULL) OR ([RExplicitPass1] = @Original_RE" +
                "xplicitPass1)) AND ((@IsNull_RExplicit = 1 AND [RExplicit] IS NULL) OR ([RExplic" +
                "it] = @Original_RExplicit)) AND ((@IsNull_RPass1 = 1 AND [RPass1] IS NULL) OR ([" +
                "RPass1] = @Original_RPass1)) AND ((@IsNull_R = 1 AND [R] IS NULL) OR ([R] = @Ori" +
                "ginal_R)) AND ((@IsNull_RFull = 1 AND [RFull] IS NULL) OR ([RFull] = @Original_R" +
                "Full)) AND ((@IsNull_RPeek = 1 AND [RPeek] IS NULL) OR ([RPeek] = @Original_RPee" +
                "k)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AlgorithmVersion", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlgorithmVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag_S1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag_S2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MultipleBirthIfSameSex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MultipleBirthIfSameSex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsMz", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMz", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SameGeneration", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SameGeneration", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SameGeneration", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SameGeneration", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RosterAssignmentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RosterAssignmentID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RosterAssignmentID", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RosterAssignmentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RRoster", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RRoster", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RRoster", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RRoster", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastSurvey_S1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastSurvey_S1", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastSurvey_S2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastSurvey_S2", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RImplicitPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RImplicitPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RImplicit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RImplicit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RImplicitSubject", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitSubject", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RImplicitSubject", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitSubject", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RImplicitMother", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitMother", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RImplicitMother", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitMother", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RImplicit2004", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit2004", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RImplicit2004", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit2004", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RExplicitOldestSibVersion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitOldestSibVersion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RExplicitOldestSibVersion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitOldestSibVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RExplicitYoungestSibVersion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitYoungestSibVersion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RExplicitYoungestSibVersion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitYoungestSibVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RExplicitPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RExplicitPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RExplicit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RExplicit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_R", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_R", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RFull", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RFull", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RFull", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RFull", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RPeek", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPeek", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RPeek", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPeek", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Archive].[tblRelatedValuesArchive] ([AlgorithmVersion], [SubjectTag_S1], [SubjectTag_S2], [MultipleBirthIfSameSex], [IsMz], [SameGeneration], [RosterAssignmentID], [RRoster], [LastSurvey_S1], [LastSurvey_S2], [RImplicitPass1], [RImplicit], [RImplicitSubject], [RImplicitMother], [RImplicit2004], [RExplicitOldestSibVersion], [RExplicitYoungestSibVersion], [RExplicitPass1], [RExplicit], [RPass1], [R], [RFull], [RPeek]) VALUES (@AlgorithmVersion, @SubjectTag_S1, @SubjectTag_S2, @MultipleBirthIfSameSex, @IsMz, @SameGeneration, @RosterAssignmentID, @RRoster, @LastSurvey_S1, @LastSurvey_S2, @RImplicitPass1, @RImplicit, @RImplicitSubject, @RImplicitMother, @RImplicit2004, @RExplicitOldestSibVersion, @RExplicitYoungestSibVersion, @RExplicitPass1, @RExplicit, @RPass1, @R, @RFull, @RPeek);
SELECT ID, AlgorithmVersion, SubjectTag_S1, SubjectTag_S2, MultipleBirthIfSameSex, IsMz, SameGeneration, RosterAssignmentID, RRoster, LastSurvey_S1, LastSurvey_S2, RImplicitPass1, RImplicit, RImplicitSubject, RImplicitMother, RImplicit2004, RExplicitOldestSibVersion, RExplicitYoungestSibVersion, RExplicitPass1, RExplicit, RPass1, R, RFull, RPeek FROM Archive.tblRelatedValuesArchive WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AlgorithmVersion", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlgorithmVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag_S1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag_S2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MultipleBirthIfSameSex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MultipleBirthIfSameSex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsMz", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMz", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SameGeneration", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SameGeneration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RosterAssignmentID", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RosterAssignmentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RRoster", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RRoster", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastSurvey_S1", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastSurvey_S2", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RImplicitPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RImplicit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RImplicitSubject", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitSubject", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RImplicitMother", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitMother", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RImplicit2004", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit2004", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RExplicitOldestSibVersion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitOldestSibVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RExplicitYoungestSibVersion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitYoungestSibVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RExplicitPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RExplicit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@R", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RFull", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RFull", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RPeek", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPeek", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Archive].[tblRelatedValuesArchive] SET [AlgorithmVersion] = @AlgorithmVer" +
                "sion, [SubjectTag_S1] = @SubjectTag_S1, [SubjectTag_S2] = @SubjectTag_S2, [Multi" +
                "pleBirthIfSameSex] = @MultipleBirthIfSameSex, [IsMz] = @IsMz, [SameGeneration] =" +
                " @SameGeneration, [RosterAssignmentID] = @RosterAssignmentID, [RRoster] = @RRost" +
                "er, [LastSurvey_S1] = @LastSurvey_S1, [LastSurvey_S2] = @LastSurvey_S2, [RImplic" +
                "itPass1] = @RImplicitPass1, [RImplicit] = @RImplicit, [RImplicitSubject] = @RImp" +
                "licitSubject, [RImplicitMother] = @RImplicitMother, [RImplicit2004] = @RImplicit" +
                "2004, [RExplicitOldestSibVersion] = @RExplicitOldestSibVersion, [RExplicitYounge" +
                "stSibVersion] = @RExplicitYoungestSibVersion, [RExplicitPass1] = @RExplicitPass1" +
                ", [RExplicit] = @RExplicit, [RPass1] = @RPass1, [R] = @R, [RFull] = @RFull, [RPe" +
                "ek] = @RPeek WHERE (([ID] = @Original_ID) AND ([AlgorithmVersion] = @Original_Al" +
                "gorithmVersion) AND ([SubjectTag_S1] = @Original_SubjectTag_S1) AND ([SubjectTag" +
                "_S2] = @Original_SubjectTag_S2) AND ([MultipleBirthIfSameSex] = @Original_Multip" +
                "leBirthIfSameSex) AND ([IsMz] = @Original_IsMz) AND ((@IsNull_SameGeneration = 1" +
                " AND [SameGeneration] IS NULL) OR ([SameGeneration] = @Original_SameGeneration))" +
                " AND ((@IsNull_RosterAssignmentID = 1 AND [RosterAssignmentID] IS NULL) OR ([Ros" +
                "terAssignmentID] = @Original_RosterAssignmentID)) AND ((@IsNull_RRoster = 1 AND " +
                "[RRoster] IS NULL) OR ([RRoster] = @Original_RRoster)) AND ((@IsNull_LastSurvey_" +
                "S1 = 1 AND [LastSurvey_S1] IS NULL) OR ([LastSurvey_S1] = @Original_LastSurvey_S" +
                "1)) AND ((@IsNull_LastSurvey_S2 = 1 AND [LastSurvey_S2] IS NULL) OR ([LastSurvey" +
                "_S2] = @Original_LastSurvey_S2)) AND ((@IsNull_RImplicitPass1 = 1 AND [RImplicit" +
                "Pass1] IS NULL) OR ([RImplicitPass1] = @Original_RImplicitPass1)) AND ((@IsNull_" +
                "RImplicit = 1 AND [RImplicit] IS NULL) OR ([RImplicit] = @Original_RImplicit)) A" +
                "ND ((@IsNull_RImplicitSubject = 1 AND [RImplicitSubject] IS NULL) OR ([RImplicit" +
                "Subject] = @Original_RImplicitSubject)) AND ((@IsNull_RImplicitMother = 1 AND [R" +
                "ImplicitMother] IS NULL) OR ([RImplicitMother] = @Original_RImplicitMother)) AND" +
                " ((@IsNull_RImplicit2004 = 1 AND [RImplicit2004] IS NULL) OR ([RImplicit2004] = " +
                "@Original_RImplicit2004)) AND ((@IsNull_RExplicitOldestSibVersion = 1 AND [RExpl" +
                "icitOldestSibVersion] IS NULL) OR ([RExplicitOldestSibVersion] = @Original_RExpl" +
                "icitOldestSibVersion)) AND ((@IsNull_RExplicitYoungestSibVersion = 1 AND [RExpli" +
                "citYoungestSibVersion] IS NULL) OR ([RExplicitYoungestSibVersion] = @Original_RE" +
                "xplicitYoungestSibVersion)) AND ((@IsNull_RExplicitPass1 = 1 AND [RExplicitPass1" +
                "] IS NULL) OR ([RExplicitPass1] = @Original_RExplicitPass1)) AND ((@IsNull_RExpl" +
                "icit = 1 AND [RExplicit] IS NULL) OR ([RExplicit] = @Original_RExplicit)) AND ((" +
                "@IsNull_RPass1 = 1 AND [RPass1] IS NULL) OR ([RPass1] = @Original_RPass1)) AND (" +
                "(@IsNull_R = 1 AND [R] IS NULL) OR ([R] = @Original_R)) AND ((@IsNull_RFull = 1 " +
                "AND [RFull] IS NULL) OR ([RFull] = @Original_RFull)) AND ((@IsNull_RPeek = 1 AND" +
                " [RPeek] IS NULL) OR ([RPeek] = @Original_RPeek)));\r\nSELECT ID, AlgorithmVersion" +
                ", SubjectTag_S1, SubjectTag_S2, MultipleBirthIfSameSex, IsMz, SameGeneration, Ro" +
                "sterAssignmentID, RRoster, LastSurvey_S1, LastSurvey_S2, RImplicitPass1, RImplic" +
                "it, RImplicitSubject, RImplicitMother, RImplicit2004, RExplicitOldestSibVersion," +
                " RExplicitYoungestSibVersion, RExplicitPass1, RExplicit, RPass1, R, RFull, RPeek" +
                " FROM Archive.tblRelatedValuesArchive WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AlgorithmVersion", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlgorithmVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag_S1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubjectTag_S2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MultipleBirthIfSameSex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MultipleBirthIfSameSex", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsMz", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMz", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SameGeneration", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SameGeneration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RosterAssignmentID", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RosterAssignmentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RRoster", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RRoster", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastSurvey_S1", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastSurvey_S2", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RImplicitPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RImplicit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RImplicitSubject", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitSubject", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RImplicitMother", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitMother", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RImplicit2004", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit2004", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RExplicitOldestSibVersion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitOldestSibVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RExplicitYoungestSibVersion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitYoungestSibVersion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RExplicitPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RExplicit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPass1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@R", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RFull", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RFull", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RPeek", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPeek", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AlgorithmVersion", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlgorithmVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag_S1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubjectTag_S2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubjectTag_S2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MultipleBirthIfSameSex", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MultipleBirthIfSameSex", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsMz", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMz", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SameGeneration", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SameGeneration", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SameGeneration", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SameGeneration", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RosterAssignmentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RosterAssignmentID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RosterAssignmentID", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RosterAssignmentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RRoster", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RRoster", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RRoster", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RRoster", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastSurvey_S1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastSurvey_S1", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastSurvey_S2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastSurvey_S2", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSurvey_S2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RImplicitPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RImplicitPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RImplicit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RImplicit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RImplicitSubject", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitSubject", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RImplicitSubject", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitSubject", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RImplicitMother", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitMother", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RImplicitMother", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicitMother", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RImplicit2004", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit2004", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RImplicit2004", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RImplicit2004", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RExplicitOldestSibVersion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitOldestSibVersion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RExplicitOldestSibVersion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitOldestSibVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RExplicitYoungestSibVersion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitYoungestSibVersion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RExplicitYoungestSibVersion", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitYoungestSibVersion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RExplicitPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RExplicitPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicitPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RExplicit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RExplicit", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RExplicit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RPass1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPass1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RPass1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPass1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_R", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_R", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "R", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RFull", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RFull", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RFull", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RFull", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RPeek", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPeek", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RPeek", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RPeek", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Nls.Base79.Properties.Settings.Default.Nlsy79ConnectionStringBase;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, AlgorithmVersion, SubjectTag_S1, SubjectTag_S2, MultipleBirthIfSameSex, IsMz, SameGeneration, RosterAssignmentID, RRoster, LastSurvey_S1, LastSurvey_S2, RImplicitPass1, RImplicit, RImplicitSubject, RImplicitMother, RImplicit2004, RExplicitOldestSibVersion, RExplicitYoungestSibVersion, RExplicitPass1, RExplicit, RPass1, R, RFull, RPeek FROM Archive.tblRelatedValuesArchive";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LinksDataSet.tblRelatedValuesArchiveDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LinksDataSet.tblRelatedValuesArchiveDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LinksDataSet.tblRelatedValuesArchiveDataTable dataTable = new LinksDataSet.tblRelatedValuesArchiveDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet.tblRelatedValuesArchiveDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LinksDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblRelatedValuesArchive");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ID, 
                    short Original_AlgorithmVersion, 
                    int Original_SubjectTag_S1, 
                    int Original_SubjectTag_S2, 
                    byte Original_MultipleBirthIfSameSex, 
                    byte Original_IsMz, 
                    global::System.Nullable<byte> Original_SameGeneration, 
                    global::System.Nullable<byte> Original_RosterAssignmentID, 
                    global::System.Nullable<double> Original_RRoster, 
                    global::System.Nullable<short> Original_LastSurvey_S1, 
                    global::System.Nullable<short> Original_LastSurvey_S2, 
                    global::System.Nullable<double> Original_RImplicitPass1, 
                    global::System.Nullable<double> Original_RImplicit, 
                    global::System.Nullable<double> Original_RImplicitSubject, 
                    global::System.Nullable<double> Original_RImplicitMother, 
                    global::System.Nullable<double> Original_RImplicit2004, 
                    global::System.Nullable<double> Original_RExplicitOldestSibVersion, 
                    global::System.Nullable<double> Original_RExplicitYoungestSibVersion, 
                    global::System.Nullable<double> Original_RExplicitPass1, 
                    global::System.Nullable<double> Original_RExplicit, 
                    global::System.Nullable<double> Original_RPass1, 
                    global::System.Nullable<double> Original_R, 
                    global::System.Nullable<double> Original_RFull, 
                    global::System.Nullable<double> Original_RPeek) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((short)(Original_AlgorithmVersion));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_SubjectTag_S1));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_SubjectTag_S2));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((byte)(Original_MultipleBirthIfSameSex));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((byte)(Original_IsMz));
            if ((Original_SameGeneration.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((byte)(Original_SameGeneration.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_RosterAssignmentID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((byte)(Original_RosterAssignmentID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_RRoster.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((double)(Original_RRoster.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_LastSurvey_S1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((short)(Original_LastSurvey_S1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_LastSurvey_S2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((short)(Original_LastSurvey_S2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_RImplicitPass1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((double)(Original_RImplicitPass1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_RImplicit.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((double)(Original_RImplicit.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_RImplicitSubject.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((double)(Original_RImplicitSubject.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_RImplicitMother.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((double)(Original_RImplicitMother.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_RImplicit2004.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((double)(Original_RImplicit2004.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_RExplicitOldestSibVersion.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((double)(Original_RExplicitOldestSibVersion.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_RExplicitYoungestSibVersion.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((double)(Original_RExplicitYoungestSibVersion.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_RExplicitPass1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((double)(Original_RExplicitPass1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_RExplicit.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((double)(Original_RExplicit.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_RPass1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((double)(Original_RPass1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_R.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((double)(Original_R.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_RFull.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((double)(Original_RFull.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_RPeek.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((double)(Original_RPeek.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    short AlgorithmVersion, 
                    int SubjectTag_S1, 
                    int SubjectTag_S2, 
                    byte MultipleBirthIfSameSex, 
                    byte IsMz, 
                    global::System.Nullable<byte> SameGeneration, 
                    global::System.Nullable<byte> RosterAssignmentID, 
                    global::System.Nullable<double> RRoster, 
                    global::System.Nullable<short> LastSurvey_S1, 
                    global::System.Nullable<short> LastSurvey_S2, 
                    global::System.Nullable<double> RImplicitPass1, 
                    global::System.Nullable<double> RImplicit, 
                    global::System.Nullable<double> RImplicitSubject, 
                    global::System.Nullable<double> RImplicitMother, 
                    global::System.Nullable<double> RImplicit2004, 
                    global::System.Nullable<double> RExplicitOldestSibVersion, 
                    global::System.Nullable<double> RExplicitYoungestSibVersion, 
                    global::System.Nullable<double> RExplicitPass1, 
                    global::System.Nullable<double> RExplicit, 
                    global::System.Nullable<double> RPass1, 
                    global::System.Nullable<double> R, 
                    global::System.Nullable<double> RFull, 
                    global::System.Nullable<double> RPeek) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(AlgorithmVersion));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(SubjectTag_S1));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(SubjectTag_S2));
            this.Adapter.InsertCommand.Parameters[3].Value = ((byte)(MultipleBirthIfSameSex));
            this.Adapter.InsertCommand.Parameters[4].Value = ((byte)(IsMz));
            if ((SameGeneration.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((byte)(SameGeneration.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((RosterAssignmentID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((byte)(RosterAssignmentID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((RRoster.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(RRoster.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((LastSurvey_S1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((short)(LastSurvey_S1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((LastSurvey_S2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((short)(LastSurvey_S2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((RImplicitPass1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(RImplicitPass1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((RImplicit.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(RImplicit.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((RImplicitSubject.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(RImplicitSubject.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((RImplicitMother.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(RImplicitMother.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((RImplicit2004.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(RImplicit2004.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((RExplicitOldestSibVersion.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(RExplicitOldestSibVersion.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((RExplicitYoungestSibVersion.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((double)(RExplicitYoungestSibVersion.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((RExplicitPass1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((double)(RExplicitPass1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((RExplicit.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((double)(RExplicit.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((RPass1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((double)(RPass1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((R.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((double)(R.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((RFull.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((double)(RFull.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((RPeek.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((double)(RPeek.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    short AlgorithmVersion, 
                    int SubjectTag_S1, 
                    int SubjectTag_S2, 
                    byte MultipleBirthIfSameSex, 
                    byte IsMz, 
                    global::System.Nullable<byte> SameGeneration, 
                    global::System.Nullable<byte> RosterAssignmentID, 
                    global::System.Nullable<double> RRoster, 
                    global::System.Nullable<short> LastSurvey_S1, 
                    global::System.Nullable<short> LastSurvey_S2, 
                    global::System.Nullable<double> RImplicitPass1, 
                    global::System.Nullable<double> RImplicit, 
                    global::System.Nullable<double> RImplicitSubject, 
                    global::System.Nullable<double> RImplicitMother, 
                    global::System.Nullable<double> RImplicit2004, 
                    global::System.Nullable<double> RExplicitOldestSibVersion, 
                    global::System.Nullable<double> RExplicitYoungestSibVersion, 
                    global::System.Nullable<double> RExplicitPass1, 
                    global::System.Nullable<double> RExplicit, 
                    global::System.Nullable<double> RPass1, 
                    global::System.Nullable<double> R, 
                    global::System.Nullable<double> RFull, 
                    global::System.Nullable<double> RPeek, 
                    int Original_ID, 
                    short Original_AlgorithmVersion, 
                    int Original_SubjectTag_S1, 
                    int Original_SubjectTag_S2, 
                    byte Original_MultipleBirthIfSameSex, 
                    byte Original_IsMz, 
                    global::System.Nullable<byte> Original_SameGeneration, 
                    global::System.Nullable<byte> Original_RosterAssignmentID, 
                    global::System.Nullable<double> Original_RRoster, 
                    global::System.Nullable<short> Original_LastSurvey_S1, 
                    global::System.Nullable<short> Original_LastSurvey_S2, 
                    global::System.Nullable<double> Original_RImplicitPass1, 
                    global::System.Nullable<double> Original_RImplicit, 
                    global::System.Nullable<double> Original_RImplicitSubject, 
                    global::System.Nullable<double> Original_RImplicitMother, 
                    global::System.Nullable<double> Original_RImplicit2004, 
                    global::System.Nullable<double> Original_RExplicitOldestSibVersion, 
                    global::System.Nullable<double> Original_RExplicitYoungestSibVersion, 
                    global::System.Nullable<double> Original_RExplicitPass1, 
                    global::System.Nullable<double> Original_RExplicit, 
                    global::System.Nullable<double> Original_RPass1, 
                    global::System.Nullable<double> Original_R, 
                    global::System.Nullable<double> Original_RFull, 
                    global::System.Nullable<double> Original_RPeek, 
                    int ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(AlgorithmVersion));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(SubjectTag_S1));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(SubjectTag_S2));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((byte)(MultipleBirthIfSameSex));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((byte)(IsMz));
            if ((SameGeneration.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((byte)(SameGeneration.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((RosterAssignmentID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((byte)(RosterAssignmentID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((RRoster.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(RRoster.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((LastSurvey_S1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((short)(LastSurvey_S1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((LastSurvey_S2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((short)(LastSurvey_S2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((RImplicitPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(RImplicitPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((RImplicit.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(RImplicit.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((RImplicitSubject.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(RImplicitSubject.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((RImplicitMother.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(RImplicitMother.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((RImplicit2004.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(RImplicit2004.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((RExplicitOldestSibVersion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(RExplicitOldestSibVersion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((RExplicitYoungestSibVersion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(RExplicitYoungestSibVersion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((RExplicitPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(RExplicitPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((RExplicit.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(RExplicit.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((RPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(RPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((R.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(R.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((RFull.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(RFull.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((RPeek.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(RPeek.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_ID));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((short)(Original_AlgorithmVersion));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_SubjectTag_S1));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Original_SubjectTag_S2));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((byte)(Original_MultipleBirthIfSameSex));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((byte)(Original_IsMz));
            if ((Original_SameGeneration.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((byte)(Original_SameGeneration.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_RosterAssignmentID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((byte)(Original_RosterAssignmentID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_RRoster.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((double)(Original_RRoster.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_LastSurvey_S1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((short)(Original_LastSurvey_S1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_LastSurvey_S2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((short)(Original_LastSurvey_S2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_RImplicitPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((double)(Original_RImplicitPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_RImplicit.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((double)(Original_RImplicit.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_RImplicitSubject.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((double)(Original_RImplicitSubject.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_RImplicitMother.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((double)(Original_RImplicitMother.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_RImplicit2004.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((double)(Original_RImplicit2004.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_RExplicitOldestSibVersion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((double)(Original_RExplicitOldestSibVersion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_RExplicitYoungestSibVersion.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((double)(Original_RExplicitYoungestSibVersion.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_RExplicitPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((double)(Original_RExplicitPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_RExplicit.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((double)(Original_RExplicit.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_RPass1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((double)(Original_RPass1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_R.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((double)(Original_R.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_RFull.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((double)(Original_RFull.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_RPeek.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((double)(Original_RPeek.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[65].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    short AlgorithmVersion, 
                    int SubjectTag_S1, 
                    int SubjectTag_S2, 
                    byte MultipleBirthIfSameSex, 
                    byte IsMz, 
                    global::System.Nullable<byte> SameGeneration, 
                    global::System.Nullable<byte> RosterAssignmentID, 
                    global::System.Nullable<double> RRoster, 
                    global::System.Nullable<short> LastSurvey_S1, 
                    global::System.Nullable<short> LastSurvey_S2, 
                    global::System.Nullable<double> RImplicitPass1, 
                    global::System.Nullable<double> RImplicit, 
                    global::System.Nullable<double> RImplicitSubject, 
                    global::System.Nullable<double> RImplicitMother, 
                    global::System.Nullable<double> RImplicit2004, 
                    global::System.Nullable<double> RExplicitOldestSibVersion, 
                    global::System.Nullable<double> RExplicitYoungestSibVersion, 
                    global::System.Nullable<double> RExplicitPass1, 
                    global::System.Nullable<double> RExplicit, 
                    global::System.Nullable<double> RPass1, 
                    global::System.Nullable<double> R, 
                    global::System.Nullable<double> RFull, 
                    global::System.Nullable<double> RPeek, 
                    int Original_ID, 
                    short Original_AlgorithmVersion, 
                    int Original_SubjectTag_S1, 
                    int Original_SubjectTag_S2, 
                    byte Original_MultipleBirthIfSameSex, 
                    byte Original_IsMz, 
                    global::System.Nullable<byte> Original_SameGeneration, 
                    global::System.Nullable<byte> Original_RosterAssignmentID, 
                    global::System.Nullable<double> Original_RRoster, 
                    global::System.Nullable<short> Original_LastSurvey_S1, 
                    global::System.Nullable<short> Original_LastSurvey_S2, 
                    global::System.Nullable<double> Original_RImplicitPass1, 
                    global::System.Nullable<double> Original_RImplicit, 
                    global::System.Nullable<double> Original_RImplicitSubject, 
                    global::System.Nullable<double> Original_RImplicitMother, 
                    global::System.Nullable<double> Original_RImplicit2004, 
                    global::System.Nullable<double> Original_RExplicitOldestSibVersion, 
                    global::System.Nullable<double> Original_RExplicitYoungestSibVersion, 
                    global::System.Nullable<double> Original_RExplicitPass1, 
                    global::System.Nullable<double> Original_RExplicit, 
                    global::System.Nullable<double> Original_RPass1, 
                    global::System.Nullable<double> Original_R, 
                    global::System.Nullable<double> Original_RFull, 
                    global::System.Nullable<double> Original_RPeek) {
            return this.Update(AlgorithmVersion, SubjectTag_S1, SubjectTag_S2, MultipleBirthIfSameSex, IsMz, SameGeneration, RosterAssignmentID, RRoster, LastSurvey_S1, LastSurvey_S2, RImplicitPass1, RImplicit, RImplicitSubject, RImplicitMother, RImplicit2004, RExplicitOldestSibVersion, RExplicitYoungestSibVersion, RExplicitPass1, RExplicit, RPass1, R, RFull, RPeek, Original_ID, Original_AlgorithmVersion, Original_SubjectTag_S1, Original_SubjectTag_S2, Original_MultipleBirthIfSameSex, Original_IsMz, Original_SameGeneration, Original_RosterAssignmentID, Original_RRoster, Original_LastSurvey_S1, Original_LastSurvey_S2, Original_RImplicitPass1, Original_RImplicit, Original_RImplicitSubject, Original_RImplicitMother, Original_RImplicit2004, Original_RExplicitOldestSibVersion, Original_RExplicitYoungestSibVersion, Original_RExplicitPass1, Original_RExplicit, Original_RPass1, Original_R, Original_RFull, Original_RPeek, Original_ID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private tblSurveyTimeTableAdapter _tblSurveyTimeTableAdapter;
        
        private tblBabyDaddyTableAdapter _tblBabyDaddyTableAdapter;
        
        private tblFatherOfGen2TableAdapter _tblFatherOfGen2TableAdapter;
        
        private tblRosterGen1TableAdapter _tblRosterGen1TableAdapter;
        
        private tblResponseTableAdapter _tblResponseTableAdapter;
        
        private tblMarkerGen1TableAdapter _tblMarkerGen1TableAdapter;
        
        private tblMarkerGen2TableAdapter _tblMarkerGen2TableAdapter;
        
        private tblParentsOfGen1RetroTableAdapter _tblParentsOfGen1RetroTableAdapter;
        
        private tblParentsOfGen1CurrentTableAdapter _tblParentsOfGen1CurrentTableAdapter;
        
        private tblOutcomeTableAdapter _tblOutcomeTableAdapter;
        
        private tblSubjectTableAdapter _tblSubjectTableAdapter;
        
        private tblRelatedStructureTableAdapter _tblRelatedStructureTableAdapter;
        
        private tblRelatedValuesTableAdapter _tblRelatedValuesTableAdapter;
        
        private tblSubjectDetailsTableAdapter _tblSubjectDetailsTableAdapter;
        
        private tblMzManualTableAdapter _tblMzManualTableAdapter;
        
        private tblRosterGen1AssignmentTableAdapter _tblRosterGen1AssignmentTableAdapter;
        
        private tblVariableTableAdapter _tblVariableTableAdapter;
        
        private tblItemTableAdapter _tblItemTableAdapter;
        
        private tblRelatedValuesArchiveTableAdapter _tblRelatedValuesArchiveTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tblSurveyTimeTableAdapter tblSurveyTimeTableAdapter {
            get {
                return this._tblSurveyTimeTableAdapter;
            }
            set {
                this._tblSurveyTimeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tblBabyDaddyTableAdapter tblBabyDaddyTableAdapter {
            get {
                return this._tblBabyDaddyTableAdapter;
            }
            set {
                this._tblBabyDaddyTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tblFatherOfGen2TableAdapter tblFatherOfGen2TableAdapter {
            get {
                return this._tblFatherOfGen2TableAdapter;
            }
            set {
                this._tblFatherOfGen2TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tblRosterGen1TableAdapter tblRosterGen1TableAdapter {
            get {
                return this._tblRosterGen1TableAdapter;
            }
            set {
                this._tblRosterGen1TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tblResponseTableAdapter tblResponseTableAdapter {
            get {
                return this._tblResponseTableAdapter;
            }
            set {
                this._tblResponseTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tblMarkerGen1TableAdapter tblMarkerGen1TableAdapter {
            get {
                return this._tblMarkerGen1TableAdapter;
            }
            set {
                this._tblMarkerGen1TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tblMarkerGen2TableAdapter tblMarkerGen2TableAdapter {
            get {
                return this._tblMarkerGen2TableAdapter;
            }
            set {
                this._tblMarkerGen2TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tblParentsOfGen1RetroTableAdapter tblParentsOfGen1RetroTableAdapter {
            get {
                return this._tblParentsOfGen1RetroTableAdapter;
            }
            set {
                this._tblParentsOfGen1RetroTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tblParentsOfGen1CurrentTableAdapter tblParentsOfGen1CurrentTableAdapter {
            get {
                return this._tblParentsOfGen1CurrentTableAdapter;
            }
            set {
                this._tblParentsOfGen1CurrentTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tblOutcomeTableAdapter tblOutcomeTableAdapter {
            get {
                return this._tblOutcomeTableAdapter;
            }
            set {
                this._tblOutcomeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tblSubjectTableAdapter tblSubjectTableAdapter {
            get {
                return this._tblSubjectTableAdapter;
            }
            set {
                this._tblSubjectTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tblRelatedStructureTableAdapter tblRelatedStructureTableAdapter {
            get {
                return this._tblRelatedStructureTableAdapter;
            }
            set {
                this._tblRelatedStructureTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tblRelatedValuesTableAdapter tblRelatedValuesTableAdapter {
            get {
                return this._tblRelatedValuesTableAdapter;
            }
            set {
                this._tblRelatedValuesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tblSubjectDetailsTableAdapter tblSubjectDetailsTableAdapter {
            get {
                return this._tblSubjectDetailsTableAdapter;
            }
            set {
                this._tblSubjectDetailsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tblMzManualTableAdapter tblMzManualTableAdapter {
            get {
                return this._tblMzManualTableAdapter;
            }
            set {
                this._tblMzManualTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tblRosterGen1AssignmentTableAdapter tblRosterGen1AssignmentTableAdapter {
            get {
                return this._tblRosterGen1AssignmentTableAdapter;
            }
            set {
                this._tblRosterGen1AssignmentTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tblVariableTableAdapter tblVariableTableAdapter {
            get {
                return this._tblVariableTableAdapter;
            }
            set {
                this._tblVariableTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tblItemTableAdapter tblItemTableAdapter {
            get {
                return this._tblItemTableAdapter;
            }
            set {
                this._tblItemTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tblRelatedValuesArchiveTableAdapter tblRelatedValuesArchiveTableAdapter {
            get {
                return this._tblRelatedValuesArchiveTableAdapter;
            }
            set {
                this._tblRelatedValuesArchiveTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tblSurveyTimeTableAdapter != null) 
                            && (this._tblSurveyTimeTableAdapter.Connection != null))) {
                    return this._tblSurveyTimeTableAdapter.Connection;
                }
                if (((this._tblBabyDaddyTableAdapter != null) 
                            && (this._tblBabyDaddyTableAdapter.Connection != null))) {
                    return this._tblBabyDaddyTableAdapter.Connection;
                }
                if (((this._tblFatherOfGen2TableAdapter != null) 
                            && (this._tblFatherOfGen2TableAdapter.Connection != null))) {
                    return this._tblFatherOfGen2TableAdapter.Connection;
                }
                if (((this._tblRosterGen1TableAdapter != null) 
                            && (this._tblRosterGen1TableAdapter.Connection != null))) {
                    return this._tblRosterGen1TableAdapter.Connection;
                }
                if (((this._tblResponseTableAdapter != null) 
                            && (this._tblResponseTableAdapter.Connection != null))) {
                    return this._tblResponseTableAdapter.Connection;
                }
                if (((this._tblMarkerGen1TableAdapter != null) 
                            && (this._tblMarkerGen1TableAdapter.Connection != null))) {
                    return this._tblMarkerGen1TableAdapter.Connection;
                }
                if (((this._tblMarkerGen2TableAdapter != null) 
                            && (this._tblMarkerGen2TableAdapter.Connection != null))) {
                    return this._tblMarkerGen2TableAdapter.Connection;
                }
                if (((this._tblParentsOfGen1RetroTableAdapter != null) 
                            && (this._tblParentsOfGen1RetroTableAdapter.Connection != null))) {
                    return this._tblParentsOfGen1RetroTableAdapter.Connection;
                }
                if (((this._tblParentsOfGen1CurrentTableAdapter != null) 
                            && (this._tblParentsOfGen1CurrentTableAdapter.Connection != null))) {
                    return this._tblParentsOfGen1CurrentTableAdapter.Connection;
                }
                if (((this._tblOutcomeTableAdapter != null) 
                            && (this._tblOutcomeTableAdapter.Connection != null))) {
                    return this._tblOutcomeTableAdapter.Connection;
                }
                if (((this._tblSubjectTableAdapter != null) 
                            && (this._tblSubjectTableAdapter.Connection != null))) {
                    return this._tblSubjectTableAdapter.Connection;
                }
                if (((this._tblRelatedStructureTableAdapter != null) 
                            && (this._tblRelatedStructureTableAdapter.Connection != null))) {
                    return this._tblRelatedStructureTableAdapter.Connection;
                }
                if (((this._tblRelatedValuesTableAdapter != null) 
                            && (this._tblRelatedValuesTableAdapter.Connection != null))) {
                    return this._tblRelatedValuesTableAdapter.Connection;
                }
                if (((this._tblSubjectDetailsTableAdapter != null) 
                            && (this._tblSubjectDetailsTableAdapter.Connection != null))) {
                    return this._tblSubjectDetailsTableAdapter.Connection;
                }
                if (((this._tblMzManualTableAdapter != null) 
                            && (this._tblMzManualTableAdapter.Connection != null))) {
                    return this._tblMzManualTableAdapter.Connection;
                }
                if (((this._tblRosterGen1AssignmentTableAdapter != null) 
                            && (this._tblRosterGen1AssignmentTableAdapter.Connection != null))) {
                    return this._tblRosterGen1AssignmentTableAdapter.Connection;
                }
                if (((this._tblVariableTableAdapter != null) 
                            && (this._tblVariableTableAdapter.Connection != null))) {
                    return this._tblVariableTableAdapter.Connection;
                }
                if (((this._tblItemTableAdapter != null) 
                            && (this._tblItemTableAdapter.Connection != null))) {
                    return this._tblItemTableAdapter.Connection;
                }
                if (((this._tblRelatedValuesArchiveTableAdapter != null) 
                            && (this._tblRelatedValuesArchiveTableAdapter.Connection != null))) {
                    return this._tblRelatedValuesArchiveTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tblSurveyTimeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblBabyDaddyTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblFatherOfGen2TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblRosterGen1TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblResponseTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblMarkerGen1TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblMarkerGen2TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblParentsOfGen1RetroTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblParentsOfGen1CurrentTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblOutcomeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblSubjectTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblRelatedStructureTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblRelatedValuesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblSubjectDetailsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblMzManualTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblRosterGen1AssignmentTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblVariableTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblItemTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblRelatedValuesArchiveTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(LinksDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tblSubjectTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblSubject.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblSubjectTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tblRosterGen1AssignmentTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblRosterGen1Assignment.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblRosterGen1AssignmentTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tblRelatedStructureTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblRelatedStructure.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblRelatedStructureTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tblItemTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblItem.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblItemTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tblSurveyTimeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblSurveyTime.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblSurveyTimeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tblVariableTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblVariable.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblVariableTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tblMzManualTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblMzManual.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblMzManualTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tblSubjectDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblSubjectDetails.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblSubjectDetailsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tblRelatedValuesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblRelatedValues.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblRelatedValuesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tblOutcomeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblOutcome.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblOutcomeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tblParentsOfGen1CurrentTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblParentsOfGen1Current.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblParentsOfGen1CurrentTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tblMarkerGen2TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblMarkerGen2.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblMarkerGen2TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tblMarkerGen1TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblMarkerGen1.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblMarkerGen1TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tblResponseTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblResponse.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblResponseTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tblRosterGen1TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblRosterGen1.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblRosterGen1TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tblFatherOfGen2TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblFatherOfGen2.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblFatherOfGen2TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tblBabyDaddyTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblBabyDaddy.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblBabyDaddyTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tblParentsOfGen1RetroTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblParentsOfGen1Retro.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblParentsOfGen1RetroTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tblRelatedValuesArchiveTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblRelatedValuesArchive.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblRelatedValuesArchiveTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(LinksDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tblSubjectTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblSubject.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblSubjectTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tblRosterGen1AssignmentTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblRosterGen1Assignment.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblRosterGen1AssignmentTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tblRelatedStructureTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblRelatedStructure.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblRelatedStructureTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tblItemTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblItem.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblItemTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tblSurveyTimeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblSurveyTime.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblSurveyTimeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tblVariableTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblVariable.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblVariableTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tblMzManualTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblMzManual.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblMzManualTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tblSubjectDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblSubjectDetails.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblSubjectDetailsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tblRelatedValuesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblRelatedValues.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblRelatedValuesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tblOutcomeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblOutcome.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblOutcomeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tblParentsOfGen1CurrentTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblParentsOfGen1Current.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblParentsOfGen1CurrentTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tblMarkerGen2TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblMarkerGen2.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblMarkerGen2TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tblMarkerGen1TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblMarkerGen1.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblMarkerGen1TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tblResponseTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblResponse.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblResponseTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tblRosterGen1TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblRosterGen1.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblRosterGen1TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tblFatherOfGen2TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblFatherOfGen2.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblFatherOfGen2TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tblBabyDaddyTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblBabyDaddy.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblBabyDaddyTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tblParentsOfGen1RetroTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblParentsOfGen1Retro.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblParentsOfGen1RetroTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tblRelatedValuesArchiveTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblRelatedValuesArchive.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblRelatedValuesArchiveTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(LinksDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tblRelatedValuesArchiveTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblRelatedValuesArchive.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblRelatedValuesArchiveTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tblParentsOfGen1RetroTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblParentsOfGen1Retro.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblParentsOfGen1RetroTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tblBabyDaddyTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblBabyDaddy.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblBabyDaddyTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tblFatherOfGen2TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblFatherOfGen2.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblFatherOfGen2TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tblRosterGen1TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblRosterGen1.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblRosterGen1TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tblResponseTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblResponse.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblResponseTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tblMarkerGen1TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblMarkerGen1.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblMarkerGen1TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tblMarkerGen2TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblMarkerGen2.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblMarkerGen2TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tblParentsOfGen1CurrentTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblParentsOfGen1Current.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblParentsOfGen1CurrentTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tblOutcomeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblOutcome.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblOutcomeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tblRelatedValuesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblRelatedValues.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblRelatedValuesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tblSubjectDetailsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblSubjectDetails.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblSubjectDetailsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tblMzManualTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblMzManual.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblMzManualTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tblVariableTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblVariable.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblVariableTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tblSurveyTimeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblSurveyTime.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblSurveyTimeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tblItemTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblItem.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblItemTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tblRelatedStructureTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblRelatedStructure.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblRelatedStructureTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tblRosterGen1AssignmentTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblRosterGen1Assignment.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblRosterGen1AssignmentTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tblSubjectTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblSubject.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblSubjectTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(LinksDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tblSurveyTimeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblSurveyTimeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblBabyDaddyTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblBabyDaddyTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblFatherOfGen2TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblFatherOfGen2TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblRosterGen1TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblRosterGen1TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblResponseTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblResponseTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblMarkerGen1TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblMarkerGen1TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblMarkerGen2TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblMarkerGen2TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblParentsOfGen1RetroTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblParentsOfGen1RetroTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblParentsOfGen1CurrentTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblParentsOfGen1CurrentTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblOutcomeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblOutcomeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblSubjectTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblSubjectTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblRelatedStructureTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblRelatedStructureTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblRelatedValuesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblRelatedValuesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblSubjectDetailsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblSubjectDetailsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblMzManualTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblMzManualTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblRosterGen1AssignmentTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblRosterGen1AssignmentTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblVariableTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblVariableTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblItemTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblItemTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblRelatedValuesArchiveTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblRelatedValuesArchiveTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tblSurveyTimeTableAdapter != null)) {
                    revertConnections.Add(this._tblSurveyTimeTableAdapter, this._tblSurveyTimeTableAdapter.Connection);
                    this._tblSurveyTimeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblSurveyTimeTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblSurveyTimeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblSurveyTimeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblSurveyTimeTableAdapter.Adapter);
                    }
                }
                if ((this._tblBabyDaddyTableAdapter != null)) {
                    revertConnections.Add(this._tblBabyDaddyTableAdapter, this._tblBabyDaddyTableAdapter.Connection);
                    this._tblBabyDaddyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblBabyDaddyTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblBabyDaddyTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblBabyDaddyTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblBabyDaddyTableAdapter.Adapter);
                    }
                }
                if ((this._tblFatherOfGen2TableAdapter != null)) {
                    revertConnections.Add(this._tblFatherOfGen2TableAdapter, this._tblFatherOfGen2TableAdapter.Connection);
                    this._tblFatherOfGen2TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblFatherOfGen2TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblFatherOfGen2TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblFatherOfGen2TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblFatherOfGen2TableAdapter.Adapter);
                    }
                }
                if ((this._tblRosterGen1TableAdapter != null)) {
                    revertConnections.Add(this._tblRosterGen1TableAdapter, this._tblRosterGen1TableAdapter.Connection);
                    this._tblRosterGen1TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblRosterGen1TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblRosterGen1TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblRosterGen1TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblRosterGen1TableAdapter.Adapter);
                    }
                }
                if ((this._tblResponseTableAdapter != null)) {
                    revertConnections.Add(this._tblResponseTableAdapter, this._tblResponseTableAdapter.Connection);
                    this._tblResponseTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblResponseTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblResponseTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblResponseTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblResponseTableAdapter.Adapter);
                    }
                }
                if ((this._tblMarkerGen1TableAdapter != null)) {
                    revertConnections.Add(this._tblMarkerGen1TableAdapter, this._tblMarkerGen1TableAdapter.Connection);
                    this._tblMarkerGen1TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblMarkerGen1TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblMarkerGen1TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblMarkerGen1TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblMarkerGen1TableAdapter.Adapter);
                    }
                }
                if ((this._tblMarkerGen2TableAdapter != null)) {
                    revertConnections.Add(this._tblMarkerGen2TableAdapter, this._tblMarkerGen2TableAdapter.Connection);
                    this._tblMarkerGen2TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblMarkerGen2TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblMarkerGen2TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblMarkerGen2TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblMarkerGen2TableAdapter.Adapter);
                    }
                }
                if ((this._tblParentsOfGen1RetroTableAdapter != null)) {
                    revertConnections.Add(this._tblParentsOfGen1RetroTableAdapter, this._tblParentsOfGen1RetroTableAdapter.Connection);
                    this._tblParentsOfGen1RetroTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblParentsOfGen1RetroTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblParentsOfGen1RetroTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblParentsOfGen1RetroTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblParentsOfGen1RetroTableAdapter.Adapter);
                    }
                }
                if ((this._tblParentsOfGen1CurrentTableAdapter != null)) {
                    revertConnections.Add(this._tblParentsOfGen1CurrentTableAdapter, this._tblParentsOfGen1CurrentTableAdapter.Connection);
                    this._tblParentsOfGen1CurrentTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblParentsOfGen1CurrentTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblParentsOfGen1CurrentTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblParentsOfGen1CurrentTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblParentsOfGen1CurrentTableAdapter.Adapter);
                    }
                }
                if ((this._tblOutcomeTableAdapter != null)) {
                    revertConnections.Add(this._tblOutcomeTableAdapter, this._tblOutcomeTableAdapter.Connection);
                    this._tblOutcomeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblOutcomeTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblOutcomeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblOutcomeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblOutcomeTableAdapter.Adapter);
                    }
                }
                if ((this._tblSubjectTableAdapter != null)) {
                    revertConnections.Add(this._tblSubjectTableAdapter, this._tblSubjectTableAdapter.Connection);
                    this._tblSubjectTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblSubjectTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblSubjectTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblSubjectTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblSubjectTableAdapter.Adapter);
                    }
                }
                if ((this._tblRelatedStructureTableAdapter != null)) {
                    revertConnections.Add(this._tblRelatedStructureTableAdapter, this._tblRelatedStructureTableAdapter.Connection);
                    this._tblRelatedStructureTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblRelatedStructureTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblRelatedStructureTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblRelatedStructureTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblRelatedStructureTableAdapter.Adapter);
                    }
                }
                if ((this._tblRelatedValuesTableAdapter != null)) {
                    revertConnections.Add(this._tblRelatedValuesTableAdapter, this._tblRelatedValuesTableAdapter.Connection);
                    this._tblRelatedValuesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblRelatedValuesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblRelatedValuesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblRelatedValuesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblRelatedValuesTableAdapter.Adapter);
                    }
                }
                if ((this._tblSubjectDetailsTableAdapter != null)) {
                    revertConnections.Add(this._tblSubjectDetailsTableAdapter, this._tblSubjectDetailsTableAdapter.Connection);
                    this._tblSubjectDetailsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblSubjectDetailsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblSubjectDetailsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblSubjectDetailsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblSubjectDetailsTableAdapter.Adapter);
                    }
                }
                if ((this._tblMzManualTableAdapter != null)) {
                    revertConnections.Add(this._tblMzManualTableAdapter, this._tblMzManualTableAdapter.Connection);
                    this._tblMzManualTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblMzManualTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblMzManualTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblMzManualTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblMzManualTableAdapter.Adapter);
                    }
                }
                if ((this._tblRosterGen1AssignmentTableAdapter != null)) {
                    revertConnections.Add(this._tblRosterGen1AssignmentTableAdapter, this._tblRosterGen1AssignmentTableAdapter.Connection);
                    this._tblRosterGen1AssignmentTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblRosterGen1AssignmentTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblRosterGen1AssignmentTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblRosterGen1AssignmentTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblRosterGen1AssignmentTableAdapter.Adapter);
                    }
                }
                if ((this._tblVariableTableAdapter != null)) {
                    revertConnections.Add(this._tblVariableTableAdapter, this._tblVariableTableAdapter.Connection);
                    this._tblVariableTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblVariableTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblVariableTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblVariableTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblVariableTableAdapter.Adapter);
                    }
                }
                if ((this._tblItemTableAdapter != null)) {
                    revertConnections.Add(this._tblItemTableAdapter, this._tblItemTableAdapter.Connection);
                    this._tblItemTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblItemTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblItemTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblItemTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblItemTableAdapter.Adapter);
                    }
                }
                if ((this._tblRelatedValuesArchiveTableAdapter != null)) {
                    revertConnections.Add(this._tblRelatedValuesArchiveTableAdapter, this._tblRelatedValuesArchiveTableAdapter.Connection);
                    this._tblRelatedValuesArchiveTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblRelatedValuesArchiveTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblRelatedValuesArchiveTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblRelatedValuesArchiveTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblRelatedValuesArchiveTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tblSurveyTimeTableAdapter != null)) {
                    this._tblSurveyTimeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblSurveyTimeTableAdapter]));
                    this._tblSurveyTimeTableAdapter.Transaction = null;
                }
                if ((this._tblBabyDaddyTableAdapter != null)) {
                    this._tblBabyDaddyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblBabyDaddyTableAdapter]));
                    this._tblBabyDaddyTableAdapter.Transaction = null;
                }
                if ((this._tblFatherOfGen2TableAdapter != null)) {
                    this._tblFatherOfGen2TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblFatherOfGen2TableAdapter]));
                    this._tblFatherOfGen2TableAdapter.Transaction = null;
                }
                if ((this._tblRosterGen1TableAdapter != null)) {
                    this._tblRosterGen1TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblRosterGen1TableAdapter]));
                    this._tblRosterGen1TableAdapter.Transaction = null;
                }
                if ((this._tblResponseTableAdapter != null)) {
                    this._tblResponseTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblResponseTableAdapter]));
                    this._tblResponseTableAdapter.Transaction = null;
                }
                if ((this._tblMarkerGen1TableAdapter != null)) {
                    this._tblMarkerGen1TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblMarkerGen1TableAdapter]));
                    this._tblMarkerGen1TableAdapter.Transaction = null;
                }
                if ((this._tblMarkerGen2TableAdapter != null)) {
                    this._tblMarkerGen2TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblMarkerGen2TableAdapter]));
                    this._tblMarkerGen2TableAdapter.Transaction = null;
                }
                if ((this._tblParentsOfGen1RetroTableAdapter != null)) {
                    this._tblParentsOfGen1RetroTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblParentsOfGen1RetroTableAdapter]));
                    this._tblParentsOfGen1RetroTableAdapter.Transaction = null;
                }
                if ((this._tblParentsOfGen1CurrentTableAdapter != null)) {
                    this._tblParentsOfGen1CurrentTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblParentsOfGen1CurrentTableAdapter]));
                    this._tblParentsOfGen1CurrentTableAdapter.Transaction = null;
                }
                if ((this._tblOutcomeTableAdapter != null)) {
                    this._tblOutcomeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblOutcomeTableAdapter]));
                    this._tblOutcomeTableAdapter.Transaction = null;
                }
                if ((this._tblSubjectTableAdapter != null)) {
                    this._tblSubjectTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblSubjectTableAdapter]));
                    this._tblSubjectTableAdapter.Transaction = null;
                }
                if ((this._tblRelatedStructureTableAdapter != null)) {
                    this._tblRelatedStructureTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblRelatedStructureTableAdapter]));
                    this._tblRelatedStructureTableAdapter.Transaction = null;
                }
                if ((this._tblRelatedValuesTableAdapter != null)) {
                    this._tblRelatedValuesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblRelatedValuesTableAdapter]));
                    this._tblRelatedValuesTableAdapter.Transaction = null;
                }
                if ((this._tblSubjectDetailsTableAdapter != null)) {
                    this._tblSubjectDetailsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblSubjectDetailsTableAdapter]));
                    this._tblSubjectDetailsTableAdapter.Transaction = null;
                }
                if ((this._tblMzManualTableAdapter != null)) {
                    this._tblMzManualTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblMzManualTableAdapter]));
                    this._tblMzManualTableAdapter.Transaction = null;
                }
                if ((this._tblRosterGen1AssignmentTableAdapter != null)) {
                    this._tblRosterGen1AssignmentTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblRosterGen1AssignmentTableAdapter]));
                    this._tblRosterGen1AssignmentTableAdapter.Transaction = null;
                }
                if ((this._tblVariableTableAdapter != null)) {
                    this._tblVariableTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblVariableTableAdapter]));
                    this._tblVariableTableAdapter.Transaction = null;
                }
                if ((this._tblItemTableAdapter != null)) {
                    this._tblItemTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblItemTableAdapter]));
                    this._tblItemTableAdapter.Transaction = null;
                }
                if ((this._tblRelatedValuesArchiveTableAdapter != null)) {
                    this._tblRelatedValuesArchiveTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblRelatedValuesArchiveTableAdapter]));
                    this._tblRelatedValuesArchiveTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591